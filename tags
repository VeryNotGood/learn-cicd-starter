!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Go	package	/the real package specified by the package name/
!_TAG_FIELD_DESCRIPTION!Go	packageName	/the name for referring the package/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!DTD	E,entity	/entities/
!_TAG_KIND_DESCRIPTION!DTD	a,attribute	/attributes/
!_TAG_KIND_DESCRIPTION!DTD	e,element	/elements/
!_TAG_KIND_DESCRIPTION!DTD	n,notation	/notations/
!_TAG_KIND_DESCRIPTION!DTD	p,parameterEntity	/parameter entities/
!_TAG_KIND_DESCRIPTION!Go	M,anonMember	/struct anonymous members/
!_TAG_KIND_DESCRIPTION!Go	P,packageName	/name for specifying imported package/
!_TAG_KIND_DESCRIPTION!Go	Y,unknown	/unknown/
!_TAG_KIND_DESCRIPTION!Go	a,talias	/type aliases/
!_TAG_KIND_DESCRIPTION!Go	c,const	/constants/
!_TAG_KIND_DESCRIPTION!Go	f,func	/functions/
!_TAG_KIND_DESCRIPTION!Go	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!Go	m,member	/struct members/
!_TAG_KIND_DESCRIPTION!Go	n,methodSpec	/interface method specification/
!_TAG_KIND_DESCRIPTION!Go	p,package	/packages/
!_TAG_KIND_DESCRIPTION!Go	s,struct	/structs/
!_TAG_KIND_DESCRIPTION!Go	t,type	/types/
!_TAG_KIND_DESCRIPTION!Go	v,var	/variables/
!_TAG_KIND_DESCRIPTION!HTML	C,stylesheet	/stylesheets/
!_TAG_KIND_DESCRIPTION!HTML	I,id	/identifiers/
!_TAG_KIND_DESCRIPTION!HTML	J,script	/scripts/
!_TAG_KIND_DESCRIPTION!HTML	a,anchor	/named anchors/
!_TAG_KIND_DESCRIPTION!HTML	c,class	/classes/
!_TAG_KIND_DESCRIPTION!HTML	h,heading1	/H1 headings/
!_TAG_KIND_DESCRIPTION!HTML	i,heading2	/H2 headings/
!_TAG_KIND_DESCRIPTION!HTML	j,heading3	/H3 headings/
!_TAG_KIND_DESCRIPTION!HTML	t,title	/titles/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!SQL	C,ccflag	/PLSQL_CCFLAGS/
!_TAG_KIND_DESCRIPTION!SQL	D,domain	/domains/
!_TAG_KIND_DESCRIPTION!SQL	E,field	/record fields/
!_TAG_KIND_DESCRIPTION!SQL	L,label	/block label/
!_TAG_KIND_DESCRIPTION!SQL	P,package	/packages/
!_TAG_KIND_DESCRIPTION!SQL	R,service	/services/
!_TAG_KIND_DESCRIPTION!SQL	S,schema	/schemas/
!_TAG_KIND_DESCRIPTION!SQL	T,trigger	/triggers/
!_TAG_KIND_DESCRIPTION!SQL	U,publication	/publications/
!_TAG_KIND_DESCRIPTION!SQL	V,view	/views/
!_TAG_KIND_DESCRIPTION!SQL	b,database	/database/
!_TAG_KIND_DESCRIPTION!SQL	c,cursor	/cursors/
!_TAG_KIND_DESCRIPTION!SQL	e,event	/events/
!_TAG_KIND_DESCRIPTION!SQL	f,function	/functions/
!_TAG_KIND_DESCRIPTION!SQL	i,index	/indexes/
!_TAG_KIND_DESCRIPTION!SQL	n,synonym	/synonyms/
!_TAG_KIND_DESCRIPTION!SQL	p,procedure	/procedures/
!_TAG_KIND_DESCRIPTION!SQL	s,subtype	/subtypes/
!_TAG_KIND_DESCRIPTION!SQL	t,table	/tables/
!_TAG_KIND_DESCRIPTION!SQL	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!SQL	x,mltable	/MobiLink Table Scripts/
!_TAG_KIND_DESCRIPTION!SQL	y,mlconn	/MobiLink Conn Scripts/
!_TAG_KIND_DESCRIPTION!SQL	z,mlprop	/MobiLink Properties/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_KIND_DESCRIPTION!Yaml	a,anchor	/anchors/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!DTD	0.0	/current.age/
!_TAG_PARSER_VERSION!Go	0.0	/current.age/
!_TAG_PARSER_VERSION!HTML	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PARSER_VERSION!SQL	0.0	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PARSER_VERSION!Yaml	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/sbelmor/workspace/Kubernetes/learn-cicd-starter/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/p6.1.20240310.0/
!_TAG_ROLE_DESCRIPTION!DTD!element	attOwner	/attributes owner/
!_TAG_ROLE_DESCRIPTION!DTD!parameterEntity	condition	/conditions/
!_TAG_ROLE_DESCRIPTION!DTD!parameterEntity	elementName	/element names/
!_TAG_ROLE_DESCRIPTION!DTD!parameterEntity	partOfAttDef	/part of attribute definition/
!_TAG_ROLE_DESCRIPTION!Go!package	imported	/imported package/
!_TAG_ROLE_DESCRIPTION!Go!unknown	receiverType	/receiver type/
!_TAG_ROLE_DESCRIPTION!HTML!class	attribute	/assigned as attributes/
!_TAG_ROLE_DESCRIPTION!HTML!script	extFile	/referenced as external files/
!_TAG_ROLE_DESCRIPTION!HTML!stylesheet	extFile	/referenced as external files/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
!_TAG_ROLE_DESCRIPTION!Yaml!anchor	alias	/alias/
<img alt="chi" src="https://cdn.rawgit.com/go-chi/chi/master/_examples/chi.svg" width="220" />	vendor/github.com/go-chi/chi/README.md	/^# <img alt="chi" src="https:\/\/cdn.rawgit.com\/go-chi\/chi\/master\/_examples\/chi.svg" width="/;"	c
ABORT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ABORT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IConflict_clauseContext	typeref:typename:antlr.TerminalNode
ABORT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ABORT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:antlr.TerminalNode
ABORT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ABORT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
ABORT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ABORT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IRaise_functionContext	typeref:typename:antlr.TerminalNode
ABORT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ABORT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:antlr.TerminalNode
ABORT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ABORT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:antlr.TerminalNode
ABORT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Conflict_clauseContext) ABORT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Conflict_clauseContext	typeref:typename:antlr.TerminalNode
ABORT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) ABORT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:antlr.TerminalNode
ABORT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) ABORT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
ABORT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Raise_functionContext) ABORT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Raise_functionContext	typeref:typename:antlr.TerminalNode
ABORT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) ABORT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:antlr.TerminalNode
ABORT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) ABORT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:antlr.TerminalNode
ACTION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ACTION_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
ACTION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ACTION_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:antlr.TerminalNode
ACTION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) ACTION_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.TerminalNode
ACTION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) ACTION_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
ADD_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ADD_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAlter_table_stmtContext	typeref:typename:antlr.TerminalNode
ADD_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ADD_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
ADD_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) ADD_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:antlr.TerminalNode
ADD_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) ADD_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
AFTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AFTER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
AFTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AFTER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
AFTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) AFTER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
AFTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) AFTER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
ALL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ALL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICompound_operatorContext	typeref:typename:antlr.TerminalNode
ALL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ALL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
ALL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ALL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IRecursive_cteContext	typeref:typename:antlr.TerminalNode
ALL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ALL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:antlr.TerminalNode
ALL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ALL_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ICompound_select_stmtContext	typeref:typename:antlr.TerminalNode
ALL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_operatorContext) ALL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Compound_operatorContext	typeref:typename:antlr.TerminalNode
ALL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_select_stmtContext) ALL_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Compound_select_stmtContext	typeref:typename:antlr.TerminalNode
ALL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) ALL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
ALL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Recursive_cteContext) ALL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Recursive_cteContext	typeref:typename:antlr.TerminalNode
ALL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) ALL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:antlr.TerminalNode
ALTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ALTER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAlter_table_stmtContext	typeref:typename:antlr.TerminalNode
ALTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ALTER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
ALTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) ALTER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:antlr.TerminalNode
ALTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) ALTER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
ALWAYS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ALWAYS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:antlr.TerminalNode
ALWAYS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ALWAYS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
ALWAYS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) ALWAYS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:antlr.TerminalNode
ALWAYS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) ALWAYS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
AMP	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AMP() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
AMP	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) AMP() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
ANALYZE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ANALYZE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAnalyze_stmtContext	typeref:typename:antlr.TerminalNode
ANALYZE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ANALYZE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
ANALYZE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Analyze_stmtContext) ANALYZE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Analyze_stmtContext	typeref:typename:antlr.TerminalNode
ANALYZE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) ANALYZE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
AND	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^type AND struct {$/;"	s	package:antlr
AND_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AND_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
AND_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AND_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_clauseContext	typeref:typename:antlr.TerminalNode
AND_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AND_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
AND_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) AND_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
AND_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_clauseContext) AND_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_clauseContext	typeref:typename:antlr.TerminalNode
AND_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) AND_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
ASC_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ASC_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAsc_descContext	typeref:typename:antlr.TerminalNode
ASC_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ASC_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
ASC_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Asc_descContext) ASC_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Asc_descContext	typeref:typename:antlr.TerminalNode
ASC_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) ASC_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
ASSIGN	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ASSIGN() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
ASSIGN	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ASSIGN() antlr.TerminalNode$/;"	n	interface:sqliteparser.IPragma_stmtContext	typeref:typename:antlr.TerminalNode
ASSIGN	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ASSIGN(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:antlr.TerminalNode
ASSIGN	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ASSIGN(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:antlr.TerminalNode
ASSIGN	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ASSIGN(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:antlr.TerminalNode
ASSIGN	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) ASSIGN() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
ASSIGN	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_stmtContext) ASSIGN() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Pragma_stmtContext	typeref:typename:antlr.TerminalNode
ASSIGN	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) ASSIGN(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:antlr.TerminalNode
ASSIGN	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) ASSIGN(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:antlr.TerminalNode
ASSIGN	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) ASSIGN(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAttach_stmtContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICommon_table_expressionContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_view_stmtContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IQualified_table_nameContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IRecursive_cteContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IResult_columnContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ITable_or_subqueryContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AS_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AS_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IWith_clauseContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Attach_stmtContext) AS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Attach_stmtContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) AS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_expressionContext) AS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Common_table_expressionContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) AS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) AS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_view_stmtContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) AS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) AS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) AS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Qualified_table_nameContext) AS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Qualified_table_nameContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Recursive_cteContext) AS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Recursive_cteContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Result_columnContext) AS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Result_columnContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) AS_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) AS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:antlr.TerminalNode
AS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *With_clauseContext) AS_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.With_clauseContext	typeref:typename:antlr.TerminalNode
ATN	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^type ATN struct {$/;"	s	package:antlr
ATN	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_simulator.go	/^	ATN() *ATN$/;"	n	interface:antlr.IATNSimulator	typeref:typename:*ATN
ATN	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_simulator.go	/^func (b *BaseATNSimulator) ATN() *ATN {$/;"	f	struct:antlr.BaseATNSimulator	typeref:typename:*ATN
ATNAltConfigComparator	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/comparators.go	/^type ATNAltConfigComparator[T Collectable[T]] struct {$/;"	t	package:antlr	typeref:typename:[T Collectable[T]] struct { }
ATNConfig	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^type ATNConfig interface {$/;"	i	package:antlr
ATNConfigComparator	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/comparators.go	/^type ATNConfigComparator[T Collectable[T]] struct {$/;"	t	package:antlr	typeref:typename:[T Collectable[T]] struct { }
ATNConfigSet	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^type ATNConfigSet interface {$/;"	i	package:antlr
ATNConfigSetPair	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^type ATNConfigSetPair struct {$/;"	s	package:antlr
ATNDeserializationOptions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserialization_options.go	/^type ATNDeserializationOptions struct {$/;"	s	package:antlr
ATNDeserializer	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^type ATNDeserializer struct {$/;"	s	package:antlr
ATNInvalidAltNumber	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^var ATNInvalidAltNumber int$/;"	v	package:antlr	typeref:typename:int
ATNSimulatorError	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_simulator.go	/^var ATNSimulatorError = NewDFAState(0x7FFFFFFF, NewBaseATNConfigSet(false))$/;"	v	package:antlr
ATNState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^type ATNState interface {$/;"	i	package:antlr
ATNStateBasic	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	ATNStateBasic          = 1$/;"	c	package:antlr
ATNStateBlockEnd	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	ATNStateBlockEnd       = 8$/;"	c	package:antlr
ATNStateBlockStart	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	ATNStateBlockStart     = 3$/;"	c	package:antlr
ATNStateInitialNumTransitions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^var ATNStateInitialNumTransitions = 4$/;"	v	package:antlr
ATNStateInvalidStateNumber	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	ATNStateInvalidStateNumber = -1$/;"	c	package:antlr
ATNStateInvalidType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	ATNStateInvalidType    = 0$/;"	c	package:antlr
ATNStateLoopEnd	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	ATNStateLoopEnd        = 12$/;"	c	package:antlr
ATNStatePlusBlockStart	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	ATNStatePlusBlockStart = 4$/;"	c	package:antlr
ATNStatePlusLoopBack	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	ATNStatePlusLoopBack   = 11$/;"	c	package:antlr
ATNStateRuleStart	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	ATNStateRuleStart      = 2$/;"	c	package:antlr
ATNStateRuleStop	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	ATNStateRuleStop       = 7$/;"	c	package:antlr
ATNStateStarBlockStart	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	ATNStateStarBlockStart = 5$/;"	c	package:antlr
ATNStateStarLoopBack	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	ATNStateStarLoopBack   = 9$/;"	c	package:antlr
ATNStateStarLoopEntry	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	ATNStateStarLoopEntry  = 10$/;"	c	package:antlr
ATNStateTokenStart	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	ATNStateTokenStart     = 6$/;"	c	package:antlr
ATNTypeLexer	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_type.go	/^	ATNTypeLexer  = 0$/;"	c	package:antlr
ATNTypeParser	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_type.go	/^	ATNTypeParser = 1$/;"	c	package:antlr
ATTACH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ATTACH_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAttach_stmtContext	typeref:typename:antlr.TerminalNode
ATTACH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ATTACH_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
ATTACH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Attach_stmtContext) ATTACH_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Attach_stmtContext	typeref:typename:antlr.TerminalNode
ATTACH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) ATTACH_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
AUTOINCREMENT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AUTOINCREMENT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:antlr.TerminalNode
AUTOINCREMENT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AUTOINCREMENT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
AUTOINCREMENT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) AUTOINCREMENT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:antlr.TerminalNode
AUTOINCREMENT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) AUTOINCREMENT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
AbstractPredicateTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^type AbstractPredicateTransition interface {$/;"	i	package:antlr
Accept	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) Accept(visitor ParseTreeVisitor) interface{} {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:interface{}
Accept	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	Accept(Visitor ParseTreeVisitor) interface{}$/;"	n	interface:antlr.ParseTree	typeref:typename:interface{}
Accept	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (e *ErrorNodeImpl) Accept(v ParseTreeVisitor) interface{} {$/;"	f	struct:antlr.ErrorNodeImpl	typeref:typename:interface{}
Accept	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (t *TerminalNodeImpl) Accept(v ParseTreeVisitor) interface{} {$/;"	f	struct:antlr.TerminalNodeImpl	typeref:typename:interface{}
Accept	vendor/nhooyr.io/websocket/accept.go	/^func Accept(w http.ResponseWriter, r *http.Request, opts *AcceptOptions) (*Conn, error) {$/;"	f	package:websocket	typeref:typename:(*Conn, error)
Accept	vendor/nhooyr.io/websocket/accept_js.go	/^func Accept(w http.ResponseWriter, r *http.Request, opts *AcceptOptions) (*Conn, error) {$/;"	f	package:websocket	typeref:typename:(*Conn, error)
AcceptOptions	vendor/nhooyr.io/websocket/accept.go	/^type AcceptOptions struct {$/;"	s	package:websocket
AcceptOptions	vendor/nhooyr.io/websocket/accept_js.go	/^type AcceptOptions struct {$/;"	s	package:websocket
Action	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^	Action(RuleContext, int, int)$/;"	n	interface:antlr.Recognizer
Action	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^func (b *BaseRecognizer) Action(context RuleContext, ruleIndex, actionIndex int) {$/;"	f	struct:antlr.BaseRecognizer
ActionTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^type ActionTransition struct {$/;"	s	package:antlr
ActionType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	ActionType          int$/;"	m	struct:antlr.BaseLexer	typeref:typename:int
AdaptivePredict	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) AdaptivePredict(input TokenStream, decision int, outerContext Parse/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:int
Add	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	Add(ATNConfig, *DoubleDict) bool$/;"	n	interface:antlr.ATNConfigSet	typeref:typename:bool
Add	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) Add(config ATNConfig, mergeCache *DoubleDict) bool {$/;"	f	struct:antlr.BaseATNConfigSet	typeref:typename:bool
Add	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^	Add(value interface{}) (added interface{})$/;"	n	interface:antlr.Set	typeref:typename:(added interface{})
Add	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^func (as *array2DHashSet) Add(value Collectable[any]) interface{} {$/;"	f	struct:antlr.array2DHashSet	typeref:typename:interface{}
Add	vendor/github.com/go-chi/chi/context.go	/^func (s *RouteParams) Add(key, value string) {$/;"	f	struct:chi.RouteParams
Add	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/batch.go	/^func (b *Batch) Add(stmt Stmt) {$/;"	f	struct:hrana.Batch
Add	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/pipeline_request.go	/^func (pr *PipelineRequest) Add(request StreamRequest) {$/;"	f	struct:hrana.PipelineRequest
AddAll	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	AddAll([]ATNConfig) bool$/;"	n	interface:antlr.ATNConfigSet	typeref:typename:bool
AddAll	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) AddAll(coll []ATNConfig) bool {$/;"	f	struct:antlr.BaseATNConfigSet	typeref:typename:bool
AddArgs	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt.go	/^func (s *Stmt) AddArgs(params shared.Params) error {$/;"	f	struct:hrana.Stmt	typeref:typename:error
AddChild	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^	AddChild(child RuleContext) RuleContext$/;"	n	interface:antlr.ParserRuleContext	typeref:typename:RuleContext
AddChild	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) AddChild(child RuleContext) RuleContext {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:RuleContext
AddEOB	vendor/github.com/klauspost/compress/flate/token.go	/^func (t *tokens) AddEOB() {$/;"	f	struct:flate.tokens
AddErrorListener	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^	AddErrorListener(ErrorListener)$/;"	n	interface:antlr.Recognizer
AddErrorListener	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^func (b *BaseRecognizer) AddErrorListener(listener ErrorListener) {$/;"	f	struct:antlr.BaseRecognizer
AddErrorNode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^	AddErrorNode(badToken Token) *ErrorNodeImpl$/;"	n	interface:antlr.ParserRuleContext	typeref:typename:*ErrorNodeImpl
AddErrorNode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) AddErrorNode(badToken Token) *ErrorNodeImpl {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:*ErrorNodeImpl
AddLiteral	vendor/github.com/klauspost/compress/flate/token.go	/^func (t *tokens) AddLiteral(lit byte) {$/;"	f	struct:flate.tokens
AddMatch	vendor/github.com/klauspost/compress/flate/token.go	/^func (t *tokens) AddMatch(xlength uint32, xoffset uint32) {$/;"	f	struct:flate.tokens
AddMatchLong	vendor/github.com/klauspost/compress/flate/token.go	/^func (t *tokens) AddMatchLong(xlength int32, xoffset uint32) {$/;"	f	struct:flate.tokens
AddNamedArgs	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt.go	/^func (s *Stmt) AddNamedArgs(args map[string]any) error {$/;"	f	struct:hrana.Stmt	typeref:typename:error
AddParseListener	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) AddParseListener(listener ParseTreeListener) {$/;"	f	struct:antlr.BaseParser
AddPositionalArgs	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt.go	/^func (s *Stmt) AddPositionalArgs(args []any) error {$/;"	f	struct:hrana.Stmt	typeref:typename:error
AddToProgram	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) AddToProgram(name string, op RewriteOperation) {$/;"	f	struct:antlr.TokenStreamRewriter
AddTokenNode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^	AddTokenNode(token Token) *TerminalNodeImpl$/;"	n	interface:antlr.ParserRuleContext	typeref:typename:*TerminalNodeImpl
AddTokenNode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) AddTokenNode(token Token) *TerminalNodeImpl {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:*TerminalNodeImpl
AddTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	AddTransition(Transition, int)$/;"	n	interface:antlr.ATNState
AddTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (as *BaseATNState) AddTransition(trans Transition, index int) {$/;"	f	struct:antlr.BaseATNState
AffectedRowCount	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt_result.go	/^	AffectedRowCount int32     `json:"affected_row_count"`$/;"	m	struct:hrana.StmtResult	typeref:typename:int32
Aggregate_func	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Aggregate_func() IAggregate_funcContext$/;"	n	interface:sqliteparser.IAggregate_function_invocationContext	typeref:typename:IAggregate_funcContext
Aggregate_func	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Aggregate_func() (localctx IAggregate_funcContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IAggregate_funcContext)
Aggregate_func	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Aggregate_function_invocationContext) Aggregate_func() IAggregate_funcContext {$/;"	f	struct:sqliteparser.Aggregate_function_invocationContext	typeref:typename:IAggregate_funcContext
Aggregate_funcContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Aggregate_funcContext struct {$/;"	s	package:sqliteparser
Aggregate_function_invocation	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Aggregate_function_invocation() (localctx IAggregate_function_invocationC/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IAggregate_function_invocationContext)
Aggregate_function_invocationContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Aggregate_function_invocationContext struct {$/;"	s	package:sqliteparser
Alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Alias() IAliasContext$/;"	n	interface:sqliteparser.IQualified_table_nameContext	typeref:typename:IAliasContext
Alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Alias() (localctx IAliasContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IAliasContext)
Alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Qualified_table_nameContext) Alias() IAliasContext {$/;"	f	struct:sqliteparser.Qualified_table_nameContext	typeref:typename:IAliasContext
AliasContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type AliasContext struct {$/;"	s	package:sqliteparser
AllACTION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllACTION_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllACTION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) AllACTION_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllALL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllALL_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ICompound_select_stmtContext	typeref:typename:[]antlr.TerminalNode
AllALL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_select_stmtContext) AllALL_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Compound_select_stmtContext	typeref:typename:[]antlr.TerminalNode
AllASSIGN	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllASSIGN() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:[]antlr.TerminalNode
AllASSIGN	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllASSIGN() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:[]antlr.TerminalNode
AllASSIGN	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllASSIGN() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:[]antlr.TerminalNode
AllASSIGN	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) AllASSIGN() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:[]antlr.TerminalNode
AllASSIGN	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) AllASSIGN() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:[]antlr.TerminalNode
AllASSIGN	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) AllASSIGN() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:[]antlr.TerminalNode
AllAS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllAS_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:[]antlr.TerminalNode
AllAS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllAS_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IWith_clauseContext	typeref:typename:[]antlr.TerminalNode
AllAS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) AllAS_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:[]antlr.TerminalNode
AllAS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *With_clauseContext) AllAS_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.With_clauseContext	typeref:typename:[]antlr.TerminalNode
AllAsc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllAsc_desc() []IAsc_descContext$/;"	n	interface:sqliteparser.IExpr_asc_descContext	typeref:typename:[]IAsc_descContext
AllAsc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Expr_asc_descContext) AllAsc_desc() []IAsc_descContext {$/;"	f	struct:sqliteparser.Expr_asc_descContext	typeref:typename:[]IAsc_descContext
AllBY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllBY_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IOver_clauseContext	typeref:typename:[]antlr.TerminalNode
AllBY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllBY_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_defnContext	typeref:typename:[]antlr.TerminalNode
AllBY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Over_clauseContext) AllBY_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Over_clauseContext	typeref:typename:[]antlr.TerminalNode
AllBY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_defnContext) AllBY_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_defnContext	typeref:typename:[]antlr.TerminalNode
AllCASCADE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCASCADE_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllCASCADE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) AllCASCADE_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllCLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCLOSE_PAR() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ICommon_table_expressionContext	typeref:typename:[]antlr.TerminalNode
AllCLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCLOSE_PAR() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:[]antlr.TerminalNode
AllCLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCLOSE_PAR() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IWith_clauseContext	typeref:typename:[]antlr.TerminalNode
AllCLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_expressionContext) AllCLOSE_PAR() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Common_table_expressionContext	typeref:typename:[]antlr.TerminalNode
AllCLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) AllCLOSE_PAR() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:[]antlr.TerminalNode
AllCLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *With_clauseContext) AllCLOSE_PAR() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.With_clauseContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IAggregate_function_invocationContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_name_listContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ICommon_table_expressionContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ICommon_table_stmtContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_index_stmtContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_view_stmtContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_virtual_table_stmtContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ICte_table_nameContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IExpr_asc_descContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IJoin_constraintContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IOrder_by_stmtContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IOver_clauseContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IReturning_clauseContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ISimple_function_invocationContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ITable_constraintContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ITable_or_subqueryContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IValue_rowContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IValues_clauseContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_defnContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_function_invocationContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCOMMA() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IWith_clauseContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Aggregate_function_invocationContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Aggregate_function_invocationContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_name_listContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_name_listContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_expressionContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Common_table_expressionContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_stmtContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Common_table_stmtContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_view_stmtContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Cte_table_nameContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Cte_table_nameContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Expr_asc_descContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Expr_asc_descContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_constraintContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Join_constraintContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_stmtContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Order_by_stmtContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Over_clauseContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Over_clauseContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Returning_clauseContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Returning_clauseContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_function_invocationContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Simple_function_invocationContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Table_constraintContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Value_rowContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Value_rowContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Values_clauseContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Values_clauseContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_defnContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_defnContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_function_invocationContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_function_invocationContext	typeref:typename:[]antlr.TerminalNode
AllCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *With_clauseContext) AllCOMMA() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.With_clauseContext	typeref:typename:[]antlr.TerminalNode
AllColumn_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllColumn_constraint() []IColumn_constraintContext$/;"	n	interface:sqliteparser.IColumn_defContext	typeref:typename:[]IColumn_constraintContext
AllColumn_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_defContext) AllColumn_constraint() []IColumn_constraintContext {$/;"	f	struct:sqliteparser.Column_defContext	typeref:typename:[]IColumn_constraintContext
AllColumn_def	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllColumn_def() []IColumn_defContext$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:[]IColumn_defContext
AllColumn_def	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) AllColumn_def() []IColumn_defContext {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:[]IColumn_defContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllColumn_name() []IColumn_nameContext$/;"	n	interface:sqliteparser.IAlter_table_stmtContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllColumn_name() []IColumn_nameContext$/;"	n	interface:sqliteparser.IColumn_name_listContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllColumn_name() []IColumn_nameContext$/;"	n	interface:sqliteparser.ICommon_table_expressionContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllColumn_name() []IColumn_nameContext$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllColumn_name() []IColumn_nameContext$/;"	n	interface:sqliteparser.ICreate_view_stmtContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllColumn_name() []IColumn_nameContext$/;"	n	interface:sqliteparser.ICte_table_nameContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllColumn_name() []IColumn_nameContext$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllColumn_name() []IColumn_nameContext$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllColumn_name() []IColumn_nameContext$/;"	n	interface:sqliteparser.IJoin_constraintContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllColumn_name() []IColumn_nameContext$/;"	n	interface:sqliteparser.ITable_constraintContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllColumn_name() []IColumn_nameContext$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllColumn_name() []IColumn_nameContext$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllColumn_name() []IColumn_nameContext$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) AllColumn_name() []IColumn_nameContext {$/;"	f	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_name_listContext) AllColumn_name() []IColumn_nameContext {$/;"	f	struct:sqliteparser.Column_name_listContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_expressionContext) AllColumn_name() []IColumn_nameContext {$/;"	f	struct:sqliteparser.Common_table_expressionContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) AllColumn_name() []IColumn_nameContext {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) AllColumn_name() []IColumn_nameContext {$/;"	f	struct:sqliteparser.Create_view_stmtContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Cte_table_nameContext) AllColumn_name() []IColumn_nameContext {$/;"	f	struct:sqliteparser.Cte_table_nameContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) AllColumn_name() []IColumn_nameContext {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) AllColumn_name() []IColumn_nameContext {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_constraintContext) AllColumn_name() []IColumn_nameContext {$/;"	f	struct:sqliteparser.Join_constraintContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) AllColumn_name() []IColumn_nameContext {$/;"	f	struct:sqliteparser.Table_constraintContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) AllColumn_name() []IColumn_nameContext {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) AllColumn_name() []IColumn_nameContext {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:[]IColumn_nameContext
AllColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) AllColumn_name() []IColumn_nameContext {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:[]IColumn_nameContext
AllColumn_name_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllColumn_name_list() []IColumn_name_listContext$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:[]IColumn_name_listContext
AllColumn_name_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllColumn_name_list() []IColumn_name_listContext$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:[]IColumn_name_listContext
AllColumn_name_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllColumn_name_list() []IColumn_name_listContext$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:[]IColumn_name_listContext
AllColumn_name_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) AllColumn_name_list() []IColumn_name_listContext {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:[]IColumn_name_listContext
AllColumn_name_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) AllColumn_name_list() []IColumn_name_listContext {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:[]IColumn_name_listContext
AllColumn_name_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) AllColumn_name_list() []IColumn_name_listContext {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:[]IColumn_name_listContext
AllCommon_table_expression	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCommon_table_expression() []ICommon_table_expressionContext$/;"	n	interface:sqliteparser.ICommon_table_stmtContext	typeref:typename:[]ICommon_table_expressionContext
AllCommon_table_expression	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_stmtContext) AllCommon_table_expression() []ICommon_table_expressionContex/;"	f	struct:sqliteparser.Common_table_stmtContext	typeref:typename:[]ICommon_table_expressionContext
AllCompound_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCompound_operator() []ICompound_operatorContext$/;"	n	interface:sqliteparser.ISelect_stmtContext	typeref:typename:[]ICompound_operatorContext
AllCompound_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_stmtContext) AllCompound_operator() []ICompound_operatorContext {$/;"	f	struct:sqliteparser.Select_stmtContext	typeref:typename:[]ICompound_operatorContext
AllCte_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllCte_table_name() []ICte_table_nameContext$/;"	n	interface:sqliteparser.IWith_clauseContext	typeref:typename:[]ICte_table_nameContext
AllCte_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *With_clauseContext) AllCte_table_name() []ICte_table_nameContext {$/;"	f	struct:sqliteparser.With_clauseContext	typeref:typename:[]ICte_table_nameContext
AllDEFAULT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllDEFAULT_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllDEFAULT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) AllDEFAULT_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllDELETE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllDELETE_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllDELETE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) AllDELETE_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllDOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllDOT() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:[]antlr.TerminalNode
AllDOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) AllDOT() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:[]antlr.TerminalNode
AllDelete_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllDelete_stmt() []IDelete_stmtContext$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:[]IDelete_stmtContext
AllDelete_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) AllDelete_stmt() []IDelete_stmtContext {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:[]IDelete_stmtContext
AllEXCEPT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllEXCEPT_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ICompound_select_stmtContext	typeref:typename:[]antlr.TerminalNode
AllEXCEPT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_select_stmtContext) AllEXCEPT_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Compound_select_stmtContext	typeref:typename:[]antlr.TerminalNode
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllExpr() []IExprContext$/;"	n	interface:sqliteparser.IAggregate_function_invocationContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllExpr() []IExprContext$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllExpr() []IExprContext$/;"	n	interface:sqliteparser.IExpr_asc_descContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllExpr() []IExprContext$/;"	n	interface:sqliteparser.ILimit_stmtContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllExpr() []IExprContext$/;"	n	interface:sqliteparser.IOrder_by_exprContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllExpr() []IExprContext$/;"	n	interface:sqliteparser.IOver_clauseContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllExpr() []IExprContext$/;"	n	interface:sqliteparser.IPartition_byContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllExpr() []IExprContext$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllExpr() []IExprContext$/;"	n	interface:sqliteparser.ISimple_function_invocationContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllExpr() []IExprContext$/;"	n	interface:sqliteparser.ITable_or_subqueryContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllExpr() []IExprContext$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllExpr() []IExprContext$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllExpr() []IExprContext$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllExpr() []IExprContext$/;"	n	interface:sqliteparser.IValue_rowContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllExpr() []IExprContext$/;"	n	interface:sqliteparser.IWindow_defnContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllExpr() []IExprContext$/;"	n	interface:sqliteparser.IWindow_function_invocationContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Aggregate_function_invocationContext) AllExpr() []IExprContext {$/;"	f	struct:sqliteparser.Aggregate_function_invocationContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) AllExpr() []IExprContext {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Expr_asc_descContext) AllExpr() []IExprContext {$/;"	f	struct:sqliteparser.Expr_asc_descContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Limit_stmtContext) AllExpr() []IExprContext {$/;"	f	struct:sqliteparser.Limit_stmtContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_exprContext) AllExpr() []IExprContext {$/;"	f	struct:sqliteparser.Order_by_exprContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Over_clauseContext) AllExpr() []IExprContext {$/;"	f	struct:sqliteparser.Over_clauseContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Partition_byContext) AllExpr() []IExprContext {$/;"	f	struct:sqliteparser.Partition_byContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) AllExpr() []IExprContext {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_function_invocationContext) AllExpr() []IExprContext {$/;"	f	struct:sqliteparser.Simple_function_invocationContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) AllExpr() []IExprContext {$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) AllExpr() []IExprContext {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) AllExpr() []IExprContext {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) AllExpr() []IExprContext {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Value_rowContext) AllExpr() []IExprContext {$/;"	f	struct:sqliteparser.Value_rowContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_defnContext) AllExpr() []IExprContext {$/;"	f	struct:sqliteparser.Window_defnContext	typeref:typename:[]IExprContext
AllExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_function_invocationContext) AllExpr() []IExprContext {$/;"	f	struct:sqliteparser.Window_function_invocationContext	typeref:typename:[]IExprContext
AllINTERSECT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllINTERSECT_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ICompound_select_stmtContext	typeref:typename:[]antlr.TerminalNode
AllINTERSECT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_select_stmtContext) AllINTERSECT_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Compound_select_stmtContext	typeref:typename:[]antlr.TerminalNode
AllIndexed_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllIndexed_column() []IIndexed_columnContext$/;"	n	interface:sqliteparser.ICreate_index_stmtContext	typeref:typename:[]IIndexed_columnContext
AllIndexed_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllIndexed_column() []IIndexed_columnContext$/;"	n	interface:sqliteparser.ITable_constraintContext	typeref:typename:[]IIndexed_columnContext
AllIndexed_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllIndexed_column() []IIndexed_columnContext$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:[]IIndexed_columnContext
AllIndexed_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) AllIndexed_column() []IIndexed_columnContext {$/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:[]IIndexed_columnContext
AllIndexed_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) AllIndexed_column() []IIndexed_columnContext {$/;"	f	struct:sqliteparser.Table_constraintContext	typeref:typename:[]IIndexed_columnContext
AllIndexed_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) AllIndexed_column() []IIndexed_columnContext {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:[]IIndexed_columnContext
AllInsert_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllInsert_stmt() []IInsert_stmtContext$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:[]IInsert_stmtContext
AllInsert_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) AllInsert_stmt() []IInsert_stmtContext {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:[]IInsert_stmtContext
AllJoin_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllJoin_constraint() []IJoin_constraintContext$/;"	n	interface:sqliteparser.IJoin_clauseContext	typeref:typename:[]IJoin_constraintContext
AllJoin_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_clauseContext) AllJoin_constraint() []IJoin_constraintContext {$/;"	f	struct:sqliteparser.Join_clauseContext	typeref:typename:[]IJoin_constraintContext
AllJoin_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllJoin_operator() []IJoin_operatorContext$/;"	n	interface:sqliteparser.IJoin_clauseContext	typeref:typename:[]IJoin_operatorContext
AllJoin_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_clauseContext) AllJoin_operator() []IJoin_operatorContext {$/;"	f	struct:sqliteparser.Join_clauseContext	typeref:typename:[]IJoin_operatorContext
AllMATCH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllMATCH_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllMATCH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) AllMATCH_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllModule_argument	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllModule_argument() []IModule_argumentContext$/;"	n	interface:sqliteparser.ICreate_virtual_table_stmtContext	typeref:typename:[]IModule_argumentContext
AllModule_argument	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) AllModule_argument() []IModule_argumentContext {$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:[]IModule_argumentContext
AllNO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllNO_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllNO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) AllNO_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllNULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllNULL_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllNULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) AllNULL_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllName	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllName() []INameContext$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:[]INameContext
AllName	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllName() []INameContext$/;"	n	interface:sqliteparser.IType_nameContext	typeref:typename:[]INameContext
AllName	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) AllName() []INameContext {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:[]INameContext
AllName	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Type_nameContext) AllName() []INameContext {$/;"	f	struct:sqliteparser.Type_nameContext	typeref:typename:[]INameContext
AllOF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllOF_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:[]antlr.TerminalNode
AllOF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) AllOF_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:[]antlr.TerminalNode
AllON_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllON_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllON_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) AllON_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllOPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllOPEN_PAR() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ICommon_table_expressionContext	typeref:typename:[]antlr.TerminalNode
AllOPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllOPEN_PAR() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:[]antlr.TerminalNode
AllOPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllOPEN_PAR() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IWith_clauseContext	typeref:typename:[]antlr.TerminalNode
AllOPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_expressionContext) AllOPEN_PAR() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Common_table_expressionContext	typeref:typename:[]antlr.TerminalNode
AllOPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) AllOPEN_PAR() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:[]antlr.TerminalNode
AllOPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *With_clauseContext) AllOPEN_PAR() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.With_clauseContext	typeref:typename:[]antlr.TerminalNode
AllOrdering_term	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllOrdering_term() []IOrdering_termContext$/;"	n	interface:sqliteparser.IOrder_by_stmtContext	typeref:typename:[]IOrdering_termContext
AllOrdering_term	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllOrdering_term() []IOrdering_termContext$/;"	n	interface:sqliteparser.IOver_clauseContext	typeref:typename:[]IOrdering_termContext
AllOrdering_term	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllOrdering_term() []IOrdering_termContext$/;"	n	interface:sqliteparser.IWindow_defnContext	typeref:typename:[]IOrdering_termContext
AllOrdering_term	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_stmtContext) AllOrdering_term() []IOrdering_termContext {$/;"	f	struct:sqliteparser.Order_by_stmtContext	typeref:typename:[]IOrdering_termContext
AllOrdering_term	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Over_clauseContext) AllOrdering_term() []IOrdering_termContext {$/;"	f	struct:sqliteparser.Over_clauseContext	typeref:typename:[]IOrdering_termContext
AllOrdering_term	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_defnContext) AllOrdering_term() []IOrdering_termContext {$/;"	f	struct:sqliteparser.Window_defnContext	typeref:typename:[]IOrdering_termContext
AllRESTRICT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllRESTRICT_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllRESTRICT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) AllRESTRICT_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllResult_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllResult_column() []IResult_columnContext$/;"	n	interface:sqliteparser.IReturning_clauseContext	typeref:typename:[]IResult_columnContext
AllResult_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllResult_column() []IResult_columnContext$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:[]IResult_columnContext
AllResult_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Returning_clauseContext) AllResult_column() []IResult_columnContext {$/;"	f	struct:sqliteparser.Returning_clauseContext	typeref:typename:[]IResult_columnContext
AllResult_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) AllResult_column() []IResult_columnContext {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:[]IResult_columnContext
AllSCOL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllSCOL() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:[]antlr.TerminalNode
AllSCOL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllSCOL() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ISql_stmt_listContext	typeref:typename:[]antlr.TerminalNode
AllSCOL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) AllSCOL() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:[]antlr.TerminalNode
AllSCOL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmt_listContext) AllSCOL() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Sql_stmt_listContext	typeref:typename:[]antlr.TerminalNode
AllSET_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllSET_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllSET_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) AllSET_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllSelect_core	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllSelect_core() []ISelect_coreContext$/;"	n	interface:sqliteparser.ICompound_select_stmtContext	typeref:typename:[]ISelect_coreContext
AllSelect_core	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllSelect_core() []ISelect_coreContext$/;"	n	interface:sqliteparser.ISelect_stmtContext	typeref:typename:[]ISelect_coreContext
AllSelect_core	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_select_stmtContext) AllSelect_core() []ISelect_coreContext {$/;"	f	struct:sqliteparser.Compound_select_stmtContext	typeref:typename:[]ISelect_coreContext
AllSelect_core	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_stmtContext) AllSelect_core() []ISelect_coreContext {$/;"	f	struct:sqliteparser.Select_stmtContext	typeref:typename:[]ISelect_coreContext
AllSelect_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllSelect_stmt() []ISelect_stmtContext$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:[]ISelect_stmtContext
AllSelect_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllSelect_stmt() []ISelect_stmtContext$/;"	n	interface:sqliteparser.IWith_clauseContext	typeref:typename:[]ISelect_stmtContext
AllSelect_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) AllSelect_stmt() []ISelect_stmtContext {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:[]ISelect_stmtContext
AllSelect_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *With_clauseContext) AllSelect_stmt() []ISelect_stmtContext {$/;"	f	struct:sqliteparser.With_clauseContext	typeref:typename:[]ISelect_stmtContext
AllSigned_number	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllSigned_number() []ISigned_numberContext$/;"	n	interface:sqliteparser.IType_nameContext	typeref:typename:[]ISigned_numberContext
AllSigned_number	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Type_nameContext) AllSigned_number() []ISigned_numberContext {$/;"	f	struct:sqliteparser.Type_nameContext	typeref:typename:[]ISigned_numberContext
AllSql_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllSql_stmt() []ISql_stmtContext$/;"	n	interface:sqliteparser.ISql_stmt_listContext	typeref:typename:[]ISql_stmtContext
AllSql_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmt_listContext) AllSql_stmt() []ISql_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmt_listContext	typeref:typename:[]ISql_stmtContext
AllSql_stmt_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllSql_stmt_list() []ISql_stmt_listContext$/;"	n	interface:sqliteparser.IParseContext	typeref:typename:[]ISql_stmt_listContext
AllSql_stmt_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ParseContext) AllSql_stmt_list() []ISql_stmt_listContext {$/;"	f	struct:sqliteparser.ParseContext	typeref:typename:[]ISql_stmt_listContext
AllTHEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllTHEN_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:[]antlr.TerminalNode
AllTHEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) AllTHEN_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:[]antlr.TerminalNode
AllTable_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllTable_constraint() []ITable_constraintContext$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:[]ITable_constraintContext
AllTable_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) AllTable_constraint() []ITable_constraintContext {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:[]ITable_constraintContext
AllTable_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllTable_name() []ITable_nameContext$/;"	n	interface:sqliteparser.IAlter_table_stmtContext	typeref:typename:[]ITable_nameContext
AllTable_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) AllTable_name() []ITable_nameContext {$/;"	f	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:[]ITable_nameContext
AllTable_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllTable_or_subquery() []ITable_or_subqueryContext$/;"	n	interface:sqliteparser.IJoin_clauseContext	typeref:typename:[]ITable_or_subqueryContext
AllTable_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllTable_or_subquery() []ITable_or_subqueryContext$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:[]ITable_or_subqueryContext
AllTable_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllTable_or_subquery() []ITable_or_subqueryContext$/;"	n	interface:sqliteparser.ITable_or_subqueryContext	typeref:typename:[]ITable_or_subqueryContext
AllTable_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllTable_or_subquery() []ITable_or_subqueryContext$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:[]ITable_or_subqueryContext
AllTable_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_clauseContext) AllTable_or_subquery() []ITable_or_subqueryContext {$/;"	f	struct:sqliteparser.Join_clauseContext	typeref:typename:[]ITable_or_subqueryContext
AllTable_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) AllTable_or_subquery() []ITable_or_subqueryContext {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:[]ITable_or_subqueryContext
AllTable_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) AllTable_or_subquery() []ITable_or_subqueryContext {$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:[]ITable_or_subqueryContext
AllTable_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) AllTable_or_subquery() []ITable_or_subqueryContext {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:[]ITable_or_subqueryContext
AllUNION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllUNION_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.ICompound_select_stmtContext	typeref:typename:[]antlr.TerminalNode
AllUNION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_select_stmtContext) AllUNION_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Compound_select_stmtContext	typeref:typename:[]antlr.TerminalNode
AllUPDATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllUPDATE_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllUPDATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) AllUPDATE_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:[]antlr.TerminalNode
AllUpdate_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllUpdate_stmt() []IUpdate_stmtContext$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:[]IUpdate_stmtContext
AllUpdate_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) AllUpdate_stmt() []IUpdate_stmtContext {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:[]IUpdate_stmtContext
AllValue_row	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllValue_row() []IValue_rowContext$/;"	n	interface:sqliteparser.IValues_clauseContext	typeref:typename:[]IValue_rowContext
AllValue_row	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Values_clauseContext) AllValue_row() []IValue_rowContext {$/;"	f	struct:sqliteparser.Values_clauseContext	typeref:typename:[]IValue_rowContext
AllWHEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllWHEN_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:[]antlr.TerminalNode
AllWHEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) AllWHEN_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:[]antlr.TerminalNode
AllWHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllWHERE_() []antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:[]antlr.TerminalNode
AllWHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) AllWHERE_() []antlr.TerminalNode {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:[]antlr.TerminalNode
AllWindow_defn	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllWindow_defn() []IWindow_defnContext$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:[]IWindow_defnContext
AllWindow_defn	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) AllWindow_defn() []IWindow_defnContext {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:[]IWindow_defnContext
AllWindow_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	AllWindow_name() []IWindow_nameContext$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:[]IWindow_nameContext
AllWindow_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) AllWindow_name() []IWindow_nameContext {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:[]IWindow_nameContext
AllowAll	vendor/github.com/go-chi/cors/cors.go	/^func AllowAll() *Cors {$/;"	f	package:cors	typeref:typename:*Cors
AllowCredentials	vendor/github.com/go-chi/cors/cors.go	/^	AllowCredentials bool$/;"	m	struct:cors.Options	typeref:typename:bool
AllowOriginFunc	vendor/github.com/go-chi/cors/cors.go	/^	AllowOriginFunc func(r *http.Request, origin string) bool$/;"	m	struct:cors.Options	typeref:typename:func(r *http.Request, origin string) bool
AllowedHeaders	vendor/github.com/go-chi/cors/cors.go	/^	AllowedHeaders []string$/;"	m	struct:cors.Options	typeref:typename:[]string
AllowedMethods	vendor/github.com/go-chi/cors/cors.go	/^	AllowedMethods []string$/;"	m	struct:cors.Options	typeref:typename:[]string
AllowedOrigins	vendor/github.com/go-chi/cors/cors.go	/^	AllowedOrigins []string$/;"	m	struct:cors.Options	typeref:typename:[]string
AltDict	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^type AltDict struct {$/;"	s	package:antlr
Alter_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Alter_table_stmt() IAlter_table_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:IAlter_table_stmtContext
Alter_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Alter_table_stmt() (localctx IAlter_table_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IAlter_table_stmtContext)
Alter_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Alter_table_stmt() IAlter_table_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:IAlter_table_stmtContext
Alter_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Alter_table_stmtContext struct {$/;"	s	package:sqliteparser
Alts	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	Alts() *BitSet$/;"	n	interface:antlr.ATNConfigSet	typeref:typename:*BitSet
Alts	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) Alts() *BitSet {$/;"	f	struct:antlr.BaseATNConfigSet	typeref:typename:*BitSet
Analyze_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Analyze_stmt() IAnalyze_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:IAnalyze_stmtContext
Analyze_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Analyze_stmt() (localctx IAnalyze_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IAnalyze_stmtContext)
Analyze_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Analyze_stmt() IAnalyze_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:IAnalyze_stmtContext
Analyze_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Analyze_stmtContext struct {$/;"	s	package:sqliteparser
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.IAggregate_funcContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.IAliasContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.IAny_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.IBase_window_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.ICollation_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.IColumn_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.IDrop_stmtContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.IFilenameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.IForeign_tableContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.IFunction_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.IIndex_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.IModule_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.INameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.IPragma_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.ISavepoint_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.ISchema_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.ISimple_funcContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.ITable_aliasContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.ITable_function_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.ITable_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.ITable_or_index_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.ITransaction_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.ITrigger_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.IView_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Any_name() IAny_nameContext$/;"	n	interface:sqliteparser.IWindow_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Any_name() (localctx IAny_nameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IAny_nameContext)
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Aggregate_funcContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.Aggregate_funcContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *AliasContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.AliasContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Any_nameContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.Any_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Base_window_nameContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.Base_window_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Collation_nameContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.Collation_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_nameContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.Column_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Drop_stmtContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.Drop_stmtContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *FilenameContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.FilenameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_tableContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.Foreign_tableContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Function_nameContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.Function_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Index_nameContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.Index_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Module_nameContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.Module_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *NameContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.NameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_nameContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.Pragma_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Savepoint_nameContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.Savepoint_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Schema_nameContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.Schema_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_funcContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.Simple_funcContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_aliasContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.Table_aliasContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_function_nameContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.Table_function_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_nameContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.Table_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_index_nameContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.Table_or_index_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Transaction_nameContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.Transaction_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Trigger_nameContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.Trigger_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *View_nameContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.View_nameContext	typeref:typename:IAny_nameContext
Any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_nameContext) Any_name() IAny_nameContext {$/;"	f	struct:sqliteparser.Window_nameContext	typeref:typename:IAny_nameContext
Any_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Any_nameContext struct {$/;"	s	package:sqliteparser
ApiKey	internal/database/models.go	/^	ApiKey    string$/;"	m	struct:database.User	typeref:typename:string
ApiKey	internal/database/users.sql.go	/^	ApiKey    string$/;"	m	struct:database.CreateUserParams	typeref:typename:string
ApiKey	models.go	/^	ApiKey    string    `json:"api_key"`$/;"	m	struct:main.User	typeref:typename:string
Args	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt.go	/^	Args             []Value    `json:"args,omitempty"`$/;"	m	struct:hrana.Stmt	typeref:typename:[]Value
ArrayPredictionContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^type ArrayPredictionContext struct {$/;"	s	package:antlr
Asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Asc_desc() IAsc_descContext$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:IAsc_descContext
Asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Asc_desc() IAsc_descContext$/;"	n	interface:sqliteparser.IIndexed_columnContext	typeref:typename:IAsc_descContext
Asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Asc_desc() IAsc_descContext$/;"	n	interface:sqliteparser.IOrdering_termContext	typeref:typename:IAsc_descContext
Asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Asc_desc(i int) IAsc_descContext$/;"	n	interface:sqliteparser.IExpr_asc_descContext	typeref:typename:IAsc_descContext
Asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Asc_desc() (localctx IAsc_descContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IAsc_descContext)
Asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) Asc_desc() IAsc_descContext {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:IAsc_descContext
Asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Expr_asc_descContext) Asc_desc(i int) IAsc_descContext {$/;"	f	struct:sqliteparser.Expr_asc_descContext	typeref:typename:IAsc_descContext
Asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Indexed_columnContext) Asc_desc() IAsc_descContext {$/;"	f	struct:sqliteparser.Indexed_columnContext	typeref:typename:IAsc_descContext
Asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Ordering_termContext) Asc_desc() IAsc_descContext {$/;"	f	struct:sqliteparser.Ordering_termContext	typeref:typename:IAsc_descContext
Asc_descContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Asc_descContext struct {$/;"	s	package:sqliteparser
AtomTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^type AtomTransition struct {$/;"	s	package:antlr
Attach_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Attach_stmt() IAttach_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:IAttach_stmtContext
Attach_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Attach_stmt() (localctx IAttach_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IAttach_stmtContext)
Attach_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Attach_stmt() IAttach_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:IAttach_stmtContext
Attach_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Attach_stmtContext struct {$/;"	s	package:sqliteparser
BEFORE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	BEFORE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
BEFORE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	BEFORE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
BEFORE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) BEFORE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
BEFORE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) BEFORE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
BEGIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	BEGIN_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IBegin_stmtContext	typeref:typename:antlr.TerminalNode
BEGIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	BEGIN_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
BEGIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	BEGIN_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
BEGIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Begin_stmtContext) BEGIN_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Begin_stmtContext	typeref:typename:antlr.TerminalNode
BEGIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) BEGIN_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
BEGIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) BEGIN_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
BETWEEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	BETWEEN_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
BETWEEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	BETWEEN_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_clauseContext	typeref:typename:antlr.TerminalNode
BETWEEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	BETWEEN_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
BETWEEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) BETWEEN_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
BETWEEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_clauseContext) BETWEEN_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_clauseContext	typeref:typename:antlr.TerminalNode
BETWEEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) BETWEEN_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
BIND_PARAMETER	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	BIND_PARAMETER() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
BIND_PARAMETER	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) BIND_PARAMETER() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
BLOB_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	BLOB_LITERAL() antlr.TerminalNode$/;"	n	interface:sqliteparser.ILiteral_valueContext	typeref:typename:antlr.TerminalNode
BLOB_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Literal_valueContext) BLOB_LITERAL() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Literal_valueContext	typeref:typename:antlr.TerminalNode
BY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	BY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
BY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	BY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IOrder_by_exprContext	typeref:typename:antlr.TerminalNode
BY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	BY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IOrder_by_expr_asc_descContext	typeref:typename:antlr.TerminalNode
BY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	BY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IOrder_by_stmtContext	typeref:typename:antlr.TerminalNode
BY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	BY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IPartition_byContext	typeref:typename:antlr.TerminalNode
BY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	BY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IQualified_table_nameContext	typeref:typename:antlr.TerminalNode
BY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	BY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:antlr.TerminalNode
BY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	BY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ITable_or_subqueryContext	typeref:typename:antlr.TerminalNode
BY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	BY_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IOver_clauseContext	typeref:typename:antlr.TerminalNode
BY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	BY_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_defnContext	typeref:typename:antlr.TerminalNode
BY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) BY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
BY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_exprContext) BY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Order_by_exprContext	typeref:typename:antlr.TerminalNode
BY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_expr_asc_descContext) BY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Order_by_expr_asc_descContext	typeref:typename:antlr.TerminalNode
BY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_stmtContext) BY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Order_by_stmtContext	typeref:typename:antlr.TerminalNode
BY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Over_clauseContext) BY_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Over_clauseContext	typeref:typename:antlr.TerminalNode
BY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Partition_byContext) BY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Partition_byContext	typeref:typename:antlr.TerminalNode
BY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Qualified_table_nameContext) BY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Qualified_table_nameContext	typeref:typename:antlr.TerminalNode
BY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) BY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:antlr.TerminalNode
BY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) BY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:antlr.TerminalNode
BY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_defnContext) BY_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_defnContext	typeref:typename:antlr.TerminalNode
BailErrorStrategy	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^type BailErrorStrategy struct {$/;"	s	package:antlr
Base64	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/value.go	/^	Base64 string `json:"base64,omitempty"`$/;"	m	struct:hrana.Value	typeref:typename:string
BaseATNConfig	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^	*BaseATNConfig$/;"	M	struct:antlr.LexerATNConfig	typeref:typename:*BaseATNConfig
BaseATNConfig	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^type BaseATNConfig struct {$/;"	s	package:antlr
BaseATNConfigComparator	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/comparators.go	/^type BaseATNConfigComparator[T Collectable[T]] struct {$/;"	t	package:antlr	typeref:typename:[T Collectable[T]] struct { }
BaseATNConfigSet	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	*BaseATNConfigSet$/;"	M	struct:antlr.OrderedATNConfigSet	typeref:typename:*BaseATNConfigSet
BaseATNConfigSet	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^type BaseATNConfigSet struct {$/;"	s	package:antlr
BaseATNSimulator	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_simulator.go	/^type BaseATNSimulator struct {$/;"	s	package:antlr
BaseATNSimulator	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	*BaseATNSimulator$/;"	M	struct:antlr.LexerATNSimulator	typeref:typename:*BaseATNSimulator
BaseATNSimulator	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^	*BaseATNSimulator$/;"	M	struct:antlr.ParserATNSimulator	typeref:typename:*BaseATNSimulator
BaseATNState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	*BaseATNState$/;"	M	struct:antlr.BaseDecisionState	typeref:typename:*BaseATNState
BaseATNState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	*BaseATNState$/;"	M	struct:antlr.BasicState	typeref:typename:*BaseATNState
BaseATNState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	*BaseATNState$/;"	M	struct:antlr.BlockEndState	typeref:typename:*BaseATNState
BaseATNState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	*BaseATNState$/;"	M	struct:antlr.LoopEndState	typeref:typename:*BaseATNState
BaseATNState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	*BaseATNState$/;"	M	struct:antlr.RuleStartState	typeref:typename:*BaseATNState
BaseATNState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	*BaseATNState$/;"	M	struct:antlr.RuleStopState	typeref:typename:*BaseATNState
BaseATNState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	*BaseATNState$/;"	M	struct:antlr.StarLoopbackState	typeref:typename:*BaseATNState
BaseATNState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^type BaseATNState struct {$/;"	s	package:antlr
BaseAbstractPredicateTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	*BaseAbstractPredicateTransition$/;"	M	struct:antlr.PrecedencePredicateTransition	typeref:typename:*BaseAbstractPredicateTransition
BaseAbstractPredicateTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	*BaseAbstractPredicateTransition$/;"	M	struct:antlr.PredicateTransition	typeref:typename:*BaseAbstractPredicateTransition
BaseAbstractPredicateTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^type BaseAbstractPredicateTransition struct {$/;"	s	package:antlr
BaseBlockStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	*BaseBlockStartState$/;"	M	struct:antlr.BasicBlockStartState	typeref:typename:*BaseBlockStartState
BaseBlockStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	*BaseBlockStartState$/;"	M	struct:antlr.PlusBlockStartState	typeref:typename:*BaseBlockStartState
BaseBlockStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	*BaseBlockStartState$/;"	M	struct:antlr.StarBlockStartState	typeref:typename:*BaseBlockStartState
BaseBlockStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^type BaseBlockStartState struct {$/;"	s	package:antlr
BaseDecisionState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	*BaseDecisionState$/;"	M	struct:antlr.BaseBlockStartState	typeref:typename:*BaseDecisionState
BaseDecisionState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	*BaseDecisionState$/;"	M	struct:antlr.PlusLoopbackState	typeref:typename:*BaseDecisionState
BaseDecisionState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	*BaseDecisionState$/;"	M	struct:antlr.StarLoopEntryState	typeref:typename:*BaseDecisionState
BaseDecisionState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	*BaseDecisionState$/;"	M	struct:antlr.TokensStartState	typeref:typename:*BaseDecisionState
BaseDecisionState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^type BaseDecisionState struct {$/;"	s	package:antlr
BaseInterpreterRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^type BaseInterpreterRuleContext struct {$/;"	s	package:antlr
BaseLexer	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^type BaseLexer struct {$/;"	s	package:antlr
BaseLexer	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	*antlr.BaseLexer$/;"	M	struct:sqliteparser.SQLiteLexer	typeref:typename:*antlr.BaseLexer
BaseLexerAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	*BaseLexerAction$/;"	M	struct:antlr.LexerChannelAction	typeref:typename:*BaseLexerAction
BaseLexerAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	*BaseLexerAction$/;"	M	struct:antlr.LexerCustomAction	typeref:typename:*BaseLexerAction
BaseLexerAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	*BaseLexerAction$/;"	M	struct:antlr.LexerIndexedCustomAction	typeref:typename:*BaseLexerAction
BaseLexerAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	*BaseLexerAction$/;"	M	struct:antlr.LexerModeAction	typeref:typename:*BaseLexerAction
BaseLexerAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	*BaseLexerAction$/;"	M	struct:antlr.LexerMoreAction	typeref:typename:*BaseLexerAction
BaseLexerAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	*BaseLexerAction$/;"	M	struct:antlr.LexerPopModeAction	typeref:typename:*BaseLexerAction
BaseLexerAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	*BaseLexerAction$/;"	M	struct:antlr.LexerPushModeAction	typeref:typename:*BaseLexerAction
BaseLexerAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	*BaseLexerAction$/;"	M	struct:antlr.LexerSkipAction	typeref:typename:*BaseLexerAction
BaseLexerAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	*BaseLexerAction$/;"	M	struct:antlr.LexerTypeAction	typeref:typename:*BaseLexerAction
BaseLexerAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^type BaseLexerAction struct {$/;"	s	package:antlr
BaseParseTreeListener	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^type BaseParseTreeListener struct{}$/;"	s	package:antlr
BaseParseTreeVisitor	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^type BaseParseTreeVisitor struct{}$/;"	s	package:antlr
BaseParser	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^type BaseParser struct {$/;"	s	package:antlr
BaseParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParser$/;"	M	struct:sqliteparser.SQLiteParser	typeref:typename:*antlr.BaseParser
BaseParserRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^	*BaseParserRuleContext$/;"	M	struct:antlr.BaseInterpreterRuleContext	typeref:typename:*BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^type BaseParserRuleContext struct {$/;"	s	package:antlr
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Aggregate_funcContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Aggregate_function_invocationContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.AliasContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Analyze_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Any_nameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Asc_descContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Attach_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Base_window_nameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Begin_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Collation_nameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Column_aliasContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Column_constraintContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Column_defContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Column_nameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Column_name_listContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Commit_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Common_table_expressionContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Common_table_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Compound_operatorContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Compound_select_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Conflict_clauseContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Create_index_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Create_table_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Create_view_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Cte_table_nameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Default_valueContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Delete_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Delete_stmt_limitedContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Detach_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Drop_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Error_messageContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.ExprContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Expr_asc_descContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Factored_select_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.FilenameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Filter_clauseContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Foreign_tableContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Frame_clauseContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Frame_leftContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Frame_rightContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Frame_singleContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Frame_specContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Function_nameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Index_nameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Indexed_columnContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Initial_selectContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Insert_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Join_clauseContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Join_constraintContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Join_operatorContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.KeywordContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Limit_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Literal_valueContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Module_argumentContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Module_nameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.NameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.OffsetContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Order_by_exprContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Order_by_expr_asc_descContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Order_by_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Ordering_termContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Over_clauseContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.ParseContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Partition_byContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Pragma_nameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Pragma_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Pragma_valueContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Qualified_table_nameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Raise_functionContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Recursive_cteContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Recursive_selectContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Reindex_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Release_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Result_columnContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Returning_clauseContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Rollback_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Savepoint_nameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Savepoint_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Schema_nameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Select_coreContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Select_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Signed_numberContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Simple_funcContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Simple_function_invocationContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Simple_select_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Sql_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Sql_stmt_listContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Table_aliasContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Table_constraintContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Table_function_nameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Table_nameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Table_or_index_nameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Transaction_nameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Trigger_nameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Type_nameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Unary_operatorContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Update_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Upsert_clauseContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Vacuum_stmtContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Value_rowContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Values_clauseContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.View_nameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Window_defnContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Window_functionContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Window_function_invocationContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.Window_nameContext	typeref:typename:*antlr.BaseParserRuleContext
BaseParserRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	*antlr.BaseParserRuleContext$/;"	M	struct:sqliteparser.With_clauseContext	typeref:typename:*antlr.BaseParserRuleContext
BasePredictionContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^	*BasePredictionContext$/;"	M	struct:antlr.ArrayPredictionContext	typeref:typename:*BasePredictionContext
BasePredictionContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^	*BasePredictionContext$/;"	M	struct:antlr.BaseSingletonPredictionContext	typeref:typename:*BasePredictionContext
BasePredictionContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^type BasePredictionContext struct {$/;"	s	package:antlr
BasePredictionContextEMPTY	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^var BasePredictionContextEMPTY = NewEmptyPredictionContext()$/;"	v	package:antlr
BasePredictionContextEmptyReturnState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^	BasePredictionContextEmptyReturnState = 0x7FFFFFFF$/;"	c	package:antlr
BasePredictionContextglobalNodeCount	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^	BasePredictionContextglobalNodeCount = 1$/;"	v	package:antlr
BasePredictionContextid	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^	BasePredictionContextid              = BasePredictionContextglobalNodeCount$/;"	v	package:antlr
BaseRecognitionException	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	*BaseRecognitionException$/;"	M	struct:antlr.FailedPredicateException	typeref:typename:*BaseRecognitionException
BaseRecognitionException	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	*BaseRecognitionException$/;"	M	struct:antlr.InputMisMatchException	typeref:typename:*BaseRecognitionException
BaseRecognitionException	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	*BaseRecognitionException$/;"	M	struct:antlr.LexerNoViableAltException	typeref:typename:*BaseRecognitionException
BaseRecognitionException	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	*BaseRecognitionException$/;"	M	struct:antlr.NoViableAltException	typeref:typename:*BaseRecognitionException
BaseRecognitionException	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^type BaseRecognitionException struct {$/;"	s	package:antlr
BaseRecognizer	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	*BaseRecognizer$/;"	M	struct:antlr.BaseLexer	typeref:typename:*BaseRecognizer
BaseRecognizer	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	*BaseRecognizer$/;"	M	struct:antlr.BaseParser	typeref:typename:*BaseRecognizer
BaseRecognizer	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^type BaseRecognizer struct {$/;"	s	package:antlr
BaseRewriteOperation	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	BaseRewriteOperation$/;"	M	struct:antlr.InsertAfterOp	typeref:typename:BaseRewriteOperation
BaseRewriteOperation	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	BaseRewriteOperation$/;"	M	struct:antlr.InsertBeforeOp	typeref:typename:BaseRewriteOperation
BaseRewriteOperation	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	BaseRewriteOperation$/;"	M	struct:antlr.ReplaceOp	typeref:typename:BaseRewriteOperation
BaseRewriteOperation	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^type BaseRewriteOperation struct {$/;"	s	package:antlr
BaseRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^	*BaseRuleContext$/;"	M	struct:antlr.BaseParserRuleContext	typeref:typename:*BaseRuleContext
BaseRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^type BaseRuleContext struct {$/;"	s	package:antlr
BaseSQLiteParserListener	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^type BaseSQLiteParserListener struct{}$/;"	s	package:sqliteparser
BaseSingletonPredictionContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^	*BaseSingletonPredictionContext$/;"	M	struct:antlr.EmptyPredictionContext	typeref:typename:*BaseSingletonPredictionContext
BaseSingletonPredictionContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^type BaseSingletonPredictionContext struct {$/;"	s	package:antlr
BaseToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	*BaseToken$/;"	M	struct:antlr.CommonToken	typeref:typename:*BaseToken
BaseToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^type BaseToken struct {$/;"	s	package:antlr
BaseTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	*BaseTransition$/;"	M	struct:antlr.ActionTransition	typeref:typename:*BaseTransition
BaseTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	*BaseTransition$/;"	M	struct:antlr.AtomTransition	typeref:typename:*BaseTransition
BaseTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	*BaseTransition$/;"	M	struct:antlr.BaseAbstractPredicateTransition	typeref:typename:*BaseTransition
BaseTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	*BaseTransition$/;"	M	struct:antlr.EpsilonTransition	typeref:typename:*BaseTransition
BaseTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	*BaseTransition$/;"	M	struct:antlr.RangeTransition	typeref:typename:*BaseTransition
BaseTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	*BaseTransition$/;"	M	struct:antlr.RuleTransition	typeref:typename:*BaseTransition
BaseTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	*BaseTransition$/;"	M	struct:antlr.SetTransition	typeref:typename:*BaseTransition
BaseTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	*BaseTransition$/;"	M	struct:antlr.WildcardTransition	typeref:typename:*BaseTransition
BaseTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^type BaseTransition struct {$/;"	s	package:antlr
BaseUrl	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/pipeline_response.go	/^	BaseUrl string         `json:"base_url,omitempty"`$/;"	m	struct:hrana.PipelineResponse	typeref:typename:string
Base_window_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Base_window_name() IBase_window_nameContext$/;"	n	interface:sqliteparser.IOver_clauseContext	typeref:typename:IBase_window_nameContext
Base_window_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Base_window_name() IBase_window_nameContext$/;"	n	interface:sqliteparser.IWindow_defnContext	typeref:typename:IBase_window_nameContext
Base_window_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Base_window_name() (localctx IBase_window_nameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IBase_window_nameContext)
Base_window_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Over_clauseContext) Base_window_name() IBase_window_nameContext {$/;"	f	struct:sqliteparser.Over_clauseContext	typeref:typename:IBase_window_nameContext
Base_window_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_defnContext) Base_window_name() IBase_window_nameContext {$/;"	f	struct:sqliteparser.Window_defnContext	typeref:typename:IBase_window_nameContext
Base_window_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Base_window_nameContext struct {$/;"	s	package:sqliteparser
BasicBlockStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^type BasicBlockStartState struct {$/;"	s	package:antlr
BasicState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^type BasicState struct {$/;"	s	package:antlr
Batch	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/batch.go	/^type Batch struct {$/;"	s	package:hrana
Batch	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_request.go	/^	Batch *Batch  `json:"batch,omitempty"`$/;"	m	struct:hrana.StreamRequest	typeref:typename:*Batch
BatchCondition	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/batch.go	/^type BatchCondition struct {$/;"	s	package:hrana
BatchResult	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/batch_result.go	/^type BatchResult struct {$/;"	s	package:hrana
BatchResult	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_result.go	/^func (r *StreamResponse) BatchResult() (*BatchResult, error) {$/;"	f	struct:hrana.StreamResponse	typeref:typename:(*BatchResult, error)
BatchResultRowsProvider	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^type BatchResultRowsProvider struct {$/;"	s	package:hranaV2
BatchStep	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/batch.go	/^type BatchStep struct {$/;"	s	package:hrana
BatchStream	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_request.go	/^func BatchStream(sqls []string, params []shared.Params, wantRows bool) (*StreamRequest, error) {$/;"	f	package:hrana	typeref:typename:(*StreamRequest, error)
Baton	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/pipeline_request.go	/^	Baton    string          `json:"baton,omitempty"`$/;"	m	struct:hrana.PipelineRequest	typeref:typename:string
Baton	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/pipeline_response.go	/^	Baton   string         `json:"baton,omitempty"`$/;"	m	struct:hrana.PipelineResponse	typeref:typename:string
Begin	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (h *hranaV2Conn) Begin() (driver.Tx, error) {$/;"	f	struct:hranaV2.hranaV2Conn	typeref:typename:(driver.Tx, error)
Begin	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (c *conn) Begin() (driver.Tx, error) {$/;"	f	struct:ws.conn	typeref:typename:(driver.Tx, error)
BeginTx	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (h *hranaV2Conn) BeginTx(ctx context.Context, opts driver.TxOptions) (driver.Tx, error) {$/;"	f	struct:hranaV2.hranaV2Conn	typeref:typename:(driver.Tx, error)
BeginTx	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (c *conn) BeginTx(ctx context.Context, _ driver.TxOptions) (driver.Tx, error) {$/;"	f	struct:ws.conn	typeref:typename:(driver.Tx, error)
Begin_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Begin_stmt() IBegin_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:IBegin_stmtContext
Begin_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Begin_stmt() (localctx IBegin_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IBegin_stmtContext)
Begin_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Begin_stmt() IBegin_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:IBegin_stmtContext
Begin_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Begin_stmtContext struct {$/;"	s	package:sqliteparser
Benchmarks	vendor/github.com/go-chi/chi/README.md	/^## Benchmarks$/;"	s	chapter:<img alt="chi" src="https://cdn.rawgit.com/go-chi/chi/master/_examples/chi.svg" width="220" />
BestCompression	vendor/github.com/klauspost/compress/flate/deflate.go	/^	BestCompression    = 9$/;"	c	package:flate
BestSpeed	vendor/github.com/klauspost/compress/flate/deflate.go	/^	BestSpeed          = 1$/;"	c	package:flate
Beyond REST	vendor/github.com/go-chi/chi/README.md	/^## Beyond REST$/;"	s	chapter:<img alt="chi" src="https://cdn.rawgit.com/go-chi/chi/master/_examples/chi.svg" width="220" />
BinarySearch	vendor/golang.org/x/exp/slices/sort.go	/^func BinarySearch[E constraints.Ordered](x []E, target E) (int, bool) {$/;"	f	package:slices	typeref:typename:(x []E, target E) (
BinarySearchFunc	vendor/golang.org/x/exp/slices/sort.go	/^func BinarySearchFunc[E any](x []E, target E, cmp func(E, E) int) (int, bool) {$/;"	f	package:slices	typeref:typename:(x []E, target E, cmp func(E, E) int) (
BitSet	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^type BitSet struct {$/;"	s	package:antlr
BlockEndState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^type BlockEndState struct {$/;"	s	package:antlr
BlockStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^type BlockStartState interface {$/;"	i	package:antlr
BuildParseTrees	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	BuildParseTrees bool$/;"	m	struct:antlr.BaseParser	typeref:typename:bool
CASCADE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CASCADE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
CASCADE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CASCADE_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:antlr.TerminalNode
CASCADE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) CASCADE_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.TerminalNode
CASCADE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) CASCADE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
CASE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CASE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
CASE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CASE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
CASE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) CASE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
CASE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) CASE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
CAST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CAST_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
CAST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CAST_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
CAST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) CAST_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
CAST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) CAST_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
CHECK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CHECK_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:antlr.TerminalNode
CHECK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CHECK_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
CHECK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CHECK_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ITable_constraintContext	typeref:typename:antlr.TerminalNode
CHECK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) CHECK_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:antlr.TerminalNode
CHECK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) CHECK_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
CHECK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) CHECK_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Table_constraintContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAggregate_function_invocationContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAny_nameContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_name_listContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_index_stmtContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_view_stmtContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICte_table_nameContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFilter_clauseContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IJoin_constraintContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IOver_clauseContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IPragma_stmtContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IRaise_functionContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IRecursive_cteContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.ISimple_function_invocationContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.ITable_constraintContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.ITable_or_subqueryContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IType_nameContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IValue_rowContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_defnContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_function_invocationContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ICommon_table_expressionContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CLOSE_PAR(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IWith_clauseContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Aggregate_function_invocationContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Aggregate_function_invocationContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Any_nameContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Any_nameContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_name_listContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_name_listContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_expressionContext) CLOSE_PAR(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Common_table_expressionContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_view_stmtContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Cte_table_nameContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Cte_table_nameContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Filter_clauseContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Filter_clauseContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_constraintContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Join_constraintContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Over_clauseContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Over_clauseContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_stmtContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Pragma_stmtContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Raise_functionContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Raise_functionContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Recursive_cteContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Recursive_cteContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_function_invocationContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Simple_function_invocationContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Table_constraintContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Type_nameContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Type_nameContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Value_rowContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Value_rowContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_defnContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_defnContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) CLOSE_PAR(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_function_invocationContext) CLOSE_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_function_invocationContext	typeref:typename:antlr.TerminalNode
CLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *With_clauseContext) CLOSE_PAR(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.With_clauseContext	typeref:typename:antlr.TerminalNode
COLLATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COLLATE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:antlr.TerminalNode
COLLATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COLLATE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
COLLATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COLLATE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IIndexed_columnContext	typeref:typename:antlr.TerminalNode
COLLATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COLLATE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
COLLATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COLLATE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IOrdering_termContext	typeref:typename:antlr.TerminalNode
COLLATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) COLLATE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:antlr.TerminalNode
COLLATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) COLLATE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
COLLATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Indexed_columnContext) COLLATE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Indexed_columnContext	typeref:typename:antlr.TerminalNode
COLLATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) COLLATE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
COLLATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Ordering_termContext) COLLATE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Ordering_termContext	typeref:typename:antlr.TerminalNode
COLUMN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COLUMN_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAlter_table_stmtContext	typeref:typename:antlr.TerminalNode
COLUMN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COLUMN_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
COLUMN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) COLUMN_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:antlr.TerminalNode
COLUMN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) COLUMN_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA() antlr.TerminalNode$/;"	n	interface:sqliteparser.IDefault_valueContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA() antlr.TerminalNode$/;"	n	interface:sqliteparser.IJoin_operatorContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA() antlr.TerminalNode$/;"	n	interface:sqliteparser.ILimit_stmtContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA() antlr.TerminalNode$/;"	n	interface:sqliteparser.IOffsetContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA() antlr.TerminalNode$/;"	n	interface:sqliteparser.IRaise_functionContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA() antlr.TerminalNode$/;"	n	interface:sqliteparser.IType_nameContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IAggregate_function_invocationContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_name_listContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ICommon_table_expressionContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ICommon_table_stmtContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_index_stmtContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_view_stmtContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ICte_table_nameContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IExpr_asc_descContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IJoin_constraintContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IOrder_by_stmtContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IOver_clauseContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IReturning_clauseContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ISimple_function_invocationContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ITable_constraintContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ITable_or_subqueryContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IValue_rowContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IValues_clauseContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_defnContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_function_invocationContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMA(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IWith_clauseContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Aggregate_function_invocationContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Aggregate_function_invocationContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_name_listContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_name_listContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_expressionContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Common_table_expressionContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_stmtContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Common_table_stmtContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_view_stmtContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Cte_table_nameContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Cte_table_nameContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Default_valueContext) COMMA() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Default_valueContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Expr_asc_descContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Expr_asc_descContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_constraintContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Join_constraintContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_operatorContext) COMMA() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Join_operatorContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Limit_stmtContext) COMMA() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Limit_stmtContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *OffsetContext) COMMA() antlr.TerminalNode {$/;"	f	struct:sqliteparser.OffsetContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_stmtContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Order_by_stmtContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Over_clauseContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Over_clauseContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Raise_functionContext) COMMA() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Raise_functionContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Returning_clauseContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Returning_clauseContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_function_invocationContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Simple_function_invocationContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Table_constraintContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Type_nameContext) COMMA() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Type_nameContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Value_rowContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Value_rowContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Values_clauseContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Values_clauseContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_defnContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_defnContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) COMMA() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_function_invocationContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_function_invocationContext	typeref:typename:antlr.TerminalNode
COMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *With_clauseContext) COMMA(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.With_clauseContext	typeref:typename:antlr.TerminalNode
COMMIT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMIT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICommit_stmtContext	typeref:typename:antlr.TerminalNode
COMMIT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	COMMIT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
COMMIT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Commit_stmtContext) COMMIT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Commit_stmtContext	typeref:typename:antlr.TerminalNode
COMMIT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) COMMIT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
CONFLICT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CONFLICT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IConflict_clauseContext	typeref:typename:antlr.TerminalNode
CONFLICT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CONFLICT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
CONFLICT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CONFLICT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:antlr.TerminalNode
CONFLICT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Conflict_clauseContext) CONFLICT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Conflict_clauseContext	typeref:typename:antlr.TerminalNode
CONFLICT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) CONFLICT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
CONFLICT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) CONFLICT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:antlr.TerminalNode
CONSTRAINT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CONSTRAINT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:antlr.TerminalNode
CONSTRAINT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CONSTRAINT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
CONSTRAINT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CONSTRAINT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ITable_constraintContext	typeref:typename:antlr.TerminalNode
CONSTRAINT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) CONSTRAINT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:antlr.TerminalNode
CONSTRAINT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) CONSTRAINT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
CONSTRAINT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) CONSTRAINT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Table_constraintContext	typeref:typename:antlr.TerminalNode
CORS net/http middleware	vendor/github.com/go-chi/cors/README.md	/^# CORS net\/http middleware$/;"	c
CREATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CREATE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_index_stmtContext	typeref:typename:antlr.TerminalNode
CREATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CREATE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:antlr.TerminalNode
CREATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CREATE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
CREATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CREATE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_view_stmtContext	typeref:typename:antlr.TerminalNode
CREATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CREATE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
CREATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CREATE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
CREATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) CREATE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:antlr.TerminalNode
CREATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) CREATE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:antlr.TerminalNode
CREATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) CREATE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
CREATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) CREATE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_view_stmtContext	typeref:typename:antlr.TerminalNode
CREATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) CREATE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
CREATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) CREATE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
CROSS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CROSS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IJoin_operatorContext	typeref:typename:antlr.TerminalNode
CROSS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CROSS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
CROSS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_operatorContext) CROSS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Join_operatorContext	typeref:typename:antlr.TerminalNode
CROSS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) CROSS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
CUME_DIST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CUME_DIST_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
CUME_DIST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CUME_DIST_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:antlr.TerminalNode
CUME_DIST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) CUME_DIST_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
CUME_DIST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) CUME_DIST_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:antlr.TerminalNode
CURRENT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CURRENT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_leftContext	typeref:typename:antlr.TerminalNode
CURRENT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CURRENT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_rightContext	typeref:typename:antlr.TerminalNode
CURRENT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CURRENT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_singleContext	typeref:typename:antlr.TerminalNode
CURRENT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CURRENT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_specContext	typeref:typename:antlr.TerminalNode
CURRENT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CURRENT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
CURRENT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_leftContext) CURRENT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_leftContext	typeref:typename:antlr.TerminalNode
CURRENT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_rightContext) CURRENT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_rightContext	typeref:typename:antlr.TerminalNode
CURRENT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_singleContext) CURRENT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_singleContext	typeref:typename:antlr.TerminalNode
CURRENT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_specContext) CURRENT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_specContext	typeref:typename:antlr.TerminalNode
CURRENT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) CURRENT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
CURRENT_DATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CURRENT_DATE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
CURRENT_DATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CURRENT_DATE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ILiteral_valueContext	typeref:typename:antlr.TerminalNode
CURRENT_DATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) CURRENT_DATE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
CURRENT_DATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Literal_valueContext) CURRENT_DATE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Literal_valueContext	typeref:typename:antlr.TerminalNode
CURRENT_TIMESTAMP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CURRENT_TIMESTAMP_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
CURRENT_TIMESTAMP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CURRENT_TIMESTAMP_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ILiteral_valueContext	typeref:typename:antlr.TerminalNode
CURRENT_TIMESTAMP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) CURRENT_TIMESTAMP_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
CURRENT_TIMESTAMP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Literal_valueContext) CURRENT_TIMESTAMP_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Literal_valueContext	typeref:typename:antlr.TerminalNode
CURRENT_TIME_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CURRENT_TIME_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
CURRENT_TIME_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	CURRENT_TIME_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ILiteral_valueContext	typeref:typename:antlr.TerminalNode
CURRENT_TIME_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) CURRENT_TIME_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
CURRENT_TIME_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Literal_valueContext) CURRENT_TIME_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Literal_valueContext	typeref:typename:antlr.TerminalNode
Chain	vendor/github.com/go-chi/chi/chain.go	/^func Chain(middlewares ...func(http.Handler) http.Handler) Middlewares {$/;"	f	package:chi	typeref:typename:Middlewares
ChainHandler	vendor/github.com/go-chi/chi/chain.go	/^type ChainHandler struct {$/;"	s	package:chi
Changelog	vendor/github.com/go-chi/chi/CHANGELOG.md	/^# Changelog$/;"	c
CharPositionInLine	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	CharPositionInLine int$/;"	m	struct:antlr.LexerATNSimulator	typeref:typename:int
CharStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/char_stream.go	/^type CharStream interface {$/;"	i	package:antlr
Clear	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	Clear()$/;"	n	interface:antlr.ATNConfigSet
Clear	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) Clear() {$/;"	f	struct:antlr.BaseATNConfigSet
Clear	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/jcollect.go	/^func (m *JMap[K, V, C]) Clear() {$/;"	f	unknown:antlr.C
Client	vendor/nhooyr.io/websocket/README.md	/^### Client$/;"	S	section:websocket""Examples
Clip	vendor/golang.org/x/exp/slices/slices.go	/^func Clip[S ~[]E, E any](s S) S {$/;"	f	package:slices	typeref:typename:(s S) S
ClockSequence	vendor/github.com/google/uuid/time.go	/^func (uuid UUID) ClockSequence() int {$/;"	f	unknown:uuid.UUID	typeref:typename:int
ClockSequence	vendor/github.com/google/uuid/time.go	/^func ClockSequence() int {$/;"	f	package:uuid	typeref:typename:int
Clone	vendor/golang.org/x/exp/slices/slices.go	/^func Clone[S ~[]E, E any](s S) S {$/;"	f	package:slices	typeref:typename:(s S) S
Close	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (w *Writer) Close() error {$/;"	f	struct:flate.Writer	typeref:typename:error
Close	vendor/github.com/klauspost/compress/flate/inflate.go	/^func (f *decompressor) Close() error {$/;"	f	struct:flate.decompressor	typeref:typename:error
Close	vendor/github.com/klauspost/compress/flate/stateless.go	/^func (s *statelessWriter) Close() error {$/;"	f	struct:flate.statelessWriter	typeref:typename:error
Close	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (h *hranaV2Conn) Close() error {$/;"	f	struct:hranaV2.hranaV2Conn	typeref:typename:error
Close	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (s *hranaV2Stmt) Close() error {$/;"	f	struct:hranaV2.hranaV2Stmt	typeref:typename:error
Close	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/rows.go	/^func (r *rows) Close() error {$/;"	f	struct:shared.rows	typeref:typename:error
Close	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (c *conn) Close() error {$/;"	f	struct:ws.conn	typeref:typename:error
Close	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (r *rows) Close() error {$/;"	f	struct:ws.rows	typeref:typename:error
Close	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (s stmt) Close() error {$/;"	f	struct:ws.stmt	typeref:typename:error
Close	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^func (ws *websocketConn) Close() error {$/;"	f	struct:ws.websocketConn	typeref:typename:error
Close	vendor/nhooyr.io/websocket/close_notjs.go	/^func (c *Conn) Close(code StatusCode, reason string) error {$/;"	f	unknown:websocket.Conn	typeref:typename:error
Close	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^func (c WebSocket) Close(code int, reason string) (err error) {$/;"	f	struct:wsjs.WebSocket	typeref:typename:(err error)
Close	vendor/nhooyr.io/websocket/netconn.go	/^func (c *netConn) Close() error {$/;"	f	struct:websocket.netConn	typeref:typename:error
Close	vendor/nhooyr.io/websocket/write.go	/^func (mw *msgWriter) Close() error {$/;"	f	struct:websocket.msgWriter	typeref:typename:error
Close	vendor/nhooyr.io/websocket/write.go	/^func (mw *msgWriterState) Close() (err error) {$/;"	f	struct:websocket.msgWriterState	typeref:typename:(err error)
Close	vendor/nhooyr.io/websocket/ws_js.go	/^func (c *Conn) Close(code StatusCode, reason string) error {$/;"	f	struct:websocket.Conn	typeref:typename:error
Close	vendor/nhooyr.io/websocket/ws_js.go	/^func (w writer) Close() error {$/;"	f	struct:websocket.writer	typeref:typename:error
CloseError	vendor/nhooyr.io/websocket/close.go	/^type CloseError struct {$/;"	s	package:websocket
CloseEvent	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^type CloseEvent struct {$/;"	s	package:wsjs
CloseRead	vendor/nhooyr.io/websocket/read.go	/^func (c *Conn) CloseRead(ctx context.Context) context.Context {$/;"	f	unknown:websocket.Conn	typeref:typename:context.Context
CloseRead	vendor/nhooyr.io/websocket/ws_js.go	/^func (c *Conn) CloseRead(ctx context.Context) context.Context {$/;"	f	struct:websocket.Conn	typeref:typename:context.Context
CloseStatus	vendor/nhooyr.io/websocket/close.go	/^func CloseStatus(err error) StatusCode {$/;"	f	package:websocket	typeref:typename:StatusCode
CloseStoredSqlStream	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_request.go	/^func CloseStoredSqlStream(sqlId int32) StreamRequest {$/;"	f	package:hrana	typeref:typename:StreamRequest
CloseStream	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_request.go	/^func CloseStream() StreamRequest {$/;"	f	package:hrana	typeref:typename:StreamRequest
Code	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_result.go	/^	Code    *string `json:"code,omitempty"`$/;"	m	struct:hrana.Error	typeref:typename:*string
Code	vendor/nhooyr.io/websocket/close.go	/^	Code   StatusCode$/;"	m	struct:websocket.CloseError	typeref:typename:StatusCode
Code	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^	Code     uint16$/;"	m	struct:wsjs.CloseEvent	typeref:typename:uint16
Collation_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Collation_name() ICollation_nameContext$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:ICollation_nameContext
Collation_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Collation_name() ICollation_nameContext$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:ICollation_nameContext
Collation_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Collation_name() ICollation_nameContext$/;"	n	interface:sqliteparser.IIndexed_columnContext	typeref:typename:ICollation_nameContext
Collation_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Collation_name() ICollation_nameContext$/;"	n	interface:sqliteparser.IOrdering_termContext	typeref:typename:ICollation_nameContext
Collation_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Collation_name() ICollation_nameContext$/;"	n	interface:sqliteparser.IReindex_stmtContext	typeref:typename:ICollation_nameContext
Collation_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Collation_name() (localctx ICollation_nameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ICollation_nameContext)
Collation_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) Collation_name() ICollation_nameContext {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:ICollation_nameContext
Collation_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) Collation_name() ICollation_nameContext {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:ICollation_nameContext
Collation_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Indexed_columnContext) Collation_name() ICollation_nameContext {$/;"	f	struct:sqliteparser.Indexed_columnContext	typeref:typename:ICollation_nameContext
Collation_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Ordering_termContext) Collation_name() ICollation_nameContext {$/;"	f	struct:sqliteparser.Ordering_termContext	typeref:typename:ICollation_nameContext
Collation_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Reindex_stmtContext) Collation_name() ICollation_nameContext {$/;"	f	struct:sqliteparser.Reindex_stmtContext	typeref:typename:ICollation_nameContext
Collation_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Collation_nameContext struct {$/;"	s	package:sqliteparser
Collectable	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/jcollect.go	/^type Collectable[T any] interface {$/;"	t	package:antlr	typeref:typename:[T any] interface { Hash() int; Equals(other Collectable[T]) bool;}
Cols	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt_result.go	/^	Cols             []Column  `json:"cols"`$/;"	m	struct:hrana.StmtResult	typeref:typename:[]Column
Column	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt_result.go	/^type Column struct {$/;"	s	package:hrana
Column_alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_alias() IColumn_aliasContext$/;"	n	interface:sqliteparser.IResult_columnContext	typeref:typename:IColumn_aliasContext
Column_alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Column_alias() (localctx IColumn_aliasContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IColumn_aliasContext)
Column_alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Result_columnContext) Column_alias() IColumn_aliasContext {$/;"	f	struct:sqliteparser.Result_columnContext	typeref:typename:IColumn_aliasContext
Column_aliasContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Column_aliasContext struct {$/;"	s	package:sqliteparser
Column_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_constraint(i int) IColumn_constraintContext$/;"	n	interface:sqliteparser.IColumn_defContext	typeref:typename:IColumn_constraintContext
Column_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Column_constraint() (localctx IColumn_constraintContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IColumn_constraintContext)
Column_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_defContext) Column_constraint(i int) IColumn_constraintContext {$/;"	f	struct:sqliteparser.Column_defContext	typeref:typename:IColumn_constraintContext
Column_constraintContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Column_constraintContext struct {$/;"	s	package:sqliteparser
Column_def	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_def() IColumn_defContext$/;"	n	interface:sqliteparser.IAlter_table_stmtContext	typeref:typename:IColumn_defContext
Column_def	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_def() IColumn_defContext$/;"	n	interface:sqliteparser.IModule_argumentContext	typeref:typename:IColumn_defContext
Column_def	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_def(i int) IColumn_defContext$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:IColumn_defContext
Column_def	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Column_def() (localctx IColumn_defContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IColumn_defContext)
Column_def	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) Column_def() IColumn_defContext {$/;"	f	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:IColumn_defContext
Column_def	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) Column_def(i int) IColumn_defContext {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:IColumn_defContext
Column_def	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Module_argumentContext) Column_def() IColumn_defContext {$/;"	f	struct:sqliteparser.Module_argumentContext	typeref:typename:IColumn_defContext
Column_defContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Column_defContext struct {$/;"	s	package:sqliteparser
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_name() IColumn_nameContext$/;"	n	interface:sqliteparser.IColumn_defContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_name() IColumn_nameContext$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_name() IColumn_nameContext$/;"	n	interface:sqliteparser.IIndexed_columnContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_name(i int) IColumn_nameContext$/;"	n	interface:sqliteparser.IAlter_table_stmtContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_name(i int) IColumn_nameContext$/;"	n	interface:sqliteparser.IColumn_name_listContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_name(i int) IColumn_nameContext$/;"	n	interface:sqliteparser.ICommon_table_expressionContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_name(i int) IColumn_nameContext$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_name(i int) IColumn_nameContext$/;"	n	interface:sqliteparser.ICreate_view_stmtContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_name(i int) IColumn_nameContext$/;"	n	interface:sqliteparser.ICte_table_nameContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_name(i int) IColumn_nameContext$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_name(i int) IColumn_nameContext$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_name(i int) IColumn_nameContext$/;"	n	interface:sqliteparser.IJoin_constraintContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_name(i int) IColumn_nameContext$/;"	n	interface:sqliteparser.ITable_constraintContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_name(i int) IColumn_nameContext$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_name(i int) IColumn_nameContext$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_name(i int) IColumn_nameContext$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Column_name() (localctx IColumn_nameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IColumn_nameContext)
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) Column_name(i int) IColumn_nameContext {$/;"	f	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_defContext) Column_name() IColumn_nameContext {$/;"	f	struct:sqliteparser.Column_defContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_name_listContext) Column_name(i int) IColumn_nameContext {$/;"	f	struct:sqliteparser.Column_name_listContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_expressionContext) Column_name(i int) IColumn_nameContext {$/;"	f	struct:sqliteparser.Common_table_expressionContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) Column_name(i int) IColumn_nameContext {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) Column_name(i int) IColumn_nameContext {$/;"	f	struct:sqliteparser.Create_view_stmtContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Cte_table_nameContext) Column_name(i int) IColumn_nameContext {$/;"	f	struct:sqliteparser.Cte_table_nameContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) Column_name() IColumn_nameContext {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) Column_name(i int) IColumn_nameContext {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Indexed_columnContext) Column_name() IColumn_nameContext {$/;"	f	struct:sqliteparser.Indexed_columnContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) Column_name(i int) IColumn_nameContext {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_constraintContext) Column_name(i int) IColumn_nameContext {$/;"	f	struct:sqliteparser.Join_constraintContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) Column_name(i int) IColumn_nameContext {$/;"	f	struct:sqliteparser.Table_constraintContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) Column_name(i int) IColumn_nameContext {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) Column_name(i int) IColumn_nameContext {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:IColumn_nameContext
Column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) Column_name(i int) IColumn_nameContext {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:IColumn_nameContext
Column_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Column_nameContext struct {$/;"	s	package:sqliteparser
Column_name_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_name_list(i int) IColumn_name_listContext$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:IColumn_name_listContext
Column_name_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_name_list(i int) IColumn_name_listContext$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:IColumn_name_listContext
Column_name_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Column_name_list(i int) IColumn_name_listContext$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:IColumn_name_listContext
Column_name_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Column_name_list() (localctx IColumn_name_listContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IColumn_name_listContext)
Column_name_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) Column_name_list(i int) IColumn_name_listContext {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:IColumn_name_listContext
Column_name_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) Column_name_list(i int) IColumn_name_listContext {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:IColumn_name_listContext
Column_name_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) Column_name_list(i int) IColumn_name_listContext {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:IColumn_name_listContext
Column_name_listContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Column_name_listContext struct {$/;"	s	package:sqliteparser
Columns	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (p *BatchResultRowsProvider) Columns(setIdx int) []string {$/;"	f	struct:hranaV2.BatchResultRowsProvider	typeref:typename:[]string
Columns	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (p *StmtResultRowsProvider) Columns(setIdx int) []string {$/;"	f	struct:hranaV2.StmtResultRowsProvider	typeref:typename:[]string
Columns	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/rows.go	/^	Columns(setIdx int) []string$/;"	n	interface:shared.rowsProvider	typeref:typename:[]string
Columns	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/rows.go	/^func (r *rows) Columns() []string {$/;"	f	struct:shared.rows	typeref:typename:[]string
Columns	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (r *rows) Columns() []string {$/;"	f	struct:ws.rows	typeref:typename:[]string
Command Mode	vendor/github.com/joho/godotenv/README.md	/^### Command Mode$/;"	S	section:GoDotEnv ![CI](https://github.com/joho/godotenv/workflows/CI/badge.svg) [![Go Report Card](https://goreportcard.com/badge/github.com/joho/godotenv)](https://goreportcard.com/report/github.com/joho/godotenv)""Usage
Commit	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (h hranaV2Tx) Commit() error {$/;"	f	struct:hranaV2.hranaV2Tx	typeref:typename:error
Commit	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (t tx) Commit() error {$/;"	f	struct:ws.tx	typeref:typename:error
Commit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Commit_stmt() ICommit_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:ICommit_stmtContext
Commit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Commit_stmt() (localctx ICommit_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ICommit_stmtContext)
Commit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Commit_stmt() ICommit_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:ICommit_stmtContext
Commit_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Commit_stmtContext struct {$/;"	s	package:sqliteparser
CommonToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^type CommonToken struct {$/;"	s	package:antlr
CommonTokenFactory	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_factory.go	/^type CommonTokenFactory struct {$/;"	s	package:antlr
CommonTokenFactoryDEFAULT	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_factory.go	/^var CommonTokenFactoryDEFAULT = NewCommonTokenFactory(false)$/;"	v	package:antlr
CommonTokenStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^type CommonTokenStream struct {$/;"	s	package:antlr
Common_table_expression	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Common_table_expression(i int) ICommon_table_expressionContext$/;"	n	interface:sqliteparser.ICommon_table_stmtContext	typeref:typename:ICommon_table_expressionContext
Common_table_expression	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Common_table_expression() (localctx ICommon_table_expressionContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ICommon_table_expressionContext)
Common_table_expression	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_stmtContext) Common_table_expression(i int) ICommon_table_expressionContex/;"	f	struct:sqliteparser.Common_table_stmtContext	typeref:typename:ICommon_table_expressionContext
Common_table_expressionContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Common_table_expressionContext struct {$/;"	s	package:sqliteparser
Common_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Common_table_stmt() ICommon_table_stmtContext$/;"	n	interface:sqliteparser.ICompound_select_stmtContext	typeref:typename:ICommon_table_stmtContext
Common_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Common_table_stmt() ICommon_table_stmtContext$/;"	n	interface:sqliteparser.ISelect_stmtContext	typeref:typename:ICommon_table_stmtContext
Common_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Common_table_stmt() ICommon_table_stmtContext$/;"	n	interface:sqliteparser.ISimple_select_stmtContext	typeref:typename:ICommon_table_stmtContext
Common_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Common_table_stmt() (localctx ICommon_table_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ICommon_table_stmtContext)
Common_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_select_stmtContext) Common_table_stmt() ICommon_table_stmtContext {$/;"	f	struct:sqliteparser.Compound_select_stmtContext	typeref:typename:ICommon_table_stmtContext
Common_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_stmtContext) Common_table_stmt() ICommon_table_stmtContext {$/;"	f	struct:sqliteparser.Select_stmtContext	typeref:typename:ICommon_table_stmtContext
Common_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_select_stmtContext) Common_table_stmt() ICommon_table_stmtContext {$/;"	f	struct:sqliteparser.Simple_select_stmtContext	typeref:typename:ICommon_table_stmtContext
Common_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Common_table_stmtContext struct {$/;"	s	package:sqliteparser
Compact	vendor/golang.org/x/exp/slices/slices.go	/^func Compact[S ~[]E, E comparable](s S) S {$/;"	f	package:slices	typeref:typename:(s S) S
CompactFunc	vendor/golang.org/x/exp/slices/slices.go	/^func CompactFunc[S ~[]E, E any](s S, eq func(E, E) bool) S {$/;"	f	package:slices	typeref:typename:(s S, eq func(E, E) bool) S
Comparator	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/jcollect.go	/^type Comparator[T any] interface {$/;"	t	package:antlr	typeref:typename:[T any] interface { Hash1(o T) int; Equals2(T, T) bool;}
Compare	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) Compare(bs *BaseATNConfigSet) bool {$/;"	f	struct:antlr.BaseATNConfigSet	typeref:typename:bool
Compare	vendor/golang.org/x/exp/slices/slices.go	/^func Compare[E constraints.Ordered](s1, s2 []E) int {$/;"	f	package:slices	typeref:typename:(s1, s2 []E) int
CompareFunc	vendor/golang.org/x/exp/slices/slices.go	/^func CompareFunc[E1, E2 any](s1 []E1, s2 []E2, cmp func(E1, E2) int) int {$/;"	f	package:slices	typeref:typename:(s1 []E1, s2 []E2, cmp func(E1, E2) int) int
Comparison	vendor/nhooyr.io/websocket/README.md	/^## Comparison$/;"	s	chapter:websocket
Complex	vendor/golang.org/x/exp/constraints/constraints.go	/^type Complex interface {$/;"	i	package:constraints
Compound_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Compound_operator(i int) ICompound_operatorContext$/;"	n	interface:sqliteparser.ISelect_stmtContext	typeref:typename:ICompound_operatorContext
Compound_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Compound_operator() (localctx ICompound_operatorContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ICompound_operatorContext)
Compound_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_stmtContext) Compound_operator(i int) ICompound_operatorContext {$/;"	f	struct:sqliteparser.Select_stmtContext	typeref:typename:ICompound_operatorContext
Compound_operatorContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Compound_operatorContext struct {$/;"	s	package:sqliteparser
Compound_select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Compound_select_stmt() (localctx ICompound_select_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ICompound_select_stmtContext)
Compound_select_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Compound_select_stmtContext struct {$/;"	s	package:sqliteparser
CompressionContextTakeover	vendor/nhooyr.io/websocket/compress.go	/^	CompressionContextTakeover$/;"	c	package:websocket
CompressionDisabled	vendor/nhooyr.io/websocket/compress.go	/^	CompressionDisabled$/;"	c	package:websocket
CompressionMode	vendor/nhooyr.io/websocket/accept.go	/^	CompressionMode CompressionMode$/;"	m	struct:websocket.AcceptOptions	typeref:typename:CompressionMode
CompressionMode	vendor/nhooyr.io/websocket/accept_js.go	/^	CompressionMode      CompressionMode$/;"	m	struct:websocket.AcceptOptions	typeref:typename:CompressionMode
CompressionMode	vendor/nhooyr.io/websocket/compress.go	/^type CompressionMode int$/;"	t	package:websocket	typeref:typename:int
CompressionMode	vendor/nhooyr.io/websocket/dial.go	/^	CompressionMode CompressionMode$/;"	m	struct:websocket.DialOptions	typeref:typename:CompressionMode
CompressionNoContextTakeover	vendor/nhooyr.io/websocket/compress.go	/^	CompressionNoContextTakeover CompressionMode = iota$/;"	c	package:websocket	typeref:type:CompressionMode
CompressionThreshold	vendor/nhooyr.io/websocket/accept.go	/^	CompressionThreshold int$/;"	m	struct:websocket.AcceptOptions	typeref:typename:int
CompressionThreshold	vendor/nhooyr.io/websocket/accept_js.go	/^	CompressionThreshold int$/;"	m	struct:websocket.AcceptOptions	typeref:typename:int
CompressionThreshold	vendor/nhooyr.io/websocket/dial.go	/^	CompressionThreshold int$/;"	m	struct:websocket.DialOptions	typeref:typename:int
Cond	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/batch.go	/^	Cond  *BatchCondition  `json:"cond,omitempty"`$/;"	m	struct:hrana.BatchCondition	typeref:typename:*BatchCondition
Condition	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/batch.go	/^	Condition *BatchCondition `json:"condition,omitempty"`$/;"	m	struct:hrana.BatchStep	typeref:typename:*BatchCondition
Conds	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/batch.go	/^	Conds []BatchCondition `json:"conds,omitempty"`$/;"	m	struct:hrana.BatchCondition	typeref:typename:[]BatchCondition
Conflict_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Conflict_clause() IConflict_clauseContext$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:IConflict_clauseContext
Conflict_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Conflict_clause() IConflict_clauseContext$/;"	n	interface:sqliteparser.ITable_constraintContext	typeref:typename:IConflict_clauseContext
Conflict_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Conflict_clause() (localctx IConflict_clauseContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IConflict_clauseContext)
Conflict_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) Conflict_clause() IConflict_clauseContext {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:IConflict_clauseContext
Conflict_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) Conflict_clause() IConflict_clauseContext {$/;"	f	struct:sqliteparser.Table_constraintContext	typeref:typename:IConflict_clauseContext
Conflict_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Conflict_clauseContext struct {$/;"	s	package:sqliteparser
Conn	vendor/nhooyr.io/websocket/conn_notjs.go	/^type Conn struct {$/;"	s	package:websocket
Conn	vendor/nhooyr.io/websocket/ws_js.go	/^type Conn struct {$/;"	s	package:websocket
Connect	vendor/github.com/go-chi/chi/chi.go	/^	Connect(pattern string, h http.HandlerFunc)$/;"	n	interface:chi.Router
Connect	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) Connect(pattern string, handlerFn http.HandlerFunc) {$/;"	f	struct:chi.Mux
Connect	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/driver.go	/^func Connect(url, jwt, host string) driver.Conn {$/;"	f	package:http	typeref:typename:driver.Conn
Connect	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func Connect(url, jwt, host string) driver.Conn {$/;"	f	package:hranaV2	typeref:typename:driver.Conn
Connect	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func Connect(url string, jwt string) (*conn, error) {$/;"	f	package:ws	typeref:typename:(*conn, error)
Connect	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^func (c fileConnector) Connect(_ctx context.Context) (driver.Conn, error) {$/;"	f	struct:libsql.fileConnector	typeref:typename:(driver.Conn, error)
Connect	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^func (c httpConnector) Connect(_ctx context.Context) (driver.Conn, error) {$/;"	f	struct:libsql.httpConnector	typeref:typename:(driver.Conn, error)
Connect	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^func (c wsConnector) Connect(_ctx context.Context) (driver.Conn, error) {$/;"	f	struct:libsql.wsConnector	typeref:typename:(driver.Conn, error)
ConsoleErrorListener	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^type ConsoleErrorListener struct {$/;"	s	package:antlr
ConsoleErrorListenerINSTANCE	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^var ConsoleErrorListenerINSTANCE = NewConsoleErrorListener()$/;"	v	package:antlr
ConstantCompression	vendor/github.com/klauspost/compress/flate/deflate.go	/^	ConstantCompression = HuffmanOnly \/\/ compatibility alias.$/;"	c	package:flate
Consume	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) Consume() {$/;"	f	struct:antlr.CommonTokenStream
Consume	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/input_stream.go	/^func (is *InputStream) Consume() {$/;"	f	struct:antlr.InputStream
Consume	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/int_stream.go	/^	Consume()$/;"	n	interface:antlr.IntStream
Consume	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	Consume(input CharStream)$/;"	n	interface:antlr.ILexerATNSimulator
Consume	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) Consume(input CharStream) {$/;"	f	struct:antlr.LexerATNSimulator
Consume	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	Consume() Token$/;"	n	interface:antlr.Parser	typeref:typename:Token
Consume	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) Consume() Token {$/;"	f	struct:antlr.BaseParser	typeref:typename:Token
Contains	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	Contains(ATNConfig) bool$/;"	n	interface:antlr.ATNConfigSet	typeref:typename:bool
Contains	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) Contains(item ATNConfig) bool {$/;"	f	struct:antlr.BaseATNConfigSet	typeref:typename:bool
Contains	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func (i *Interval) Contains(item int) bool {$/;"	f	struct:antlr.Interval	typeref:typename:bool
Contains	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/jcollect.go	/^func (s *JStore[T, C]) Contains(key T) bool { \/\/nolint:ireturn$/;"	f	unknown:antlr.C	typeref:typename:bool
Contains	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^	Contains(value interface{}) bool$/;"	n	interface:antlr.Set	typeref:typename:bool
Contains	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^func (as *array2DHashSet) Contains(value Collectable[any]) bool {$/;"	f	struct:antlr.array2DHashSet	typeref:typename:bool
Contains	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^func Contains[S ~[]E, E comparable](s S, v E) bool {$/;"	f	package:libsql	typeref:typename:(s S, v E) bool
Contains	vendor/golang.org/x/exp/slices/slices.go	/^func Contains[E comparable](s []E, v E) bool {$/;"	f	package:slices	typeref:typename:(s []E, v E) bool
ContainsFast	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	ContainsFast(ATNConfig) bool$/;"	n	interface:antlr.ATNConfigSet	typeref:typename:bool
ContainsFast	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) ContainsFast(item ATNConfig) bool {$/;"	f	struct:antlr.BaseATNConfigSet	typeref:typename:bool
Context	vendor/github.com/go-chi/chi/context.go	/^type Context struct {$/;"	s	package:chi
Contributing	vendor/github.com/go-chi/chi/CONTRIBUTING.md	/^# Contributing$/;"	c
Contributing	vendor/github.com/joho/godotenv/README.md	/^## Contributing$/;"	s	chapter:GoDotEnv ![CI](https://github.com/joho/godotenv/workflows/CI/badge.svg) [![Go Report Card](https://goreportcard.com/badge/github.com/joho/godotenv)](https://goreportcard.com/report/github.com/joho/godotenv)
ConvertArgs	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^func ConvertArgs(args []driver.NamedValue) (Params, error) {$/;"	f	package:shared	typeref:typename:(Params, error)
CopyFrom	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) CopyFrom(ctx *BaseParserRuleContext) {$/;"	f	struct:antlr.BaseParserRuleContext
Core middlewares	vendor/github.com/go-chi/chi/README.md	/^### Core middlewares$/;"	S	section:<img alt="chi" src="https://cdn.rawgit.com/go-chi/chi/master/_examples/chi.svg" width="220" />""Middlewares
CorruptInputError	vendor/github.com/klauspost/compress/flate/inflate.go	/^type CorruptInputError = flate.CorruptInputError$/;"	a	package:flate	typeref:typename:flate.CorruptInputError
Cors	vendor/github.com/go-chi/cors/cors.go	/^type Cors struct {$/;"	s	package:cors
Create	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_factory.go	/^	Create(source *TokenSourceCharStreamPair, ttype int, text string, channel, start, stop, line, c/;"	n	interface:antlr.TokenFactory	typeref:typename:Token
Create	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_factory.go	/^func (c *CommonTokenFactory) Create(source *TokenSourceCharStreamPair, ttype int, text string, c/;"	f	struct:antlr.CommonTokenFactory	typeref:typename:Token
CreateNote	internal/database/notes.sql.go	/^func (q *Queries) CreateNote(ctx context.Context, arg CreateNoteParams) error {$/;"	f	unknown:database.Queries	typeref:typename:error
CreateNoteParams	internal/database/notes.sql.go	/^type CreateNoteParams struct {$/;"	s	package:database
CreateUser	internal/database/users.sql.go	/^func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {$/;"	f	unknown:database.Queries	typeref:typename:error
CreateUserParams	internal/database/users.sql.go	/^type CreateUserParams struct {$/;"	s	package:database
Create_index_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Create_index_stmt() ICreate_index_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:ICreate_index_stmtContext
Create_index_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Create_index_stmt() (localctx ICreate_index_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ICreate_index_stmtContext)
Create_index_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Create_index_stmt() ICreate_index_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:ICreate_index_stmtContext
Create_index_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Create_index_stmtContext struct {$/;"	s	package:sqliteparser
Create_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Create_table_stmt() ICreate_table_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:ICreate_table_stmtContext
Create_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Create_table_stmt() (localctx ICreate_table_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ICreate_table_stmtContext)
Create_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Create_table_stmt() ICreate_table_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:ICreate_table_stmtContext
Create_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Create_table_stmtContext struct {$/;"	s	package:sqliteparser
Create_trigger_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Create_trigger_stmt() ICreate_trigger_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:ICreate_trigger_stmtContext
Create_trigger_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Create_trigger_stmt() (localctx ICreate_trigger_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ICreate_trigger_stmtContext)
Create_trigger_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Create_trigger_stmt() ICreate_trigger_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:ICreate_trigger_stmtContext
Create_trigger_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Create_trigger_stmtContext struct {$/;"	s	package:sqliteparser
Create_view_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Create_view_stmt() ICreate_view_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:ICreate_view_stmtContext
Create_view_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Create_view_stmt() (localctx ICreate_view_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ICreate_view_stmtContext)
Create_view_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Create_view_stmt() ICreate_view_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:ICreate_view_stmtContext
Create_view_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Create_view_stmtContext struct {$/;"	s	package:sqliteparser
Create_virtual_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Create_virtual_table_stmt() ICreate_virtual_table_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:ICreate_virtual_table_stmtContext
Create_virtual_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Create_virtual_table_stmt() (localctx ICreate_virtual_table_stmtContext) /;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ICreate_virtual_table_stmtContext)
Create_virtual_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Create_virtual_table_stmt() ICreate_virtual_table_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:ICreate_virtual_table_stmtContext
Create_virtual_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Create_virtual_table_stmtContext struct {$/;"	s	package:sqliteparser
CreatedAt	internal/database/models.go	/^	CreatedAt string$/;"	m	struct:database.Note	typeref:typename:string
CreatedAt	internal/database/models.go	/^	CreatedAt string$/;"	m	struct:database.User	typeref:typename:string
CreatedAt	internal/database/notes.sql.go	/^	CreatedAt string$/;"	m	struct:database.CreateNoteParams	typeref:typename:string
CreatedAt	internal/database/users.sql.go	/^	CreatedAt string$/;"	m	struct:database.CreateUserParams	typeref:typename:string
CreatedAt	models.go	/^	CreatedAt time.Time `json:"created_at"`$/;"	m	struct:main.Note	typeref:typename:time.Time
CreatedAt	models.go	/^	CreatedAt time.Time `json:"created_at"`$/;"	m	struct:main.User	typeref:typename:time.Time
Credits	vendor/github.com/go-chi/chi/README.md	/^## Credits$/;"	s	chapter:<img alt="chi" src="https://cdn.rawgit.com/go-chi/chi/master/_examples/chi.svg" width="220" />
Credits	vendor/github.com/go-chi/cors/README.md	/^## Credits$/;"	s	chapter:CORS net/http middleware
Cte_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Cte_table_name() ICte_table_nameContext$/;"	n	interface:sqliteparser.IRecursive_cteContext	typeref:typename:ICte_table_nameContext
Cte_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Cte_table_name(i int) ICte_table_nameContext$/;"	n	interface:sqliteparser.IWith_clauseContext	typeref:typename:ICte_table_nameContext
Cte_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Cte_table_name() (localctx ICte_table_nameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ICte_table_nameContext)
Cte_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Recursive_cteContext) Cte_table_name() ICte_table_nameContext {$/;"	f	struct:sqliteparser.Recursive_cteContext	typeref:typename:ICte_table_nameContext
Cte_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *With_clauseContext) Cte_table_name(i int) ICte_table_nameContext {$/;"	f	struct:sqliteparser.With_clauseContext	typeref:typename:ICte_table_nameContext
Cte_table_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Cte_table_nameContext struct {$/;"	s	package:sqliteparser
Cur	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	Cur  tableEntry$/;"	m	struct:flate.tableEntryPrev	typeref:typename:tableEntry
DATABASE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DATABASE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAttach_stmtContext	typeref:typename:antlr.TerminalNode
DATABASE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DATABASE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IDetach_stmtContext	typeref:typename:antlr.TerminalNode
DATABASE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DATABASE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
DATABASE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Attach_stmtContext) DATABASE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Attach_stmtContext	typeref:typename:antlr.TerminalNode
DATABASE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Detach_stmtContext) DATABASE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Detach_stmtContext	typeref:typename:antlr.TerminalNode
DATABASE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) DATABASE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
DB	main.go	/^	DB *database.Queries$/;"	m	struct:main.apiConfig	typeref:typename:*database.Queries
DBTX	internal/database/db.go	/^type DBTX interface {$/;"	i	package:database
DEFAULT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DEFAULT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:antlr.TerminalNode
DEFAULT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DEFAULT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:antlr.TerminalNode
DEFAULT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DEFAULT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
DEFAULT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DEFAULT_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:antlr.TerminalNode
DEFAULT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) DEFAULT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:antlr.TerminalNode
DEFAULT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) DEFAULT_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.TerminalNode
DEFAULT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) DEFAULT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:antlr.TerminalNode
DEFAULT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) DEFAULT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
DEFERRABLE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DEFERRABLE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:antlr.TerminalNode
DEFERRABLE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DEFERRABLE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
DEFERRABLE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) DEFERRABLE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.TerminalNode
DEFERRABLE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) DEFERRABLE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
DEFERRED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DEFERRED_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IBegin_stmtContext	typeref:typename:antlr.TerminalNode
DEFERRED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DEFERRED_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:antlr.TerminalNode
DEFERRED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DEFERRED_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
DEFERRED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Begin_stmtContext) DEFERRED_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Begin_stmtContext	typeref:typename:antlr.TerminalNode
DEFERRED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) DEFERRED_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.TerminalNode
DEFERRED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) DEFERRED_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
DELETE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DELETE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
DELETE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DELETE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IDelete_stmtContext	typeref:typename:antlr.TerminalNode
DELETE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DELETE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IDelete_stmt_limitedContext	typeref:typename:antlr.TerminalNode
DELETE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DELETE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
DELETE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DELETE_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:antlr.TerminalNode
DELETE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) DELETE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
DELETE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmtContext) DELETE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Delete_stmtContext	typeref:typename:antlr.TerminalNode
DELETE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmt_limitedContext) DELETE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Delete_stmt_limitedContext	typeref:typename:antlr.TerminalNode
DELETE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) DELETE_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.TerminalNode
DELETE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) DELETE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
DENSE_RANK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DENSE_RANK_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
DENSE_RANK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DENSE_RANK_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:antlr.TerminalNode
DENSE_RANK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) DENSE_RANK_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
DENSE_RANK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) DENSE_RANK_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:antlr.TerminalNode
DESC_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DESC_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAsc_descContext	typeref:typename:antlr.TerminalNode
DESC_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DESC_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
DESC_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Asc_descContext) DESC_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Asc_descContext	typeref:typename:antlr.TerminalNode
DESC_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) DESC_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
DETACH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DETACH_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IDetach_stmtContext	typeref:typename:antlr.TerminalNode
DETACH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DETACH_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
DETACH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Detach_stmtContext) DETACH_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Detach_stmtContext	typeref:typename:antlr.TerminalNode
DETACH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) DETACH_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
DFA	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa.go	/^type DFA struct {$/;"	s	package:antlr
DFASerializer	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_serializer.go	/^	*DFASerializer$/;"	M	struct:antlr.LexerDFASerializer	typeref:typename:*DFASerializer
DFASerializer	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_serializer.go	/^type DFASerializer struct {$/;"	s	package:antlr
DFAState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^type DFAState struct {$/;"	s	package:antlr
DISTINCT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DISTINCT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAggregate_function_invocationContext	typeref:typename:antlr.TerminalNode
DISTINCT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DISTINCT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
DISTINCT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DISTINCT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
DISTINCT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DISTINCT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:antlr.TerminalNode
DISTINCT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Aggregate_function_invocationContext) DISTINCT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Aggregate_function_invocationContext	typeref:typename:antlr.TerminalNode
DISTINCT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) DISTINCT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
DISTINCT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) DISTINCT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
DISTINCT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) DISTINCT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:antlr.TerminalNode
DIV	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DIV() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
DIV	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) DIV() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DOT() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAlter_table_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DOT() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAnalyze_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DOT() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_index_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DOT() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DOT() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DOT() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_view_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DOT() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DOT() antlr.TerminalNode$/;"	n	interface:sqliteparser.IDrop_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DOT() antlr.TerminalNode$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DOT() antlr.TerminalNode$/;"	n	interface:sqliteparser.IPragma_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DOT() antlr.TerminalNode$/;"	n	interface:sqliteparser.IQualified_table_nameContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DOT() antlr.TerminalNode$/;"	n	interface:sqliteparser.IReindex_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DOT() antlr.TerminalNode$/;"	n	interface:sqliteparser.IResult_columnContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DOT() antlr.TerminalNode$/;"	n	interface:sqliteparser.ITable_or_subqueryContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DOT(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) DOT() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Analyze_stmtContext) DOT() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Analyze_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) DOT() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) DOT() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) DOT() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) DOT() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_view_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) DOT() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Drop_stmtContext) DOT() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Drop_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) DOT(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) DOT() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_stmtContext) DOT() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Pragma_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Qualified_table_nameContext) DOT() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Qualified_table_nameContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Reindex_stmtContext) DOT() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Reindex_stmtContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Result_columnContext) DOT() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Result_columnContext	typeref:typename:antlr.TerminalNode
DOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) DOT() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:antlr.TerminalNode
DO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DO_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:antlr.TerminalNode
DO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) DO_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:antlr.TerminalNode
DROP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DROP_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAlter_table_stmtContext	typeref:typename:antlr.TerminalNode
DROP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DROP_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IDrop_stmtContext	typeref:typename:antlr.TerminalNode
DROP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	DROP_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
DROP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) DROP_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:antlr.TerminalNode
DROP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Drop_stmtContext) DROP_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Drop_stmtContext	typeref:typename:antlr.TerminalNode
DROP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) DROP_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
Data	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^	Data interface{}$/;"	m	struct:wsjs.MessageEvent	typeref:typename:interface{}
Debug	vendor/github.com/go-chi/cors/cors.go	/^	Debug bool$/;"	m	struct:cors.Options	typeref:typename:bool
DecisionState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^type DecisionState interface {$/;"	i	package:antlr
DecisionToDFA	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_simulator.go	/^	DecisionToDFA() []*DFA$/;"	n	interface:antlr.IATNSimulator	typeref:typename:[]*DFA
DecisionToDFA	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_simulator.go	/^func (b *BaseATNSimulator) DecisionToDFA() []*DFA {$/;"	f	struct:antlr.BaseATNSimulator	typeref:typename:[]*DFA
DecisionToState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^	DecisionToState []DecisionState$/;"	m	struct:antlr.ATN	typeref:typename:[]DecisionState
DefaultATNDeserializationOptions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserialization_options.go	/^func DefaultATNDeserializationOptions() *ATNDeserializationOptions {$/;"	f	package:antlr	typeref:typename:*ATNDeserializationOptions
DefaultCompression	vendor/github.com/klauspost/compress/flate/deflate.go	/^	DefaultCompression = -1$/;"	c	package:flate
DefaultErrorListener	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/diagnostic_error_listener.go	/^	*DefaultErrorListener$/;"	M	struct:antlr.DiagnosticErrorListener	typeref:typename:*DefaultErrorListener
DefaultErrorListener	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^	*DefaultErrorListener$/;"	M	struct:antlr.ConsoleErrorListener	typeref:typename:*DefaultErrorListener
DefaultErrorListener	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^	*DefaultErrorListener$/;"	M	struct:antlr.ProxyErrorListener	typeref:typename:*DefaultErrorListener
DefaultErrorListener	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^type DefaultErrorListener struct {$/;"	s	package:antlr
DefaultErrorStrategy	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^	*DefaultErrorStrategy$/;"	M	struct:antlr.BailErrorStrategy	typeref:typename:*DefaultErrorStrategy
DefaultErrorStrategy	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^type DefaultErrorStrategy struct {$/;"	s	package:antlr
Default_Program_Name	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	Default_Program_Name = "default"$/;"	c	package:antlr
Default_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Default_value() IDefault_valueContext$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:IDefault_valueContext
Default_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Default_value() (localctx IDefault_valueContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IDefault_valueContext)
Default_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) Default_value() IDefault_valueContext {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:IDefault_valueContext
Default_valueContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Default_valueContext struct {$/;"	s	package:sqliteparser
Delete	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/jcollect.go	/^func (m *JMap[K, V, C]) Delete(key K) {$/;"	f	unknown:antlr.C
Delete	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) Delete(program_name string, from, to int) {$/;"	f	struct:antlr.TokenStreamRewriter
Delete	vendor/github.com/go-chi/chi/chi.go	/^	Delete(pattern string, h http.HandlerFunc)$/;"	n	interface:chi.Router
Delete	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) Delete(pattern string, handlerFn http.HandlerFunc) {$/;"	f	struct:chi.Mux
Delete	vendor/golang.org/x/exp/slices/slices.go	/^func Delete[S ~[]E, E any](s S, i, j int) S {$/;"	f	package:slices	typeref:typename:(s S, i, j int) S
DeleteDefault	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) DeleteDefault(from, to int) {$/;"	f	struct:antlr.TokenStreamRewriter
DeleteDefaultPos	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) DeleteDefaultPos(index int) {$/;"	f	struct:antlr.TokenStreamRewriter
DeleteProgram	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) DeleteProgram(program_name string) {$/;"	f	struct:antlr.TokenStreamRewriter
DeleteProgramDefault	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) DeleteProgramDefault() {$/;"	f	struct:antlr.TokenStreamRewriter
DeleteToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) DeleteToken(program_name string, from, to Token) {$/;"	f	struct:antlr.TokenStreamRewriter
DeleteTokenDefault	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) DeleteTokenDefault(from, to Token) {$/;"	f	struct:antlr.TokenStreamRewriter
Delete_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Delete_stmt() IDelete_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:IDelete_stmtContext
Delete_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Delete_stmt(i int) IDelete_stmtContext$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:IDelete_stmtContext
Delete_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Delete_stmt() (localctx IDelete_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IDelete_stmtContext)
Delete_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) Delete_stmt(i int) IDelete_stmtContext {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:IDelete_stmtContext
Delete_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Delete_stmt() IDelete_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:IDelete_stmtContext
Delete_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Delete_stmtContext struct {$/;"	s	package:sqliteparser
Delete_stmt_limited	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Delete_stmt_limited() IDelete_stmt_limitedContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:IDelete_stmt_limitedContext
Delete_stmt_limited	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Delete_stmt_limited() (localctx IDelete_stmt_limitedContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IDelete_stmt_limitedContext)
Delete_stmt_limited	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Delete_stmt_limited() IDelete_stmt_limitedContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:IDelete_stmt_limitedContext
Delete_stmt_limitedContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Delete_stmt_limitedContext struct {$/;"	s	package:sqliteparser
Deserialize	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func (a *ATNDeserializer) Deserialize(data []int32) *ATN {$/;"	f	struct:antlr.ATNDeserializer	typeref:typename:*ATN
Detach_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Detach_stmt() IDetach_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:IDetach_stmtContext
Detach_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Detach_stmt() (localctx IDetach_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IDetach_stmtContext)
Detach_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Detach_stmt() IDetach_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:IDetach_stmtContext
Detach_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Detach_stmtContext struct {$/;"	s	package:sqliteparser
DiagnosticErrorListener	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/diagnostic_error_listener.go	/^type DiagnosticErrorListener struct {$/;"	s	package:antlr
Dial	vendor/nhooyr.io/websocket/dial.go	/^func Dial(ctx context.Context, u string, opts *DialOptions) (*Conn, *http.Response, error) {$/;"	f	package:websocket	typeref:typename:(*Conn, *http.Response, error)
Dial	vendor/nhooyr.io/websocket/ws_js.go	/^func Dial(ctx context.Context, url string, opts *DialOptions) (*Conn, *http.Response, error) {$/;"	f	package:websocket	typeref:typename:(*Conn, *http.Response, error)
DialOptions	vendor/nhooyr.io/websocket/dial.go	/^type DialOptions struct {$/;"	s	package:websocket
DialOptions	vendor/nhooyr.io/websocket/ws_js.go	/^type DialOptions struct {$/;"	s	package:websocket
DisableRandPool	vendor/github.com/google/uuid/uuid.go	/^func DisableRandPool() {$/;"	f	package:uuid
Documentation	vendor/github.com/google/uuid/README.md	/^###### Documentation $/;"	u	chapter:uuid ![build status](https://travis-ci.org/google/uuid.svg?branch=master)
Domain	vendor/github.com/google/uuid/dce.go	/^func (uuid UUID) Domain() Domain {$/;"	f	unknown:uuid.UUID	typeref:typename:Domain
Domain	vendor/github.com/google/uuid/dce.go	/^type Domain byte$/;"	t	package:uuid	typeref:typename:byte
DoubleDict	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^type DoubleDict struct {$/;"	s	package:antlr
Driver	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^func (c fileConnector) Driver() driver.Driver {$/;"	f	struct:libsql.fileConnector	typeref:typename:driver.Driver
Driver	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^func (c httpConnector) Driver() driver.Driver {$/;"	f	struct:libsql.httpConnector	typeref:typename:driver.Driver
Driver	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^func (c wsConnector) Driver() driver.Driver {$/;"	f	struct:libsql.wsConnector	typeref:typename:driver.Driver
Driver	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^type Driver struct {$/;"	s	package:libsql
Drop_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Drop_stmt() IDrop_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:IDrop_stmtContext
Drop_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Drop_stmt() (localctx IDrop_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IDrop_stmtContext)
Drop_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Drop_stmt() IDrop_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:IDrop_stmtContext
Drop_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Drop_stmtContext struct {$/;"	s	package:sqliteparser
DumpDFA	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) DumpDFA() {$/;"	f	struct:antlr.BaseParser
EACH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	EACH_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
EACH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	EACH_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
EACH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) EACH_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
EACH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) EACH_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
ELSE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ELSE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
ELSE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ELSE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
ELSE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) ELSE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
ELSE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) ELSE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
END_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	END_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICommit_stmtContext	typeref:typename:antlr.TerminalNode
END_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	END_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
END_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	END_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
END_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	END_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
END_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Commit_stmtContext) END_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Commit_stmtContext	typeref:typename:antlr.TerminalNode
END_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) END_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
END_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) END_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
END_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) END_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
EOF	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	EOF() antlr.TerminalNode$/;"	n	interface:sqliteparser.IParseContext	typeref:typename:antlr.TerminalNode
EOF	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ParseContext) EOF() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ParseContext	typeref:typename:antlr.TerminalNode
EQ	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	EQ() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
EQ	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) EQ() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
ESCAPE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ESCAPE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
ESCAPE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ESCAPE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
ESCAPE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) ESCAPE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
ESCAPE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) ESCAPE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
EXCEPT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	EXCEPT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICompound_operatorContext	typeref:typename:antlr.TerminalNode
EXCEPT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	EXCEPT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
EXCEPT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	EXCEPT_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ICompound_select_stmtContext	typeref:typename:antlr.TerminalNode
EXCEPT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_operatorContext) EXCEPT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Compound_operatorContext	typeref:typename:antlr.TerminalNode
EXCEPT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_select_stmtContext) EXCEPT_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Compound_select_stmtContext	typeref:typename:antlr.TerminalNode
EXCEPT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) EXCEPT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
EXCLUDE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	EXCLUDE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_specContext	typeref:typename:antlr.TerminalNode
EXCLUDE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	EXCLUDE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
EXCLUDE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_specContext) EXCLUDE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_specContext	typeref:typename:antlr.TerminalNode
EXCLUDE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) EXCLUDE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
EXCLUSIVE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	EXCLUSIVE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IBegin_stmtContext	typeref:typename:antlr.TerminalNode
EXCLUSIVE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	EXCLUSIVE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
EXCLUSIVE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Begin_stmtContext) EXCLUSIVE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Begin_stmtContext	typeref:typename:antlr.TerminalNode
EXCLUSIVE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) EXCLUSIVE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
EXISTS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	EXISTS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_index_stmtContext	typeref:typename:antlr.TerminalNode
EXISTS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	EXISTS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:antlr.TerminalNode
EXISTS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	EXISTS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
EXISTS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	EXISTS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_view_stmtContext	typeref:typename:antlr.TerminalNode
EXISTS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	EXISTS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
EXISTS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	EXISTS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IDrop_stmtContext	typeref:typename:antlr.TerminalNode
EXISTS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	EXISTS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
EXISTS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	EXISTS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
EXISTS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) EXISTS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:antlr.TerminalNode
EXISTS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) EXISTS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:antlr.TerminalNode
EXISTS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) EXISTS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
EXISTS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) EXISTS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_view_stmtContext	typeref:typename:antlr.TerminalNode
EXISTS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) EXISTS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
EXISTS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Drop_stmtContext) EXISTS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Drop_stmtContext	typeref:typename:antlr.TerminalNode
EXISTS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) EXISTS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
EXISTS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) EXISTS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
EXPLAIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	EXPLAIN_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
EXPLAIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	EXPLAIN_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:antlr.TerminalNode
EXPLAIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) EXPLAIN_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
EXPLAIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) EXPLAIN_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:antlr.TerminalNode
Each	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/jcollect.go	/^func (s *JStore[T, C]) Each(f func(T) bool) {$/;"	f	unknown:antlr.C
Each	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^	Each(f func(interface{}) bool)$/;"	n	interface:antlr.Set
Each	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^func (as *array2DHashSet) Each(f func(interface{}) bool) {$/;"	f	struct:antlr.array2DHashSet
Emit	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	Emit() Token$/;"	n	interface:antlr.Lexer	typeref:typename:Token
Emit	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) Emit() Token {$/;"	f	struct:antlr.BaseLexer	typeref:typename:Token
EmitEOF	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) EmitEOF() Token {$/;"	f	struct:antlr.BaseLexer	typeref:typename:Token
EmitToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) EmitToken(token Token) {$/;"	f	struct:antlr.BaseLexer
EmptyPredictionContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^type EmptyPredictionContext struct {$/;"	s	package:antlr
EnableRandPool	vendor/github.com/google/uuid/uuid.go	/^func EnableRandPool() {$/;"	f	package:uuid
Encode	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	Encode(dst *tokens, src []byte)$/;"	n	interface:flate.fastEnc
Encode	vendor/github.com/klauspost/compress/flate/level1.go	/^func (e *fastEncL1) Encode(dst *tokens, src []byte) {$/;"	f	struct:flate.fastEncL1
Encode	vendor/github.com/klauspost/compress/flate/level2.go	/^func (e *fastEncL2) Encode(dst *tokens, src []byte) {$/;"	f	struct:flate.fastEncL2
Encode	vendor/github.com/klauspost/compress/flate/level3.go	/^func (e *fastEncL3) Encode(dst *tokens, src []byte) {$/;"	f	struct:flate.fastEncL3
Encode	vendor/github.com/klauspost/compress/flate/level4.go	/^func (e *fastEncL4) Encode(dst *tokens, src []byte) {$/;"	f	struct:flate.fastEncL4
Encode	vendor/github.com/klauspost/compress/flate/level5.go	/^func (e *fastEncL5) Encode(dst *tokens, src []byte) {$/;"	f	struct:flate.fastEncL5
Encode	vendor/github.com/klauspost/compress/flate/level6.go	/^func (e *fastEncL6) Encode(dst *tokens, src []byte) {$/;"	f	struct:flate.fastEncL6
Endpoint	vendor/github.com/go-chi/chi/chain.go	/^	Endpoint    http.Handler$/;"	m	struct:chi.ChainHandler	typeref:typename:http.Handler
EnterAggregate_func	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterAggregate_func(ctx *Aggregate_funcContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterAggregate_func	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterAggregate_func(c *Aggregate_funcContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterAggregate_function_invocation	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterAggregate_function_invocation(ctx *Aggregate_function_in/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterAggregate_function_invocation	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterAggregate_function_invocation(c *Aggregate_function_invocationContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterAlias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterAlias(ctx *AliasContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterAlias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterAlias(c *AliasContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterAlter_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterAlter_table_stmt(ctx *Alter_table_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterAlter_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterAlter_table_stmt(c *Alter_table_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterAnalyze_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterAnalyze_stmt(ctx *Analyze_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterAnalyze_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterAnalyze_stmt(c *Analyze_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterAny_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterAny_name(ctx *Any_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterAny_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterAny_name(c *Any_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterAsc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterAsc_desc(ctx *Asc_descContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterAsc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterAsc_desc(c *Asc_descContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterAttach_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterAttach_stmt(ctx *Attach_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterAttach_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterAttach_stmt(c *Attach_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterBase_window_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterBase_window_name(ctx *Base_window_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterBase_window_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterBase_window_name(c *Base_window_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterBegin_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterBegin_stmt(ctx *Begin_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterBegin_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterBegin_stmt(c *Begin_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterCollation_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterCollation_name(ctx *Collation_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterCollation_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterCollation_name(c *Collation_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterColumn_alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterColumn_alias(ctx *Column_aliasContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterColumn_alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterColumn_alias(c *Column_aliasContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterColumn_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterColumn_constraint(ctx *Column_constraintContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterColumn_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterColumn_constraint(c *Column_constraintContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterColumn_def	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterColumn_def(ctx *Column_defContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterColumn_def	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterColumn_def(c *Column_defContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterColumn_name(ctx *Column_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterColumn_name(c *Column_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterColumn_name_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterColumn_name_list(ctx *Column_name_listContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterColumn_name_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterColumn_name_list(c *Column_name_listContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterCommit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterCommit_stmt(ctx *Commit_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterCommit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterCommit_stmt(c *Commit_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterCommon_table_expression	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterCommon_table_expression(ctx *Common_table_expressionCont/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterCommon_table_expression	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterCommon_table_expression(c *Common_table_expressionContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterCommon_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterCommon_table_stmt(ctx *Common_table_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterCommon_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterCommon_table_stmt(c *Common_table_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterCompound_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterCompound_operator(ctx *Compound_operatorContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterCompound_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterCompound_operator(c *Compound_operatorContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterCompound_select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterCompound_select_stmt(ctx *Compound_select_stmtContext) {/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterCompound_select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterCompound_select_stmt(c *Compound_select_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterConflict_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterConflict_clause(ctx *Conflict_clauseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterConflict_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterConflict_clause(c *Conflict_clauseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterCreate_index_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterCreate_index_stmt(ctx *Create_index_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterCreate_index_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterCreate_index_stmt(c *Create_index_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterCreate_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterCreate_table_stmt(ctx *Create_table_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterCreate_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterCreate_table_stmt(c *Create_table_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterCreate_trigger_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterCreate_trigger_stmt(ctx *Create_trigger_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterCreate_trigger_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterCreate_trigger_stmt(c *Create_trigger_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterCreate_view_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterCreate_view_stmt(ctx *Create_view_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterCreate_view_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterCreate_view_stmt(c *Create_view_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterCreate_virtual_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterCreate_virtual_table_stmt(ctx *Create_virtual_table_stmt/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterCreate_virtual_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterCreate_virtual_table_stmt(c *Create_virtual_table_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterCte_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterCte_table_name(ctx *Cte_table_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterCte_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterCte_table_name(c *Cte_table_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterDefault_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterDefault_value(ctx *Default_valueContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterDefault_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterDefault_value(c *Default_valueContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterDelete_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterDelete_stmt(ctx *Delete_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterDelete_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterDelete_stmt(c *Delete_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterDelete_stmt_limited	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterDelete_stmt_limited(ctx *Delete_stmt_limitedContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterDelete_stmt_limited	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterDelete_stmt_limited(c *Delete_stmt_limitedContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterDetach_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterDetach_stmt(ctx *Detach_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterDetach_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterDetach_stmt(c *Detach_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterDrop_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterDrop_stmt(ctx *Drop_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterDrop_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterDrop_stmt(c *Drop_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterError_message	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterError_message(ctx *Error_messageContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterError_message	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterError_message(c *Error_messageContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterEveryRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/trace_listener.go	/^func (t *TraceListener) EnterEveryRule(ctx ParserRuleContext) {$/;"	f	struct:antlr.TraceListener
EnterEveryRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	EnterEveryRule(ctx ParserRuleContext)$/;"	n	interface:antlr.ParseTreeListener
EnterEveryRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (l *BaseParseTreeListener) EnterEveryRule(ctx ParserRuleContext) {}$/;"	f	struct:antlr.BaseParseTreeListener
EnterEveryRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterEveryRule(ctx antlr.ParserRuleContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterExpr(ctx *ExprContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterExpr(c *ExprContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterExpr_asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterExpr_asc_desc(ctx *Expr_asc_descContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterExpr_asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterExpr_asc_desc(c *Expr_asc_descContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterFactored_select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterFactored_select_stmt(ctx *Factored_select_stmtContext) {/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterFactored_select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterFactored_select_stmt(c *Factored_select_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterFilename	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterFilename(ctx *FilenameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterFilename	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterFilename(c *FilenameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterFilter_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterFilter_clause(ctx *Filter_clauseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterFilter_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterFilter_clause(c *Filter_clauseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterForeign_key_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterForeign_key_clause(ctx *Foreign_key_clauseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterForeign_key_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterForeign_key_clause(c *Foreign_key_clauseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterForeign_table	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterForeign_table(ctx *Foreign_tableContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterForeign_table	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterForeign_table(c *Foreign_tableContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterFrame_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterFrame_clause(ctx *Frame_clauseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterFrame_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterFrame_clause(c *Frame_clauseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterFrame_left	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterFrame_left(ctx *Frame_leftContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterFrame_left	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterFrame_left(c *Frame_leftContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterFrame_right	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterFrame_right(ctx *Frame_rightContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterFrame_right	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterFrame_right(c *Frame_rightContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterFrame_single	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterFrame_single(ctx *Frame_singleContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterFrame_single	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterFrame_single(c *Frame_singleContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterFrame_spec	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterFrame_spec(ctx *Frame_specContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterFrame_spec	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterFrame_spec(c *Frame_specContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterFunction_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterFunction_name(ctx *Function_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterFunction_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterFunction_name(c *Function_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterIndex_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterIndex_name(ctx *Index_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterIndex_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterIndex_name(c *Index_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterIndexed_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterIndexed_column(ctx *Indexed_columnContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterIndexed_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterIndexed_column(c *Indexed_columnContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterInitial_select	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterInitial_select(ctx *Initial_selectContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterInitial_select	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterInitial_select(c *Initial_selectContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterInsert_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterInsert_stmt(ctx *Insert_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterInsert_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterInsert_stmt(c *Insert_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterJoin_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterJoin_clause(ctx *Join_clauseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterJoin_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterJoin_clause(c *Join_clauseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterJoin_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterJoin_constraint(ctx *Join_constraintContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterJoin_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterJoin_constraint(c *Join_constraintContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterJoin_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterJoin_operator(ctx *Join_operatorContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterJoin_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterJoin_operator(c *Join_operatorContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterKeyword	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterKeyword(ctx *KeywordContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterKeyword	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterKeyword(c *KeywordContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterLimit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterLimit_stmt(ctx *Limit_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterLimit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterLimit_stmt(c *Limit_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterLiteral_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterLiteral_value(ctx *Literal_valueContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterLiteral_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterLiteral_value(c *Literal_valueContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterModule_argument	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterModule_argument(ctx *Module_argumentContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterModule_argument	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterModule_argument(c *Module_argumentContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterModule_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterModule_name(ctx *Module_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterModule_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterModule_name(c *Module_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterName	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterName(ctx *NameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterName	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterName(c *NameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterOffset	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterOffset(ctx *OffsetContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterOffset	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterOffset(c *OffsetContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterOrder_by_expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterOrder_by_expr(ctx *Order_by_exprContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterOrder_by_expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterOrder_by_expr(c *Order_by_exprContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterOrder_by_expr_asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterOrder_by_expr_asc_desc(ctx *Order_by_expr_asc_descContex/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterOrder_by_expr_asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterOrder_by_expr_asc_desc(c *Order_by_expr_asc_descContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterOrder_by_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterOrder_by_stmt(ctx *Order_by_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterOrder_by_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterOrder_by_stmt(c *Order_by_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterOrdering_term	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterOrdering_term(ctx *Ordering_termContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterOrdering_term	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterOrdering_term(c *Ordering_termContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterOuterAlt	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) EnterOuterAlt(localctx ParserRuleContext, altNum int) {$/;"	f	struct:antlr.BaseParser
EnterOver_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterOver_clause(ctx *Over_clauseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterOver_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterOver_clause(c *Over_clauseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterParse	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterParse(ctx *ParseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterParse	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterParse(c *ParseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterPartition_by	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterPartition_by(ctx *Partition_byContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterPartition_by	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterPartition_by(c *Partition_byContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterPragma_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterPragma_name(ctx *Pragma_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterPragma_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterPragma_name(c *Pragma_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterPragma_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterPragma_stmt(ctx *Pragma_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterPragma_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterPragma_stmt(c *Pragma_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterPragma_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterPragma_value(ctx *Pragma_valueContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterPragma_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterPragma_value(c *Pragma_valueContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterQualified_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterQualified_table_name(ctx *Qualified_table_nameContext) {/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterQualified_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterQualified_table_name(c *Qualified_table_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterRaise_function	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterRaise_function(ctx *Raise_functionContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterRaise_function	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterRaise_function(c *Raise_functionContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterRecursionRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) EnterRecursionRule(localctx ParserRuleContext, state, ruleIndex, precedence/;"	f	struct:antlr.BaseParser
EnterRecursive_cte	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterRecursive_cte(ctx *Recursive_cteContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterRecursive_cte	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterRecursive_cte(c *Recursive_cteContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterRecursive_select	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterRecursive_select(ctx *Recursive_selectContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterRecursive_select	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterRecursive_select(c *Recursive_selectContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterReindex_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterReindex_stmt(ctx *Reindex_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterReindex_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterReindex_stmt(c *Reindex_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterRelease_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterRelease_stmt(ctx *Release_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterRelease_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterRelease_stmt(c *Release_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterResult_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterResult_column(ctx *Result_columnContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterResult_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterResult_column(c *Result_columnContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterReturning_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterReturning_clause(ctx *Returning_clauseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterReturning_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterReturning_clause(c *Returning_clauseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterRollback_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterRollback_stmt(ctx *Rollback_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterRollback_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterRollback_stmt(c *Rollback_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) EnterRule(localctx ParserRuleContext, state, ruleIndex int) {$/;"	f	struct:antlr.BaseParser
EnterRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^	EnterRule(listener ParseTreeListener)$/;"	n	interface:antlr.ParserRuleContext
EnterRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) EnterRule(listener ParseTreeListener) {$/;"	f	struct:antlr.BaseParserRuleContext
EnterRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (p *ParseTreeWalker) EnterRule(listener ParseTreeListener, r RuleNode) {$/;"	f	struct:antlr.ParseTreeWalker
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Aggregate_funcContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Aggregate_funcContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Aggregate_function_invocationContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Aggregate_function_invocationContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *AliasContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.AliasContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Alter_table_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Analyze_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Analyze_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Any_nameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Any_nameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Asc_descContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Asc_descContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Attach_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Attach_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Base_window_nameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Base_window_nameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Begin_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Begin_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Collation_nameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Collation_nameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_aliasContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Column_aliasContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Column_constraintContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_defContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Column_defContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_nameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Column_nameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_name_listContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Column_name_listContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Commit_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Commit_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_expressionContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Common_table_expressionContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Common_table_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_operatorContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Compound_operatorContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_select_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Compound_select_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Conflict_clauseContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Conflict_clauseContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Create_index_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Create_table_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Create_view_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Cte_table_nameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Cte_table_nameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Default_valueContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Default_valueContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Delete_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmt_limitedContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Delete_stmt_limitedContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Detach_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Detach_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Drop_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Drop_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Error_messageContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Error_messageContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.ExprContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Expr_asc_descContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Expr_asc_descContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Factored_select_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Factored_select_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *FilenameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.FilenameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Filter_clauseContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Filter_clauseContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_tableContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Foreign_tableContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_clauseContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Frame_clauseContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_leftContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Frame_leftContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_rightContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Frame_rightContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_singleContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Frame_singleContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_specContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Frame_specContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Function_nameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Function_nameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Index_nameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Index_nameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Indexed_columnContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Indexed_columnContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Initial_selectContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Initial_selectContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Insert_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_clauseContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Join_clauseContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_constraintContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Join_constraintContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_operatorContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Join_operatorContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.KeywordContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Limit_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Limit_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Literal_valueContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Literal_valueContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Module_argumentContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Module_argumentContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Module_nameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Module_nameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *NameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.NameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *OffsetContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.OffsetContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_exprContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Order_by_exprContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_expr_asc_descContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Order_by_expr_asc_descContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Order_by_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Ordering_termContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Ordering_termContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Over_clauseContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Over_clauseContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ParseContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.ParseContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Partition_byContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Partition_byContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_nameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Pragma_nameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Pragma_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_valueContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Pragma_valueContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Qualified_table_nameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Qualified_table_nameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Raise_functionContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Raise_functionContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Recursive_cteContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Recursive_cteContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Recursive_selectContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Recursive_selectContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Reindex_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Reindex_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Release_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Release_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Result_columnContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Result_columnContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Returning_clauseContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Returning_clauseContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Rollback_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Rollback_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Savepoint_nameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Savepoint_nameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Savepoint_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Savepoint_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Schema_nameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Schema_nameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Select_coreContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Select_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Signed_numberContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Signed_numberContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_funcContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Simple_funcContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_function_invocationContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Simple_function_invocationContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_select_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Simple_select_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Sql_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmt_listContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Sql_stmt_listContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_aliasContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Table_aliasContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Table_constraintContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_function_nameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Table_function_nameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_nameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Table_nameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_index_nameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Table_or_index_nameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Table_or_subqueryContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Transaction_nameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Transaction_nameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Trigger_nameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Trigger_nameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Type_nameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Type_nameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Unary_operatorContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Unary_operatorContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Update_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Upsert_clauseContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Vacuum_stmtContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Vacuum_stmtContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Value_rowContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Value_rowContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Values_clauseContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Values_clauseContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *View_nameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.View_nameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_defnContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Window_defnContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Window_functionContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_function_invocationContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Window_function_invocationContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_nameContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Window_nameContext
EnterRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *With_clauseContext) EnterRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.With_clauseContext
EnterSavepoint_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterSavepoint_name(ctx *Savepoint_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterSavepoint_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterSavepoint_name(c *Savepoint_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterSavepoint_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterSavepoint_stmt(ctx *Savepoint_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterSavepoint_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterSavepoint_stmt(c *Savepoint_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterSchema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterSchema_name(ctx *Schema_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterSchema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterSchema_name(c *Schema_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterSelect_core	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterSelect_core(ctx *Select_coreContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterSelect_core	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterSelect_core(c *Select_coreContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterSelect_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterSelect_stmt(ctx *Select_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterSelect_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterSelect_stmt(c *Select_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterSigned_number	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterSigned_number(ctx *Signed_numberContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterSigned_number	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterSigned_number(c *Signed_numberContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterSimple_func	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterSimple_func(ctx *Simple_funcContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterSimple_func	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterSimple_func(c *Simple_funcContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterSimple_function_invocation	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterSimple_function_invocation(ctx *Simple_function_invocati/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterSimple_function_invocation	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterSimple_function_invocation(c *Simple_function_invocationContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterSimple_select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterSimple_select_stmt(ctx *Simple_select_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterSimple_select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterSimple_select_stmt(c *Simple_select_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterSql_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterSql_stmt(ctx *Sql_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterSql_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterSql_stmt(c *Sql_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterSql_stmt_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterSql_stmt_list(ctx *Sql_stmt_listContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterSql_stmt_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterSql_stmt_list(c *Sql_stmt_listContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterTable_alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterTable_alias(ctx *Table_aliasContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterTable_alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterTable_alias(c *Table_aliasContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterTable_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterTable_constraint(ctx *Table_constraintContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterTable_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterTable_constraint(c *Table_constraintContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterTable_function_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterTable_function_name(ctx *Table_function_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterTable_function_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterTable_function_name(c *Table_function_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterTable_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterTable_name(ctx *Table_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterTable_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterTable_name(c *Table_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterTable_or_index_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterTable_or_index_name(ctx *Table_or_index_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterTable_or_index_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterTable_or_index_name(c *Table_or_index_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterTable_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterTable_or_subquery(ctx *Table_or_subqueryContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterTable_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterTable_or_subquery(c *Table_or_subqueryContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterTransaction_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterTransaction_name(ctx *Transaction_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterTransaction_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterTransaction_name(c *Transaction_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterTrigger_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterTrigger_name(ctx *Trigger_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterTrigger_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterTrigger_name(c *Trigger_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterType_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterType_name(ctx *Type_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterType_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterType_name(c *Type_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterUnary_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterUnary_operator(ctx *Unary_operatorContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterUnary_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterUnary_operator(c *Unary_operatorContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterUpdate_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterUpdate_stmt(ctx *Update_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterUpdate_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterUpdate_stmt(c *Update_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterUpdate_stmt_limited	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterUpdate_stmt_limited(ctx *Update_stmt_limitedContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterUpdate_stmt_limited	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterUpdate_stmt_limited(c *Update_stmt_limitedContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterUpsert_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterUpsert_clause(ctx *Upsert_clauseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterUpsert_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterUpsert_clause(c *Upsert_clauseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterVacuum_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterVacuum_stmt(ctx *Vacuum_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterVacuum_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterVacuum_stmt(c *Vacuum_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterValue_row	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterValue_row(ctx *Value_rowContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterValue_row	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterValue_row(c *Value_rowContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterValues_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterValues_clause(ctx *Values_clauseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterValues_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterValues_clause(c *Values_clauseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterView_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterView_name(ctx *View_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterView_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterView_name(c *View_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterWindow_defn	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterWindow_defn(ctx *Window_defnContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterWindow_defn	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterWindow_defn(c *Window_defnContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterWindow_function	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterWindow_function(ctx *Window_functionContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterWindow_function	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterWindow_function(c *Window_functionContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterWindow_function_invocation	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterWindow_function_invocation(ctx *Window_function_invocati/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterWindow_function_invocation	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterWindow_function_invocation(c *Window_function_invocationContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterWindow_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterWindow_name(ctx *Window_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterWindow_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterWindow_name(c *Window_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EnterWith_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) EnterWith_clause(ctx *With_clauseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
EnterWith_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	EnterWith_clause(c *With_clauseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
EpsilonTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^type EpsilonTransition struct {$/;"	s	package:antlr
Equal	vendor/golang.org/x/exp/slices/slices.go	/^func Equal[E comparable](s1, s2 []E) bool {$/;"	f	package:slices	typeref:typename:(s1, s2 []E) bool
EqualFunc	vendor/golang.org/x/exp/slices/slices.go	/^func EqualFunc[E1, E2 any](s1 []E1, s2 []E2, eq func(E1, E2) bool) bool {$/;"	f	package:slices	typeref:typename:(s1 []E1, s2 []E2, eq func(E1, E2) bool) bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^	Equals(o Collectable[ATNConfig]) bool$/;"	n	interface:antlr.ATNConfig	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func (b *BaseATNConfig) Equals(o Collectable[ATNConfig]) bool {$/;"	f	struct:antlr.BaseATNConfig	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func (l *LexerATNConfig) Equals(other Collectable[ATNConfig]) bool {$/;"	f	struct:antlr.LexerATNConfig	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	Equals(o Collectable[ATNConfig]) bool$/;"	n	interface:antlr.ATNConfigSet	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) Equals(other Collectable[ATNConfig]) bool {$/;"	f	struct:antlr.BaseATNConfigSet	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	Equals(Collectable[ATNState]) bool$/;"	n	interface:antlr.ATNState	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (as *BaseATNState) Equals(other Collectable[ATNState]) bool {$/;"	f	struct:antlr.BaseATNState	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^func (d *DFAState) Equals(o Collectable[*DFAState]) bool {$/;"	f	struct:antlr.DFAState	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	Equals(other LexerAction) bool$/;"	n	interface:antlr.LexerAction	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (b *BaseLexerAction) Equals(other LexerAction) bool {$/;"	f	struct:antlr.BaseLexerAction	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerChannelAction) Equals(other LexerAction) bool {$/;"	f	struct:antlr.LexerChannelAction	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerCustomAction) Equals(other LexerAction) bool {$/;"	f	struct:antlr.LexerCustomAction	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerModeAction) Equals(other LexerAction) bool {$/;"	f	struct:antlr.LexerModeAction	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerPushModeAction) Equals(other LexerAction) bool {$/;"	f	struct:antlr.LexerPushModeAction	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerTypeAction) Equals(other LexerAction) bool {$/;"	f	struct:antlr.LexerTypeAction	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action_executor.go	/^func (l *LexerActionExecutor) Equals(other interface{}) bool {$/;"	f	struct:antlr.LexerActionExecutor	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^	Equals(interface{}) bool$/;"	n	interface:antlr.PredictionContext	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (a *ArrayPredictionContext) Equals(o interface{}) bool {$/;"	f	struct:antlr.ArrayPredictionContext	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (b *BaseSingletonPredictionContext) Equals(other interface{}) bool {$/;"	f	struct:antlr.BaseSingletonPredictionContext	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (e *EmptyPredictionContext) Equals(other interface{}) bool {$/;"	f	struct:antlr.EmptyPredictionContext	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^	Equals(other Collectable[SemanticContext]) bool$/;"	n	interface:antlr.SemanticContext	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func (a *AND) Equals(other Collectable[SemanticContext]) bool {$/;"	f	struct:antlr.AND	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func (o *OR) Equals(other Collectable[SemanticContext]) bool {$/;"	f	struct:antlr.OR	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func (p *PrecedencePredicate) Equals(other Collectable[SemanticContext]) bool {$/;"	f	struct:antlr.PrecedencePredicate	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func (p *Predicate) Equals(other Collectable[SemanticContext]) bool {$/;"	f	struct:antlr.Predicate	typeref:typename:bool
Equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^	Equals(other Collectable[any]) bool$/;"	n	interface:antlr.comparable	typeref:typename:bool
Equals2	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/comparators.go	/^func (c *ATNAltConfigComparator[T]) Equals2(o1, o2 ATNConfig) bool {$/;"	f	unknown:antlr.T	typeref:typename:bool
Equals2	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/comparators.go	/^func (c *ATNConfigComparator[T]) Equals2(o1, o2 ATNConfig) bool {$/;"	f	unknown:antlr.T	typeref:typename:bool
Equals2	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/comparators.go	/^func (c *BaseATNConfigComparator[T]) Equals2(o1, o2 ATNConfig) bool {$/;"	f	unknown:antlr.T	typeref:typename:bool
Equals2	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/comparators.go	/^func (c *ObjEqComparator[T]) Equals2(o1, o2 T) bool {$/;"	f	unknown:antlr.T	typeref:typename:bool
ErrEmptyStack	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^var ErrEmptyStack = errors.New("Stack is empty")$/;"	v	package:antlr
ErrNoAuthHeaderIncluded	internal/auth/auth.go	/^var ErrNoAuthHeaderIncluded = errors.New("no authorization header included")$/;"	v	package:auth
Error	vendor/github.com/google/uuid/uuid.go	/^func (err invalidLengthError) Error() string {$/;"	f	struct:uuid.invalidLengthError	typeref:typename:string
Error	vendor/github.com/klauspost/compress/flate/inflate.go	/^func (e InternalError) Error() string { return "flate: internal error: " + string(e) }$/;"	f	type:flate.InternalError	typeref:typename:string
Error	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_result.go	/^	Error    *Error          `json:"error,omitempty"`$/;"	m	struct:hrana.StreamResult	typeref:typename:*Error
Error	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_result.go	/^type Error struct {$/;"	s	package:hrana
Error	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (p *BatchResultRowsProvider) Error(setIdx int) string {$/;"	f	struct:hranaV2.BatchResultRowsProvider	typeref:typename:string
Error	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (p *StmtResultRowsProvider) Error(setIdx int) string {$/;"	f	struct:hranaV2.StmtResultRowsProvider	typeref:typename:string
Error	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/rows.go	/^	Error(setIdx int) string$/;"	n	interface:shared.rowsProvider	typeref:typename:string
Error	vendor/nhooyr.io/websocket/close.go	/^func (ce CloseError) Error() string {$/;"	f	struct:websocket.CloseError	typeref:typename:string
ErrorListener	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^type ErrorListener interface {$/;"	i	package:antlr
ErrorNode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^type ErrorNode interface {$/;"	i	package:antlr
ErrorNodeImpl	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^type ErrorNodeImpl struct {$/;"	s	package:antlr
ErrorStrategy	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^type ErrorStrategy interface {$/;"	i	package:antlr
Error_message	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Error_message() IError_messageContext$/;"	n	interface:sqliteparser.IRaise_functionContext	typeref:typename:IError_messageContext
Error_message	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Error_message() (localctx IError_messageContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IError_messageContext)
Error_message	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Raise_functionContext) Error_message() IError_messageContext {$/;"	f	struct:sqliteparser.Raise_functionContext	typeref:typename:IError_messageContext
Error_messageContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Error_messageContext struct {$/;"	s	package:sqliteparser
EscapeWhitespace	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func EscapeWhitespace(s string, escapeSpaces bool) string {$/;"	f	package:antlr	typeref:typename:string
EstimatedBits	vendor/github.com/klauspost/compress/flate/token.go	/^func (t *tokens) EstimatedBits() int {$/;"	f	struct:flate.tokens	typeref:typename:int
Examples	vendor/github.com/go-chi/chi/README.md	/^## Examples$/;"	s	chapter:<img alt="chi" src="https://cdn.rawgit.com/go-chi/chi/master/_examples/chi.svg" width="220" />
Examples	vendor/nhooyr.io/websocket/README.md	/^## Examples$/;"	s	chapter:websocket
Exec	vendor/github.com/joho/godotenv/godotenv.go	/^func Exec(filenames []string, cmd string, cmdArgs []string, overload bool) error {$/;"	f	package:godotenv	typeref:typename:error
Exec	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (s *hranaV2Stmt) Exec(args []driver.Value) (driver.Result, error) {$/;"	f	struct:hranaV2.hranaV2Stmt	typeref:typename:(driver.Result, error)
Exec	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (s stmt) Exec(args []driver.Value) (driver.Result, error) {$/;"	f	struct:ws.stmt	typeref:typename:(driver.Result, error)
ExecContext	internal/database/db.go	/^	ExecContext(context.Context, string, ...interface{}) (sql.Result, error)$/;"	n	interface:database.DBTX	typeref:typename:(sql.Result, error)
ExecContext	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (h *hranaV2Conn) ExecContext(ctx context.Context, query string, args []driver.NamedValue) (/;"	f	struct:hranaV2.hranaV2Conn	typeref:typename:(driver.Result, error)
ExecContext	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (s *hranaV2Stmt) ExecContext(ctx context.Context, args []driver.NamedValue) (driver.Result,/;"	f	struct:hranaV2.hranaV2Stmt	typeref:typename:(driver.Result, error)
ExecContext	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (c *conn) ExecContext(ctx context.Context, query string, args []driver.NamedValue) (driver./;"	f	struct:ws.conn	typeref:typename:(driver.Result, error)
ExecContext	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (s stmt) ExecContext(ctx context.Context, args []driver.NamedValue) (driver.Result, error) /;"	f	struct:ws.stmt	typeref:typename:(driver.Result, error)
Execute	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	Execute(buffer *bytes.Buffer) int$/;"	n	interface:antlr.RewriteOperation	typeref:typename:int
Execute	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (op *BaseRewriteOperation) Execute(buffer *bytes.Buffer) int {$/;"	f	struct:antlr.BaseRewriteOperation	typeref:typename:int
Execute	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (op *InsertAfterOp) Execute(buffer *bytes.Buffer) int {$/;"	f	struct:antlr.InsertAfterOp	typeref:typename:int
Execute	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (op *InsertBeforeOp) Execute(buffer *bytes.Buffer) int {$/;"	f	struct:antlr.InsertBeforeOp	typeref:typename:int
Execute	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (op *ReplaceOp) Execute(buffer *bytes.Buffer) int {$/;"	f	struct:antlr.ReplaceOp	typeref:typename:int
ExecuteResult	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_result.go	/^func (r *StreamResponse) ExecuteResult() (*StmtResult, error) {$/;"	f	struct:hrana.StreamResponse	typeref:typename:(*StmtResult, error)
ExecuteStoredStream	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_request.go	/^func ExecuteStoredStream(sqlId int32, params shared.Params, wantRows bool) (*StreamRequest, erro/;"	f	package:hrana	typeref:typename:(*StreamRequest, error)
ExecuteStream	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_request.go	/^func ExecuteStream(sql string, params shared.Params, wantRows bool) (*StreamRequest, error) {$/;"	f	package:hrana	typeref:typename:(*StreamRequest, error)
ExitAggregate_func	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitAggregate_func(ctx *Aggregate_funcContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitAggregate_func	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitAggregate_func(c *Aggregate_funcContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitAggregate_function_invocation	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitAggregate_function_invocation(ctx *Aggregate_function_inv/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitAggregate_function_invocation	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitAggregate_function_invocation(c *Aggregate_function_invocationContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitAlias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitAlias(ctx *AliasContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitAlias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitAlias(c *AliasContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitAlter_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitAlter_table_stmt(ctx *Alter_table_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitAlter_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitAlter_table_stmt(c *Alter_table_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitAnalyze_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitAnalyze_stmt(ctx *Analyze_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitAnalyze_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitAnalyze_stmt(c *Analyze_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitAny_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitAny_name(ctx *Any_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitAny_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitAny_name(c *Any_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitAsc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitAsc_desc(ctx *Asc_descContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitAsc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitAsc_desc(c *Asc_descContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitAttach_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitAttach_stmt(ctx *Attach_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitAttach_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitAttach_stmt(c *Attach_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitBase_window_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitBase_window_name(ctx *Base_window_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitBase_window_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitBase_window_name(c *Base_window_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitBegin_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitBegin_stmt(ctx *Begin_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitBegin_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitBegin_stmt(c *Begin_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitCollation_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitCollation_name(ctx *Collation_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitCollation_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitCollation_name(c *Collation_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitColumn_alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitColumn_alias(ctx *Column_aliasContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitColumn_alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitColumn_alias(c *Column_aliasContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitColumn_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitColumn_constraint(ctx *Column_constraintContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitColumn_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitColumn_constraint(c *Column_constraintContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitColumn_def	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitColumn_def(ctx *Column_defContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitColumn_def	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitColumn_def(c *Column_defContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitColumn_name(ctx *Column_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitColumn_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitColumn_name(c *Column_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitColumn_name_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitColumn_name_list(ctx *Column_name_listContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitColumn_name_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitColumn_name_list(c *Column_name_listContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitCommit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitCommit_stmt(ctx *Commit_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitCommit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitCommit_stmt(c *Commit_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitCommon_table_expression	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitCommon_table_expression(ctx *Common_table_expressionConte/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitCommon_table_expression	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitCommon_table_expression(c *Common_table_expressionContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitCommon_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitCommon_table_stmt(ctx *Common_table_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitCommon_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitCommon_table_stmt(c *Common_table_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitCompound_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitCompound_operator(ctx *Compound_operatorContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitCompound_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitCompound_operator(c *Compound_operatorContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitCompound_select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitCompound_select_stmt(ctx *Compound_select_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitCompound_select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitCompound_select_stmt(c *Compound_select_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitConflict_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitConflict_clause(ctx *Conflict_clauseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitConflict_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitConflict_clause(c *Conflict_clauseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitCreate_index_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitCreate_index_stmt(ctx *Create_index_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitCreate_index_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitCreate_index_stmt(c *Create_index_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitCreate_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitCreate_table_stmt(ctx *Create_table_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitCreate_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitCreate_table_stmt(c *Create_table_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitCreate_trigger_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitCreate_trigger_stmt(ctx *Create_trigger_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitCreate_trigger_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitCreate_trigger_stmt(c *Create_trigger_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitCreate_view_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitCreate_view_stmt(ctx *Create_view_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitCreate_view_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitCreate_view_stmt(c *Create_view_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitCreate_virtual_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitCreate_virtual_table_stmt(ctx *Create_virtual_table_stmtC/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitCreate_virtual_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitCreate_virtual_table_stmt(c *Create_virtual_table_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitCte_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitCte_table_name(ctx *Cte_table_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitCte_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitCte_table_name(c *Cte_table_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitDefault_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitDefault_value(ctx *Default_valueContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitDefault_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitDefault_value(c *Default_valueContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitDelete_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitDelete_stmt(ctx *Delete_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitDelete_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitDelete_stmt(c *Delete_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitDelete_stmt_limited	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitDelete_stmt_limited(ctx *Delete_stmt_limitedContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitDelete_stmt_limited	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitDelete_stmt_limited(c *Delete_stmt_limitedContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitDetach_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitDetach_stmt(ctx *Detach_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitDetach_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitDetach_stmt(c *Detach_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitDrop_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitDrop_stmt(ctx *Drop_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitDrop_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitDrop_stmt(c *Drop_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitError_message	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitError_message(ctx *Error_messageContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitError_message	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitError_message(c *Error_messageContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitEveryRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/trace_listener.go	/^func (t *TraceListener) ExitEveryRule(ctx ParserRuleContext) {$/;"	f	struct:antlr.TraceListener
ExitEveryRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	ExitEveryRule(ctx ParserRuleContext)$/;"	n	interface:antlr.ParseTreeListener
ExitEveryRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (l *BaseParseTreeListener) ExitEveryRule(ctx ParserRuleContext)  {}$/;"	f	struct:antlr.BaseParseTreeListener
ExitEveryRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitEveryRule(ctx antlr.ParserRuleContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitExpr(ctx *ExprContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitExpr(c *ExprContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitExpr_asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitExpr_asc_desc(ctx *Expr_asc_descContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitExpr_asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitExpr_asc_desc(c *Expr_asc_descContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitFactored_select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitFactored_select_stmt(ctx *Factored_select_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitFactored_select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitFactored_select_stmt(c *Factored_select_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitFilename	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitFilename(ctx *FilenameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitFilename	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitFilename(c *FilenameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitFilter_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitFilter_clause(ctx *Filter_clauseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitFilter_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitFilter_clause(c *Filter_clauseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitForeign_key_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitForeign_key_clause(ctx *Foreign_key_clauseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitForeign_key_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitForeign_key_clause(c *Foreign_key_clauseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitForeign_table	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitForeign_table(ctx *Foreign_tableContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitForeign_table	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitForeign_table(c *Foreign_tableContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitFrame_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitFrame_clause(ctx *Frame_clauseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitFrame_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitFrame_clause(c *Frame_clauseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitFrame_left	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitFrame_left(ctx *Frame_leftContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitFrame_left	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitFrame_left(c *Frame_leftContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitFrame_right	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitFrame_right(ctx *Frame_rightContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitFrame_right	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitFrame_right(c *Frame_rightContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitFrame_single	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitFrame_single(ctx *Frame_singleContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitFrame_single	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitFrame_single(c *Frame_singleContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitFrame_spec	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitFrame_spec(ctx *Frame_specContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitFrame_spec	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitFrame_spec(c *Frame_specContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitFunction_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitFunction_name(ctx *Function_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitFunction_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitFunction_name(c *Function_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitIndex_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitIndex_name(ctx *Index_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitIndex_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitIndex_name(c *Index_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitIndexed_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitIndexed_column(ctx *Indexed_columnContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitIndexed_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitIndexed_column(c *Indexed_columnContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitInitial_select	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitInitial_select(ctx *Initial_selectContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitInitial_select	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitInitial_select(c *Initial_selectContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitInsert_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitInsert_stmt(ctx *Insert_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitInsert_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitInsert_stmt(c *Insert_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitJoin_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitJoin_clause(ctx *Join_clauseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitJoin_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitJoin_clause(c *Join_clauseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitJoin_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitJoin_constraint(ctx *Join_constraintContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitJoin_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitJoin_constraint(c *Join_constraintContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitJoin_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitJoin_operator(ctx *Join_operatorContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitJoin_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitJoin_operator(c *Join_operatorContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitKeyword	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitKeyword(ctx *KeywordContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitKeyword	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitKeyword(c *KeywordContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitLimit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitLimit_stmt(ctx *Limit_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitLimit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitLimit_stmt(c *Limit_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitLiteral_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitLiteral_value(ctx *Literal_valueContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitLiteral_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitLiteral_value(c *Literal_valueContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitModule_argument	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitModule_argument(ctx *Module_argumentContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitModule_argument	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitModule_argument(c *Module_argumentContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitModule_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitModule_name(ctx *Module_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitModule_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitModule_name(c *Module_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitName	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitName(ctx *NameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitName	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitName(c *NameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitOffset	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitOffset(ctx *OffsetContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitOffset	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitOffset(c *OffsetContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitOrder_by_expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitOrder_by_expr(ctx *Order_by_exprContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitOrder_by_expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitOrder_by_expr(c *Order_by_exprContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitOrder_by_expr_asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitOrder_by_expr_asc_desc(ctx *Order_by_expr_asc_descContext/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitOrder_by_expr_asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitOrder_by_expr_asc_desc(c *Order_by_expr_asc_descContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitOrder_by_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitOrder_by_stmt(ctx *Order_by_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitOrder_by_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitOrder_by_stmt(c *Order_by_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitOrdering_term	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitOrdering_term(ctx *Ordering_termContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitOrdering_term	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitOrdering_term(c *Ordering_termContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitOver_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitOver_clause(ctx *Over_clauseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitOver_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitOver_clause(c *Over_clauseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitParse	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitParse(ctx *ParseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitParse	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitParse(c *ParseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitPartition_by	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitPartition_by(ctx *Partition_byContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitPartition_by	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitPartition_by(c *Partition_byContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitPragma_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitPragma_name(ctx *Pragma_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitPragma_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitPragma_name(c *Pragma_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitPragma_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitPragma_stmt(ctx *Pragma_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitPragma_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitPragma_stmt(c *Pragma_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitPragma_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitPragma_value(ctx *Pragma_valueContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitPragma_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitPragma_value(c *Pragma_valueContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitQualified_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitQualified_table_name(ctx *Qualified_table_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitQualified_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitQualified_table_name(c *Qualified_table_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitRaise_function	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitRaise_function(ctx *Raise_functionContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitRaise_function	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitRaise_function(c *Raise_functionContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitRecursive_cte	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitRecursive_cte(ctx *Recursive_cteContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitRecursive_cte	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitRecursive_cte(c *Recursive_cteContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitRecursive_select	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitRecursive_select(ctx *Recursive_selectContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitRecursive_select	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitRecursive_select(c *Recursive_selectContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitReindex_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitReindex_stmt(ctx *Reindex_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitReindex_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitReindex_stmt(c *Reindex_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitRelease_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitRelease_stmt(ctx *Release_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitRelease_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitRelease_stmt(c *Release_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitResult_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitResult_column(ctx *Result_columnContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitResult_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitResult_column(c *Result_columnContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitReturning_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitReturning_clause(ctx *Returning_clauseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitReturning_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitReturning_clause(c *Returning_clauseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitRollback_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitRollback_stmt(ctx *Rollback_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitRollback_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitRollback_stmt(c *Rollback_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) ExitRule() {$/;"	f	struct:antlr.BaseParser
ExitRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^	ExitRule(listener ParseTreeListener)$/;"	n	interface:antlr.ParserRuleContext
ExitRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) ExitRule(listener ParseTreeListener) {$/;"	f	struct:antlr.BaseParserRuleContext
ExitRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (p *ParseTreeWalker) ExitRule(listener ParseTreeListener, r RuleNode) {$/;"	f	struct:antlr.ParseTreeWalker
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Aggregate_funcContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Aggregate_funcContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Aggregate_function_invocationContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Aggregate_function_invocationContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *AliasContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.AliasContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Alter_table_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Analyze_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Analyze_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Any_nameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Any_nameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Asc_descContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Asc_descContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Attach_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Attach_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Base_window_nameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Base_window_nameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Begin_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Begin_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Collation_nameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Collation_nameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_aliasContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Column_aliasContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Column_constraintContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_defContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Column_defContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_nameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Column_nameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_name_listContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Column_name_listContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Commit_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Commit_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_expressionContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Common_table_expressionContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Common_table_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_operatorContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Compound_operatorContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_select_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Compound_select_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Conflict_clauseContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Conflict_clauseContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Create_index_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Create_table_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Create_view_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Cte_table_nameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Cte_table_nameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Default_valueContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Default_valueContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Delete_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmt_limitedContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Delete_stmt_limitedContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Detach_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Detach_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Drop_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Drop_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Error_messageContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Error_messageContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.ExprContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Expr_asc_descContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Expr_asc_descContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Factored_select_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Factored_select_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *FilenameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.FilenameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Filter_clauseContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Filter_clauseContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_tableContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Foreign_tableContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_clauseContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Frame_clauseContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_leftContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Frame_leftContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_rightContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Frame_rightContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_singleContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Frame_singleContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_specContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Frame_specContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Function_nameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Function_nameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Index_nameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Index_nameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Indexed_columnContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Indexed_columnContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Initial_selectContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Initial_selectContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Insert_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_clauseContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Join_clauseContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_constraintContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Join_constraintContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_operatorContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Join_operatorContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.KeywordContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Limit_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Limit_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Literal_valueContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Literal_valueContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Module_argumentContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Module_argumentContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Module_nameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Module_nameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *NameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.NameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *OffsetContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.OffsetContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_exprContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Order_by_exprContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_expr_asc_descContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Order_by_expr_asc_descContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Order_by_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Ordering_termContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Ordering_termContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Over_clauseContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Over_clauseContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ParseContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.ParseContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Partition_byContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Partition_byContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_nameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Pragma_nameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Pragma_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_valueContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Pragma_valueContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Qualified_table_nameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Qualified_table_nameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Raise_functionContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Raise_functionContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Recursive_cteContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Recursive_cteContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Recursive_selectContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Recursive_selectContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Reindex_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Reindex_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Release_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Release_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Result_columnContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Result_columnContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Returning_clauseContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Returning_clauseContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Rollback_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Rollback_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Savepoint_nameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Savepoint_nameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Savepoint_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Savepoint_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Schema_nameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Schema_nameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Select_coreContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Select_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Signed_numberContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Signed_numberContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_funcContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Simple_funcContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_function_invocationContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Simple_function_invocationContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_select_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Simple_select_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Sql_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmt_listContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Sql_stmt_listContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_aliasContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Table_aliasContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Table_constraintContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_function_nameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Table_function_nameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_nameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Table_nameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_index_nameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Table_or_index_nameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Table_or_subqueryContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Transaction_nameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Transaction_nameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Trigger_nameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Trigger_nameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Type_nameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Type_nameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Unary_operatorContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Unary_operatorContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Update_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Upsert_clauseContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Vacuum_stmtContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Vacuum_stmtContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Value_rowContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Value_rowContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Values_clauseContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Values_clauseContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *View_nameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.View_nameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_defnContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Window_defnContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Window_functionContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_function_invocationContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Window_function_invocationContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_nameContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.Window_nameContext
ExitRule	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *With_clauseContext) ExitRule(listener antlr.ParseTreeListener) {$/;"	f	struct:sqliteparser.With_clauseContext
ExitSavepoint_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitSavepoint_name(ctx *Savepoint_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitSavepoint_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitSavepoint_name(c *Savepoint_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitSavepoint_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitSavepoint_stmt(ctx *Savepoint_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitSavepoint_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitSavepoint_stmt(c *Savepoint_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitSchema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitSchema_name(ctx *Schema_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitSchema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitSchema_name(c *Schema_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitSelect_core	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitSelect_core(ctx *Select_coreContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitSelect_core	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitSelect_core(c *Select_coreContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitSelect_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitSelect_stmt(ctx *Select_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitSelect_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitSelect_stmt(c *Select_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitSigned_number	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitSigned_number(ctx *Signed_numberContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitSigned_number	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitSigned_number(c *Signed_numberContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitSimple_func	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitSimple_func(ctx *Simple_funcContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitSimple_func	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitSimple_func(c *Simple_funcContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitSimple_function_invocation	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitSimple_function_invocation(ctx *Simple_function_invocatio/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitSimple_function_invocation	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitSimple_function_invocation(c *Simple_function_invocationContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitSimple_select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitSimple_select_stmt(ctx *Simple_select_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitSimple_select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitSimple_select_stmt(c *Simple_select_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitSql_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitSql_stmt(ctx *Sql_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitSql_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitSql_stmt(c *Sql_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitSql_stmt_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitSql_stmt_list(ctx *Sql_stmt_listContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitSql_stmt_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitSql_stmt_list(c *Sql_stmt_listContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitTable_alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitTable_alias(ctx *Table_aliasContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitTable_alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitTable_alias(c *Table_aliasContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitTable_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitTable_constraint(ctx *Table_constraintContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitTable_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitTable_constraint(c *Table_constraintContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitTable_function_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitTable_function_name(ctx *Table_function_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitTable_function_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitTable_function_name(c *Table_function_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitTable_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitTable_name(ctx *Table_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitTable_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitTable_name(c *Table_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitTable_or_index_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitTable_or_index_name(ctx *Table_or_index_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitTable_or_index_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitTable_or_index_name(c *Table_or_index_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitTable_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitTable_or_subquery(ctx *Table_or_subqueryContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitTable_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitTable_or_subquery(c *Table_or_subqueryContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitTransaction_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitTransaction_name(ctx *Transaction_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitTransaction_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitTransaction_name(c *Transaction_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitTrigger_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitTrigger_name(ctx *Trigger_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitTrigger_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitTrigger_name(c *Trigger_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitType_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitType_name(ctx *Type_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitType_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitType_name(c *Type_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitUnary_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitUnary_operator(ctx *Unary_operatorContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitUnary_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitUnary_operator(c *Unary_operatorContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitUpdate_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitUpdate_stmt(ctx *Update_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitUpdate_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitUpdate_stmt(c *Update_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitUpdate_stmt_limited	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitUpdate_stmt_limited(ctx *Update_stmt_limitedContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitUpdate_stmt_limited	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitUpdate_stmt_limited(c *Update_stmt_limitedContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitUpsert_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitUpsert_clause(ctx *Upsert_clauseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitUpsert_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitUpsert_clause(c *Upsert_clauseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitVacuum_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitVacuum_stmt(ctx *Vacuum_stmtContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitVacuum_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitVacuum_stmt(c *Vacuum_stmtContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitValue_row	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitValue_row(ctx *Value_rowContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitValue_row	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitValue_row(c *Value_rowContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitValues_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitValues_clause(ctx *Values_clauseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitValues_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitValues_clause(c *Values_clauseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitView_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitView_name(ctx *View_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitView_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitView_name(c *View_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitWindow_defn	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitWindow_defn(ctx *Window_defnContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitWindow_defn	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitWindow_defn(c *Window_defnContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitWindow_function	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitWindow_function(ctx *Window_functionContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitWindow_function	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitWindow_function(c *Window_functionContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitWindow_function_invocation	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitWindow_function_invocation(ctx *Window_function_invocatio/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitWindow_function_invocation	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitWindow_function_invocation(c *Window_function_invocationContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitWindow_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitWindow_name(ctx *Window_nameContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitWindow_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitWindow_name(c *Window_nameContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExitWith_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) ExitWith_clause(ctx *With_clauseContext) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
ExitWith_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^	ExitWith_clause(c *With_clauseContext)$/;"	n	interface:sqliteparser.SQLiteParserListener
ExposedHeaders	vendor/github.com/go-chi/cors/cors.go	/^	ExposedHeaders []string$/;"	m	struct:cors.Options	typeref:typename:[]string
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr() IExprContext$/;"	n	interface:sqliteparser.IAttach_stmtContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr() IExprContext$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr() IExprContext$/;"	n	interface:sqliteparser.ICreate_index_stmtContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr() IExprContext$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr() IExprContext$/;"	n	interface:sqliteparser.IDelete_stmtContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr() IExprContext$/;"	n	interface:sqliteparser.IDelete_stmt_limitedContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr() IExprContext$/;"	n	interface:sqliteparser.IFilter_clauseContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr() IExprContext$/;"	n	interface:sqliteparser.IFrame_leftContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr() IExprContext$/;"	n	interface:sqliteparser.IFrame_rightContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr() IExprContext$/;"	n	interface:sqliteparser.IFrame_singleContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr() IExprContext$/;"	n	interface:sqliteparser.IIndexed_columnContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr() IExprContext$/;"	n	interface:sqliteparser.IJoin_constraintContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr() IExprContext$/;"	n	interface:sqliteparser.IModule_argumentContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr() IExprContext$/;"	n	interface:sqliteparser.IOrdering_termContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr() IExprContext$/;"	n	interface:sqliteparser.IResult_columnContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr() IExprContext$/;"	n	interface:sqliteparser.ITable_constraintContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr() IExprContext$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr(i int) IExprContext$/;"	n	interface:sqliteparser.IAggregate_function_invocationContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr(i int) IExprContext$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr(i int) IExprContext$/;"	n	interface:sqliteparser.IExpr_asc_descContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr(i int) IExprContext$/;"	n	interface:sqliteparser.ILimit_stmtContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr(i int) IExprContext$/;"	n	interface:sqliteparser.IOrder_by_exprContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr(i int) IExprContext$/;"	n	interface:sqliteparser.IOver_clauseContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr(i int) IExprContext$/;"	n	interface:sqliteparser.IPartition_byContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr(i int) IExprContext$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr(i int) IExprContext$/;"	n	interface:sqliteparser.ISimple_function_invocationContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr(i int) IExprContext$/;"	n	interface:sqliteparser.ITable_or_subqueryContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr(i int) IExprContext$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr(i int) IExprContext$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr(i int) IExprContext$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr(i int) IExprContext$/;"	n	interface:sqliteparser.IValue_rowContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr(i int) IExprContext$/;"	n	interface:sqliteparser.IWindow_defnContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr(i int) IExprContext$/;"	n	interface:sqliteparser.IWindow_function_invocationContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Expr() (localctx IExprContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IExprContext)
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Aggregate_function_invocationContext) Expr(i int) IExprContext {$/;"	f	struct:sqliteparser.Aggregate_function_invocationContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Attach_stmtContext) Expr() IExprContext {$/;"	f	struct:sqliteparser.Attach_stmtContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) Expr() IExprContext {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) Expr() IExprContext {$/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) Expr() IExprContext {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmtContext) Expr() IExprContext {$/;"	f	struct:sqliteparser.Delete_stmtContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmt_limitedContext) Expr() IExprContext {$/;"	f	struct:sqliteparser.Delete_stmt_limitedContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) Expr(i int) IExprContext {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Expr_asc_descContext) Expr(i int) IExprContext {$/;"	f	struct:sqliteparser.Expr_asc_descContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Filter_clauseContext) Expr() IExprContext {$/;"	f	struct:sqliteparser.Filter_clauseContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_leftContext) Expr() IExprContext {$/;"	f	struct:sqliteparser.Frame_leftContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_rightContext) Expr() IExprContext {$/;"	f	struct:sqliteparser.Frame_rightContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_singleContext) Expr() IExprContext {$/;"	f	struct:sqliteparser.Frame_singleContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Indexed_columnContext) Expr() IExprContext {$/;"	f	struct:sqliteparser.Indexed_columnContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_constraintContext) Expr() IExprContext {$/;"	f	struct:sqliteparser.Join_constraintContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Limit_stmtContext) Expr(i int) IExprContext {$/;"	f	struct:sqliteparser.Limit_stmtContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Module_argumentContext) Expr() IExprContext {$/;"	f	struct:sqliteparser.Module_argumentContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_exprContext) Expr(i int) IExprContext {$/;"	f	struct:sqliteparser.Order_by_exprContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Ordering_termContext) Expr() IExprContext {$/;"	f	struct:sqliteparser.Ordering_termContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Over_clauseContext) Expr(i int) IExprContext {$/;"	f	struct:sqliteparser.Over_clauseContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Partition_byContext) Expr(i int) IExprContext {$/;"	f	struct:sqliteparser.Partition_byContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Result_columnContext) Expr() IExprContext {$/;"	f	struct:sqliteparser.Result_columnContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) Expr(i int) IExprContext {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_function_invocationContext) Expr(i int) IExprContext {$/;"	f	struct:sqliteparser.Simple_function_invocationContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) Expr() IExprContext {$/;"	f	struct:sqliteparser.Table_constraintContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) Expr(i int) IExprContext {$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) Expr(i int) IExprContext {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) Expr(i int) IExprContext {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) Expr(i int) IExprContext {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Value_rowContext) Expr(i int) IExprContext {$/;"	f	struct:sqliteparser.Value_rowContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_defnContext) Expr(i int) IExprContext {$/;"	f	struct:sqliteparser.Window_defnContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) Expr() IExprContext {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:IExprContext
Expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_function_invocationContext) Expr(i int) IExprContext {$/;"	f	struct:sqliteparser.Window_function_invocationContext	typeref:typename:IExprContext
ExprContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ExprContext struct {$/;"	s	package:sqliteparser
Expr_Sempred	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Expr_Sempred(localctx antlr.RuleContext, predIndex int) bool {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:bool
Expr_asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Expr_asc_desc() IExpr_asc_descContext$/;"	n	interface:sqliteparser.IOrder_by_expr_asc_descContext	typeref:typename:IExpr_asc_descContext
Expr_asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Expr_asc_desc() (localctx IExpr_asc_descContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IExpr_asc_descContext)
Expr_asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_expr_asc_descContext) Expr_asc_desc() IExpr_asc_descContext {$/;"	f	struct:sqliteparser.Order_by_expr_asc_descContext	typeref:typename:IExpr_asc_descContext
Expr_asc_descContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Expr_asc_descContext struct {$/;"	s	package:sqliteparser
Extra middlewares & packages	vendor/github.com/go-chi/chi/README.md	/^### Extra middlewares & packages$/;"	S	section:<img alt="chi" src="https://cdn.rawgit.com/go-chi/chi/master/_examples/chi.svg" width="220" />""| [WithValue]            | Short-hand middleware to set a key/value on the request context         |
FAIL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FAIL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IConflict_clauseContext	typeref:typename:antlr.TerminalNode
FAIL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FAIL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:antlr.TerminalNode
FAIL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FAIL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
FAIL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FAIL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IRaise_functionContext	typeref:typename:antlr.TerminalNode
FAIL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FAIL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:antlr.TerminalNode
FAIL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FAIL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:antlr.TerminalNode
FAIL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Conflict_clauseContext) FAIL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Conflict_clauseContext	typeref:typename:antlr.TerminalNode
FAIL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) FAIL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:antlr.TerminalNode
FAIL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) FAIL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
FAIL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Raise_functionContext) FAIL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Raise_functionContext	typeref:typename:antlr.TerminalNode
FAIL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) FAIL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:antlr.TerminalNode
FAIL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) FAIL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:antlr.TerminalNode
FALSE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FALSE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
FALSE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FALSE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ILiteral_valueContext	typeref:typename:antlr.TerminalNode
FALSE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) FALSE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
FALSE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Literal_valueContext) FALSE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Literal_valueContext	typeref:typename:antlr.TerminalNode
FILTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FILTER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFilter_clauseContext	typeref:typename:antlr.TerminalNode
FILTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FILTER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
FILTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Filter_clauseContext) FILTER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Filter_clauseContext	typeref:typename:antlr.TerminalNode
FILTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) FILTER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
FIRST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FIRST_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
FIRST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FIRST_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IOrdering_termContext	typeref:typename:antlr.TerminalNode
FIRST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) FIRST_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
FIRST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Ordering_termContext) FIRST_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Ordering_termContext	typeref:typename:antlr.TerminalNode
FIRST_VALUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FIRST_VALUE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
FIRST_VALUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FIRST_VALUE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:antlr.TerminalNode
FIRST_VALUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) FIRST_VALUE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
FIRST_VALUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) FIRST_VALUE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:antlr.TerminalNode
FOLLOWING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FOLLOWING_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_leftContext	typeref:typename:antlr.TerminalNode
FOLLOWING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FOLLOWING_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_rightContext	typeref:typename:antlr.TerminalNode
FOLLOWING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FOLLOWING_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
FOLLOWING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_leftContext) FOLLOWING_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_leftContext	typeref:typename:antlr.TerminalNode
FOLLOWING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_rightContext) FOLLOWING_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_rightContext	typeref:typename:antlr.TerminalNode
FOLLOWING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) FOLLOWING_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
FOREIGN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FOREIGN_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
FOREIGN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FOREIGN_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ITable_constraintContext	typeref:typename:antlr.TerminalNode
FOREIGN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) FOREIGN_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
FOREIGN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) FOREIGN_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Table_constraintContext	typeref:typename:antlr.TerminalNode
FOR_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FOR_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
FOR_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FOR_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
FOR_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) FOR_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
FOR_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) FOR_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
FROM_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FROM_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IDelete_stmtContext	typeref:typename:antlr.TerminalNode
FROM_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FROM_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IDelete_stmt_limitedContext	typeref:typename:antlr.TerminalNode
FROM_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FROM_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
FROM_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FROM_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:antlr.TerminalNode
FROM_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FROM_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:antlr.TerminalNode
FROM_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmtContext) FROM_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Delete_stmtContext	typeref:typename:antlr.TerminalNode
FROM_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmt_limitedContext) FROM_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Delete_stmt_limitedContext	typeref:typename:antlr.TerminalNode
FROM_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) FROM_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
FROM_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) FROM_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:antlr.TerminalNode
FROM_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) FROM_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:antlr.TerminalNode
FULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	FULL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
FULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) FULL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
Factored_select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Factored_select_stmt() (localctx IFactored_select_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IFactored_select_stmtContext)
Factored_select_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Factored_select_stmtContext struct {$/;"	s	package:sqliteparser
FailedPredicateException	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^type FailedPredicateException struct {$/;"	s	package:antlr
Features	vendor/github.com/go-chi/chi/README.md	/^## Features$/;"	s	chapter:<img alt="chi" src="https://cdn.rawgit.com/go-chi/chi/master/_examples/chi.svg" width="220" />
FieldValue	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (p *BatchResultRowsProvider) FieldValue(setIdx, rowIdx, colIdx int) driver.Value {$/;"	f	struct:hranaV2.BatchResultRowsProvider	typeref:typename:driver.Value
FieldValue	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (p *StmtResultRowsProvider) FieldValue(setIdx, rowIdx, colIdx int) driver.Value {$/;"	f	struct:hranaV2.StmtResultRowsProvider	typeref:typename:driver.Value
FieldValue	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/rows.go	/^	FieldValue(setIdx, rowIdx int, columnIdx int) driver.Value$/;"	n	interface:shared.rowsProvider	typeref:typename:driver.Value
FileStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/file_stream.go	/^type FileStream struct {$/;"	s	package:antlr
Filename	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Filename() IFilenameContext$/;"	n	interface:sqliteparser.IVacuum_stmtContext	typeref:typename:IFilenameContext
Filename	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Filename() (localctx IFilenameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IFilenameContext)
Filename	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Vacuum_stmtContext) Filename() IFilenameContext {$/;"	f	struct:sqliteparser.Vacuum_stmtContext	typeref:typename:IFilenameContext
FilenameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type FilenameContext struct {$/;"	s	package:sqliteparser
Fill	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) Fill() {$/;"	f	struct:antlr.CommonTokenStream
Fill	vendor/github.com/klauspost/compress/flate/token.go	/^func (t *tokens) Fill() {$/;"	f	struct:flate.tokens
Filter_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Filter_clause() IFilter_clauseContext$/;"	n	interface:sqliteparser.IAggregate_function_invocationContext	typeref:typename:IFilter_clauseContext
Filter_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Filter_clause() IFilter_clauseContext$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:IFilter_clauseContext
Filter_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Filter_clause() IFilter_clauseContext$/;"	n	interface:sqliteparser.IWindow_function_invocationContext	typeref:typename:IFilter_clauseContext
Filter_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Filter_clause() (localctx IFilter_clauseContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IFilter_clauseContext)
Filter_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Aggregate_function_invocationContext) Filter_clause() IFilter_clauseContext {$/;"	f	struct:sqliteparser.Aggregate_function_invocationContext	typeref:typename:IFilter_clauseContext
Filter_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) Filter_clause() IFilter_clauseContext {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:IFilter_clauseContext
Filter_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_function_invocationContext) Filter_clause() IFilter_clauseContext {$/;"	f	struct:sqliteparser.Window_function_invocationContext	typeref:typename:IFilter_clauseContext
Filter_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Filter_clauseContext struct {$/;"	s	package:sqliteparser
FindRoute	vendor/github.com/go-chi/chi/tree.go	/^func (n *node) FindRoute(rctx *Context, method methodTyp, path string) (*node, endpoints, http.H/;"	f	struct:chi.node	typeref:typename:(*node, endpoints, http.Handler)
Float	vendor/golang.org/x/exp/constraints/constraints.go	/^type Float interface {$/;"	i	package:constraints
Flush	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (w *Writer) Flush() error {$/;"	f	struct:flate.Writer	typeref:typename:error
Foreign_key_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Foreign_key_clause() IForeign_key_clauseContext$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:IForeign_key_clauseContext
Foreign_key_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Foreign_key_clause() IForeign_key_clauseContext$/;"	n	interface:sqliteparser.ITable_constraintContext	typeref:typename:IForeign_key_clauseContext
Foreign_key_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Foreign_key_clause() (localctx IForeign_key_clauseContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IForeign_key_clauseContext)
Foreign_key_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) Foreign_key_clause() IForeign_key_clauseContext {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:IForeign_key_clauseContext
Foreign_key_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) Foreign_key_clause() IForeign_key_clauseContext {$/;"	f	struct:sqliteparser.Table_constraintContext	typeref:typename:IForeign_key_clauseContext
Foreign_key_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Foreign_key_clauseContext struct {$/;"	s	package:sqliteparser
Foreign_table	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Foreign_table() IForeign_tableContext$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:IForeign_tableContext
Foreign_table	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Foreign_table() (localctx IForeign_tableContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IForeign_tableContext)
Foreign_table	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) Foreign_table() IForeign_tableContext {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:IForeign_tableContext
Foreign_tableContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Foreign_tableContext struct {$/;"	s	package:sqliteparser
Frame_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Frame_clause() IFrame_clauseContext$/;"	n	interface:sqliteparser.IFrame_specContext	typeref:typename:IFrame_clauseContext
Frame_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Frame_clause() IFrame_clauseContext$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:IFrame_clauseContext
Frame_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Frame_clause() (localctx IFrame_clauseContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IFrame_clauseContext)
Frame_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_specContext) Frame_clause() IFrame_clauseContext {$/;"	f	struct:sqliteparser.Frame_specContext	typeref:typename:IFrame_clauseContext
Frame_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) Frame_clause() IFrame_clauseContext {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:IFrame_clauseContext
Frame_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Frame_clauseContext struct {$/;"	s	package:sqliteparser
Frame_left	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Frame_left() IFrame_leftContext$/;"	n	interface:sqliteparser.IFrame_clauseContext	typeref:typename:IFrame_leftContext
Frame_left	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Frame_left() (localctx IFrame_leftContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IFrame_leftContext)
Frame_left	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_clauseContext) Frame_left() IFrame_leftContext {$/;"	f	struct:sqliteparser.Frame_clauseContext	typeref:typename:IFrame_leftContext
Frame_leftContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Frame_leftContext struct {$/;"	s	package:sqliteparser
Frame_right	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Frame_right() IFrame_rightContext$/;"	n	interface:sqliteparser.IFrame_clauseContext	typeref:typename:IFrame_rightContext
Frame_right	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Frame_right() (localctx IFrame_rightContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IFrame_rightContext)
Frame_right	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_clauseContext) Frame_right() IFrame_rightContext {$/;"	f	struct:sqliteparser.Frame_clauseContext	typeref:typename:IFrame_rightContext
Frame_rightContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Frame_rightContext struct {$/;"	s	package:sqliteparser
Frame_single	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Frame_single() IFrame_singleContext$/;"	n	interface:sqliteparser.IFrame_clauseContext	typeref:typename:IFrame_singleContext
Frame_single	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Frame_single() (localctx IFrame_singleContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IFrame_singleContext)
Frame_single	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_clauseContext) Frame_single() IFrame_singleContext {$/;"	f	struct:sqliteparser.Frame_clauseContext	typeref:typename:IFrame_singleContext
Frame_singleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Frame_singleContext struct {$/;"	s	package:sqliteparser
Frame_spec	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Frame_spec() IFrame_specContext$/;"	n	interface:sqliteparser.IOver_clauseContext	typeref:typename:IFrame_specContext
Frame_spec	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Frame_spec() IFrame_specContext$/;"	n	interface:sqliteparser.IWindow_defnContext	typeref:typename:IFrame_specContext
Frame_spec	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Frame_spec() (localctx IFrame_specContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IFrame_specContext)
Frame_spec	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Over_clauseContext) Frame_spec() IFrame_specContext {$/;"	f	struct:sqliteparser.Over_clauseContext	typeref:typename:IFrame_specContext
Frame_spec	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_defnContext) Frame_spec() IFrame_specContext {$/;"	f	struct:sqliteparser.Window_defnContext	typeref:typename:IFrame_specContext
Frame_specContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Frame_specContext struct {$/;"	s	package:sqliteparser
FromBytes	vendor/github.com/google/uuid/uuid.go	/^func FromBytes(b []byte) (uuid UUID, err error) {$/;"	f	package:uuid	typeref:typename:(uuid UUID, err error)
FromVarInt	vendor/github.com/klauspost/compress/flate/token.go	/^func (t *tokens) FromVarInt(b []byte) error {$/;"	f	struct:flate.tokens	typeref:typename:error
FullContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	FullContext() bool$/;"	n	interface:antlr.ATNConfigSet	typeref:typename:bool
FullContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) FullContext() bool {$/;"	f	struct:antlr.BaseATNConfigSet	typeref:typename:bool
Function_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Function_name() IFunction_nameContext$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:IFunction_nameContext
Function_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Function_name() (localctx IFunction_nameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IFunction_nameContext)
Function_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) Function_name() IFunction_nameContext {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:IFunction_nameContext
Function_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Function_nameContext struct {$/;"	s	package:sqliteparser
Future	vendor/github.com/google/uuid/uuid.go	/^	Future                    \/\/ Reserved for future definition.$/;"	c	package:uuid
GENERATED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GENERATED_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:antlr.TerminalNode
GENERATED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GENERATED_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
GENERATED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) GENERATED_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:antlr.TerminalNode
GENERATED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) GENERATED_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
GLOB_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GLOB_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
GLOB_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GLOB_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
GLOB_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) GLOB_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
GLOB_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) GLOB_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
GROUPS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GROUPS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_clauseContext	typeref:typename:antlr.TerminalNode
GROUPS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GROUPS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
GROUPS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_clauseContext) GROUPS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_clauseContext	typeref:typename:antlr.TerminalNode
GROUPS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) GROUPS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
GROUP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GROUP_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_specContext	typeref:typename:antlr.TerminalNode
GROUP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GROUP_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
GROUP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GROUP_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:antlr.TerminalNode
GROUP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_specContext) GROUP_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_specContext	typeref:typename:antlr.TerminalNode
GROUP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) GROUP_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
GROUP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) GROUP_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:antlr.TerminalNode
GT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GT() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
GT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) GT() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
GT2	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GT2() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
GT2	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) GT2() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
GT_EQ	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GT_EQ() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
GT_EQ	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) GT_EQ() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
GenerateRuleBypassTransitions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserialization_options.go	/^func (opts *ATNDeserializationOptions) GenerateRuleBypassTransitions() bool {$/;"	f	struct:antlr.ATNDeserializationOptions	typeref:typename:bool
Get	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) Get(index int) Token {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:Token
Get	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/jcollect.go	/^func (m *JMap[K, V, C]) Get(key K) (V, bool) {$/;"	f	unknown:antlr.C	typeref:typename:(V, bool)
Get	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/jcollect.go	/^func (s *JStore[T, C]) Get(key T) (T, bool) { \/\/nolint:ireturn$/;"	f	unknown:antlr.C	typeref:typename:(T, bool)
Get	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (p *PredictionContextCache) Get(ctx PredictionContext) PredictionContext {$/;"	f	struct:antlr.PredictionContextCache	typeref:typename:PredictionContext
Get	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token_stream.go	/^	Get(index int) Token$/;"	n	interface:antlr.TokenStream	typeref:typename:Token
Get	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func (a *AltDict) Get(key string) interface{} {$/;"	f	struct:antlr.AltDict	typeref:typename:interface{}
Get	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func (d *DoubleDict) Get(a, b int) interface{} {$/;"	f	struct:antlr.DoubleDict	typeref:typename:interface{}
Get	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^	Get(value interface{}) (found interface{})$/;"	n	interface:antlr.Set	typeref:typename:(found interface{})
Get	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^func (as *array2DHashSet) Get(o Collectable[any]) interface{} {$/;"	f	struct:antlr.array2DHashSet	typeref:typename:interface{}
Get	vendor/github.com/go-chi/chi/chi.go	/^	Get(pattern string, h http.HandlerFunc)$/;"	n	interface:chi.Router
Get	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) Get(pattern string, handlerFn http.HandlerFunc) {$/;"	f	struct:chi.Mux
Get	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^func (pool *idPool) Get() (id uint32) {$/;"	f	struct:ws.idPool	typeref:typename:(id uint32)
Get	vendor/nhooyr.io/websocket/internal/bpool/bpool.go	/^func Get() *bytes.Buffer {$/;"	f	package:bpool	typeref:typename:*bytes.Buffer
GetAPIKey	internal/auth/auth.go	/^func GetAPIKey(headers http.Header) (string, error) {$/;"	f	package:auth	typeref:typename:(string, error)
GetATN	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	GetATN() *ATN$/;"	n	interface:antlr.ATNState	typeref:typename:*ATN
GetATN	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (as *BaseATNState) GetATN() *ATN {$/;"	f	struct:antlr.BaseATNState	typeref:typename:*ATN
GetATN	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) GetATN() *ATN {$/;"	f	struct:antlr.BaseLexer	typeref:typename:*ATN
GetATN	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) GetATN() *ATN {$/;"	f	struct:antlr.BaseParser	typeref:typename:*ATN
GetATN	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^	GetATN() *ATN$/;"	n	interface:antlr.Recognizer	typeref:typename:*ATN
GetATNWithBypassAlts	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) GetATNWithBypassAlts() {$/;"	f	struct:antlr.BaseParser
GetAllText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) GetAllText() string {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:string
GetAllText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token_stream.go	/^	GetAllText() string$/;"	n	interface:antlr.TokenStream	typeref:typename:string
GetAllTokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) GetAllTokens() []Token {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:[]Token
GetAllTokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) GetAllTokens() []Token {$/;"	f	struct:antlr.BaseLexer	typeref:typename:[]Token
GetAlt	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^	GetAlt() int$/;"	n	interface:antlr.ATNConfig	typeref:typename:int
GetAlt	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func (b *BaseATNConfig) GetAlt() int {$/;"	f	struct:antlr.BaseATNConfig	typeref:typename:int
GetAltNumber	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^	GetAltNumber() int$/;"	n	interface:antlr.RuleContext	typeref:typename:int
GetAltNumber	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^func (b *BaseRuleContext) GetAltNumber() int {$/;"	f	struct:antlr.BaseRuleContext	typeref:typename:int
GetAltSet	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^func (d *DFAState) GetAltSet() []int {$/;"	f	struct:antlr.DFAState	typeref:typename:[]int
GetAltThatFinishedDecisionEntryRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) GetAltThatFinishedDecisionEntryRule(configs ATNConfigSet) int {$/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:int
GetBaseRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^func (b *BaseRuleContext) GetBaseRuleContext() *BaseRuleContext {$/;"	f	struct:antlr.BaseRuleContext	typeref:typename:*BaseRuleContext
GetBaseRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	GetBaseRuleContext() *BaseRuleContext$/;"	n	interface:antlr.RuleNode	typeref:typename:*BaseRuleContext
GetChannel	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	GetChannel() int$/;"	n	interface:antlr.Token	typeref:typename:int
GetChannel	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^func (b *BaseToken) GetChannel() int {$/;"	f	struct:antlr.BaseToken	typeref:typename:int
GetCharIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) GetCharIndex() int {$/;"	f	struct:antlr.BaseLexer	typeref:typename:int
GetCharPositionInLine	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) GetCharPositionInLine() int {$/;"	f	struct:antlr.BaseLexer	typeref:typename:int
GetCharPositionInLine	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	GetCharPositionInLine() int$/;"	n	interface:antlr.ILexerATNSimulator	typeref:typename:int
GetCharPositionInLine	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) GetCharPositionInLine() int {$/;"	f	struct:antlr.LexerATNSimulator	typeref:typename:int
GetCharPositionInLine	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token_source.go	/^	GetCharPositionInLine() int$/;"	n	interface:antlr.TokenSource	typeref:typename:int
GetChild	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) GetChild(i int) Tree {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:Tree
GetChild	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	GetChild(i int) Tree$/;"	n	interface:antlr.Tree	typeref:typename:Tree
GetChild	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (t *TerminalNodeImpl) GetChild(i int) Tree {$/;"	f	struct:antlr.TerminalNodeImpl	typeref:typename:Tree
GetChildCount	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) GetChildCount() int {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:int
GetChildCount	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	GetChildCount() int$/;"	n	interface:antlr.Tree	typeref:typename:int
GetChildCount	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (t *TerminalNodeImpl) GetChildCount() int {$/;"	f	struct:antlr.TerminalNodeImpl	typeref:typename:int
GetChildOfType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) GetChildOfType(i int, childType reflect.Type) RuleContext {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:RuleContext
GetChildren	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) GetChildren() []Tree {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:[]Tree
GetChildren	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	GetChildren() []Tree$/;"	n	interface:antlr.Tree	typeref:typename:[]Tree
GetChildren	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (t *TerminalNodeImpl) GetChildren() []Tree {$/;"	f	struct:antlr.TerminalNodeImpl	typeref:typename:[]Tree
GetColumn	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	GetColumn() int$/;"	n	interface:antlr.Token	typeref:typename:int
GetColumn	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^func (b *BaseToken) GetColumn() int {$/;"	f	struct:antlr.BaseToken	typeref:typename:int
GetConflictingAlts	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	GetConflictingAlts() *BitSet$/;"	n	interface:antlr.ATNConfigSet	typeref:typename:*BitSet
GetConflictingAlts	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) GetConflictingAlts() *BitSet {$/;"	f	struct:antlr.BaseATNConfigSet	typeref:typename:*BitSet
GetContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^	GetContext() PredictionContext$/;"	n	interface:antlr.ATNConfig	typeref:typename:PredictionContext
GetContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func (b *BaseATNConfig) GetContext() PredictionContext {$/;"	f	struct:antlr.BaseATNConfig	typeref:typename:PredictionContext
GetCurrentToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	GetCurrentToken() Token$/;"	n	interface:antlr.Parser	typeref:typename:Token
GetCurrentToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) GetCurrentToken() Token {$/;"	f	struct:antlr.BaseParser	typeref:typename:Token
GetDFAStrings	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) GetDFAStrings() string {$/;"	f	struct:antlr.BaseParser	typeref:typename:string
GetDipsIntoOuterContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	GetDipsIntoOuterContext() bool$/;"	n	interface:antlr.ATNConfigSet	typeref:typename:bool
GetDipsIntoOuterContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) GetDipsIntoOuterContext() bool {$/;"	f	struct:antlr.BaseATNConfigSet	typeref:typename:bool
GetEpsilonOnlyTransitions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	GetEpsilonOnlyTransitions() bool$/;"	n	interface:antlr.ATNState	typeref:typename:bool
GetEpsilonOnlyTransitions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (as *BaseATNState) GetEpsilonOnlyTransitions() bool {$/;"	f	struct:antlr.BaseATNState	typeref:typename:bool
GetErrorHandler	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	GetErrorHandler() ErrorStrategy$/;"	n	interface:antlr.Parser	typeref:typename:ErrorStrategy
GetErrorHandler	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) GetErrorHandler() ErrorStrategy {$/;"	f	struct:antlr.BaseParser	typeref:typename:ErrorStrategy
GetErrorHeader	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^func (b *BaseRecognizer) GetErrorHeader(e RecognitionException) string {$/;"	f	struct:antlr.BaseRecognizer	typeref:typename:string
GetErrorListenerDispatch	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^	GetErrorListenerDispatch() ErrorListener$/;"	n	interface:antlr.Recognizer	typeref:typename:ErrorListener
GetErrorListenerDispatch	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^func (b *BaseRecognizer) GetErrorListenerDispatch() ErrorListener {$/;"	f	struct:antlr.BaseRecognizer	typeref:typename:ErrorListener
GetExpectedTokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (d *DefaultErrorStrategy) GetExpectedTokens(recognizer Parser) *IntervalSet {$/;"	f	struct:antlr.DefaultErrorStrategy	typeref:typename:*IntervalSet
GetExpectedTokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	GetExpectedTokens() *IntervalSet$/;"	n	interface:antlr.Parser	typeref:typename:*IntervalSet
GetExpectedTokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) GetExpectedTokens() *IntervalSet {$/;"	f	struct:antlr.BaseParser	typeref:typename:*IntervalSet
GetExpectedTokensWithinCurrentRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) GetExpectedTokensWithinCurrentRule() *IntervalSet {$/;"	f	struct:antlr.BaseParser	typeref:typename:*IntervalSet
GetGroupByExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetGroupByExpr() []IExprContext$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:[]IExprContext
GetGroupByExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) GetGroupByExpr() []IExprContext { return s.groupByExpr }$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:[]IExprContext
GetHavingExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetHavingExpr() IExprContext$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:IExprContext
GetHavingExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) GetHavingExpr() IExprContext { return s.havingExpr }$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:IExprContext
GetHiddenTokensToLeft	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) GetHiddenTokensToLeft(tokenIndex, channel int) []Token {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:[]Token
GetHiddenTokensToRight	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) GetHiddenTokensToRight(tokenIndex, channel int) []Token {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:[]Token
GetIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	GetIndex() int$/;"	n	interface:antlr.RewriteOperation	typeref:typename:int
GetIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (op *BaseRewriteOperation) GetIndex() int {$/;"	f	struct:antlr.BaseRewriteOperation	typeref:typename:int
GetInputStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	GetInputStream() IntStream$/;"	n	interface:antlr.RecognitionException	typeref:typename:IntStream
GetInputStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^func (b *BaseRecognitionException) GetInputStream() IntStream {$/;"	f	struct:antlr.BaseRecognitionException	typeref:typename:IntStream
GetInputStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) GetInputStream() CharStream {$/;"	f	struct:antlr.BaseLexer	typeref:typename:CharStream
GetInputStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	GetInputStream() IntStream$/;"	n	interface:antlr.Parser	typeref:typename:IntStream
GetInputStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) GetInputStream() IntStream {$/;"	f	struct:antlr.BaseParser	typeref:typename:IntStream
GetInputStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	GetInputStream() CharStream$/;"	n	interface:antlr.Token	typeref:typename:CharStream
GetInputStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^func (b *BaseToken) GetInputStream() CharStream {$/;"	f	struct:antlr.BaseToken	typeref:typename:CharStream
GetInputStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token_source.go	/^	GetInputStream() CharStream$/;"	n	interface:antlr.TokenSource	typeref:typename:CharStream
GetInstructionIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	GetInstructionIndex() int$/;"	n	interface:antlr.RewriteOperation	typeref:typename:int
GetInstructionIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (op *BaseRewriteOperation) GetInstructionIndex() int {$/;"	f	struct:antlr.BaseRewriteOperation	typeref:typename:int
GetInterpreter	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) GetInterpreter() ILexerATNSimulator {$/;"	f	struct:antlr.BaseLexer	typeref:typename:ILexerATNSimulator
GetInterpreter	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	GetInterpreter() *ParserATNSimulator$/;"	n	interface:antlr.Parser	typeref:typename:*ParserATNSimulator
GetInterpreter	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) GetInterpreter() *ParserATNSimulator {$/;"	f	struct:antlr.BaseParser	typeref:typename:*ParserATNSimulator
GetIntervals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func (i *IntervalSet) GetIntervals() []*Interval {$/;"	f	struct:antlr.IntervalSet	typeref:typename:[]*Interval
GetInvokingContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) GetInvokingContext(ruleIndex int) ParserRuleContext {$/;"	f	struct:antlr.BaseParser	typeref:typename:ParserRuleContext
GetInvokingState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^	GetInvokingState() int$/;"	n	interface:antlr.RuleContext	typeref:typename:int
GetInvokingState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^func (b *BaseRuleContext) GetInvokingState() int {$/;"	f	struct:antlr.BaseRuleContext	typeref:typename:int
GetItems	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	GetItems() []ATNConfig$/;"	n	interface:antlr.ATNConfigSet	typeref:typename:[]ATNConfig
GetItems	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) GetItems() []ATNConfig {$/;"	f	struct:antlr.BaseATNConfigSet	typeref:typename:[]ATNConfig
GetLastInsertRowId	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt_result.go	/^func (r *StmtResult) GetLastInsertRowId() int64 {$/;"	f	struct:hrana.StmtResult	typeref:typename:int64
GetLastRewriteTokenIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) GetLastRewriteTokenIndex(program_name string) int {$/;"	f	struct:antlr.TokenStreamRewriter	typeref:typename:int
GetLastRewriteTokenIndexDefault	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) GetLastRewriteTokenIndexDefault() int {$/;"	f	struct:antlr.TokenStreamRewriter	typeref:typename:int
GetLine	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) GetLine() int {$/;"	f	struct:antlr.BaseLexer	typeref:typename:int
GetLine	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	GetLine() int$/;"	n	interface:antlr.ILexerATNSimulator	typeref:typename:int
GetLine	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) GetLine() int {$/;"	f	struct:antlr.LexerATNSimulator	typeref:typename:int
GetLine	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	GetLine() int$/;"	n	interface:antlr.Token	typeref:typename:int
GetLine	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^func (b *BaseToken) GetLine() int {$/;"	f	struct:antlr.BaseToken	typeref:typename:int
GetLine	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token_source.go	/^	GetLine() int$/;"	n	interface:antlr.TokenSource	typeref:typename:int
GetLiteralNames	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^	GetLiteralNames() []string$/;"	n	interface:antlr.Recognizer	typeref:typename:[]string
GetLiteralNames	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^func (b *BaseRecognizer) GetLiteralNames() []string {$/;"	f	struct:antlr.BaseRecognizer	typeref:typename:[]string
GetMessage	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	GetMessage() string$/;"	n	interface:antlr.RecognitionException	typeref:typename:string
GetMessage	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^func (b *BaseRecognitionException) GetMessage() string {$/;"	f	struct:antlr.BaseRecognitionException	typeref:typename:string
GetMissingSymbol	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (d *DefaultErrorStrategy) GetMissingSymbol(recognizer Parser) Token {$/;"	f	struct:antlr.DefaultErrorStrategy	typeref:typename:Token
GetNew_column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetNew_column_name() IColumn_nameContext$/;"	n	interface:sqliteparser.IAlter_table_stmtContext	typeref:typename:IColumn_nameContext
GetNew_column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) GetNew_column_name() IColumn_nameContext { return s.new_column/;"	f	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:IColumn_nameContext
GetNew_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetNew_table_name() ITable_nameContext$/;"	n	interface:sqliteparser.IAlter_table_stmtContext	typeref:typename:ITable_nameContext
GetNew_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) GetNew_table_name() ITable_nameContext { return s.new_table_na/;"	f	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:ITable_nameContext
GetNextTokenWithinRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	GetNextTokenWithinRule() *IntervalSet$/;"	n	interface:antlr.ATNState	typeref:typename:*IntervalSet
GetNextTokenWithinRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (as *BaseATNState) GetNextTokenWithinRule() *IntervalSet {$/;"	f	struct:antlr.BaseATNState	typeref:typename:*IntervalSet
GetNote	internal/database/notes.sql.go	/^func (q *Queries) GetNote(ctx context.Context, id string) (Note, error) {$/;"	f	unknown:database.Queries	typeref:typename:(Note, error)
GetNotesForUser	internal/database/notes.sql.go	/^func (q *Queries) GetNotesForUser(ctx context.Context, userID string) ([]Note, error) {$/;"	f	unknown:database.Queries	typeref:typename:([]Note, error)
GetObject	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetObject() antlr.Token$/;"	n	interface:sqliteparser.IDrop_stmtContext	typeref:typename:antlr.Token
GetObject	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Drop_stmtContext) GetObject() antlr.Token { return s.object }$/;"	f	struct:sqliteparser.Drop_stmtContext	typeref:typename:antlr.Token
GetOffendingToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	GetOffendingToken() Token$/;"	n	interface:antlr.RecognitionException	typeref:typename:Token
GetOffendingToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^func (b *BaseRecognitionException) GetOffendingToken() Token {$/;"	f	struct:antlr.BaseRecognitionException	typeref:typename:Token
GetOld_column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetOld_column_name() IColumn_nameContext$/;"	n	interface:sqliteparser.IAlter_table_stmtContext	typeref:typename:IColumn_nameContext
GetOld_column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) GetOld_column_name() IColumn_nameContext { return s.old_column/;"	f	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:IColumn_nameContext
GetOpName	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	GetOpName() string$/;"	n	interface:antlr.RewriteOperation	typeref:typename:string
GetOpName	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (op *BaseRewriteOperation) GetOpName() string {$/;"	f	struct:antlr.BaseRewriteOperation	typeref:typename:string
GetParent	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^	GetParent(int) PredictionContext$/;"	n	interface:antlr.PredictionContext	typeref:typename:PredictionContext
GetParent	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (a *ArrayPredictionContext) GetParent(index int) PredictionContext {$/;"	f	struct:antlr.ArrayPredictionContext	typeref:typename:PredictionContext
GetParent	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (b *BaseSingletonPredictionContext) GetParent(index int) PredictionContext {$/;"	f	struct:antlr.BaseSingletonPredictionContext	typeref:typename:PredictionContext
GetParent	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (e *EmptyPredictionContext) GetParent(index int) PredictionContext {$/;"	f	struct:antlr.EmptyPredictionContext	typeref:typename:PredictionContext
GetParent	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^func (b *BaseRuleContext) GetParent() Tree {$/;"	f	struct:antlr.BaseRuleContext	typeref:typename:Tree
GetParent	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	GetParent() Tree$/;"	n	interface:antlr.Tree	typeref:typename:Tree
GetParent	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (t *TerminalNodeImpl) GetParent() Tree {$/;"	f	struct:antlr.TerminalNodeImpl	typeref:typename:Tree
GetParseListeners	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	GetParseListeners() []ParseTreeListener$/;"	n	interface:antlr.Parser	typeref:typename:[]ParseTreeListener
GetParseListeners	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) GetParseListeners() []ParseTreeListener {$/;"	f	struct:antlr.BaseParser	typeref:typename:[]ParseTreeListener
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IAggregate_funcContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IAggregate_function_invocationContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IAliasContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IAlter_table_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IAnalyze_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IAny_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IAsc_descContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IAttach_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IBase_window_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IBegin_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ICollation_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IColumn_aliasContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IColumn_defContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IColumn_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IColumn_name_listContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ICommit_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ICommon_table_expressionContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ICommon_table_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ICompound_operatorContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ICompound_select_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IConflict_clauseContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ICreate_index_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ICreate_view_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ICreate_virtual_table_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ICte_table_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IDefault_valueContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IDelete_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IDelete_stmt_limitedContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IDetach_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IDrop_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IError_messageContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IExpr_asc_descContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IFactored_select_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IFilenameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IFilter_clauseContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IForeign_tableContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IFrame_clauseContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IFrame_leftContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IFrame_rightContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IFrame_singleContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IFrame_specContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IFunction_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IIndex_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IIndexed_columnContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IInitial_selectContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IJoin_clauseContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IJoin_constraintContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IJoin_operatorContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ILimit_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ILiteral_valueContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IModule_argumentContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IModule_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.INameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IOffsetContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IOrder_by_exprContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IOrder_by_expr_asc_descContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IOrder_by_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IOrdering_termContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IOver_clauseContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IParseContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IPartition_byContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IPragma_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IPragma_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IPragma_valueContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IQualified_table_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IRaise_functionContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IRecursive_cteContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IRecursive_selectContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IReindex_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IRelease_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IResult_columnContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IReturning_clauseContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IRollback_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ISavepoint_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ISavepoint_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ISchema_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ISelect_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ISigned_numberContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ISimple_funcContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ISimple_function_invocationContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ISimple_select_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ISql_stmt_listContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ITable_aliasContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ITable_constraintContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ITable_function_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ITable_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ITable_or_index_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ITable_or_subqueryContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ITransaction_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.ITrigger_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IType_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IUnary_operatorContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IVacuum_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IValue_rowContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IValues_clauseContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IView_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IWindow_defnContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IWindow_function_invocationContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IWindow_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetParser() antlr.Parser$/;"	n	interface:sqliteparser.IWith_clauseContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Aggregate_funcContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Aggregate_funcContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Aggregate_function_invocationContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Aggregate_function_invocationContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *AliasContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.AliasContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Analyze_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Analyze_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Any_nameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Any_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Asc_descContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Asc_descContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Attach_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Attach_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Base_window_nameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Base_window_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Begin_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Begin_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Collation_nameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Collation_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_aliasContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Column_aliasContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_defContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Column_defContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_nameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Column_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_name_listContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Column_name_listContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Commit_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Commit_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_expressionContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Common_table_expressionContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Common_table_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_operatorContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Compound_operatorContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_select_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Compound_select_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Conflict_clauseContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Conflict_clauseContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Create_view_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Cte_table_nameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Cte_table_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Default_valueContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Default_valueContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Delete_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmt_limitedContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Delete_stmt_limitedContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Detach_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Detach_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Drop_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Drop_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Error_messageContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Error_messageContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Expr_asc_descContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Expr_asc_descContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Factored_select_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Factored_select_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *FilenameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.FilenameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Filter_clauseContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Filter_clauseContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_tableContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Foreign_tableContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_clauseContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Frame_clauseContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_leftContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Frame_leftContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_rightContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Frame_rightContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_singleContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Frame_singleContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_specContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Frame_specContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Function_nameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Function_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Index_nameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Index_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Indexed_columnContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Indexed_columnContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Initial_selectContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Initial_selectContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_clauseContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Join_clauseContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_constraintContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Join_constraintContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_operatorContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Join_operatorContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Limit_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Limit_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Literal_valueContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Literal_valueContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Module_argumentContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Module_argumentContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Module_nameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Module_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *NameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.NameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *OffsetContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.OffsetContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_exprContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Order_by_exprContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_expr_asc_descContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Order_by_expr_asc_descContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Order_by_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Ordering_termContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Ordering_termContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Over_clauseContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Over_clauseContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ParseContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.ParseContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Partition_byContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Partition_byContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_nameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Pragma_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Pragma_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_valueContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Pragma_valueContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Qualified_table_nameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Qualified_table_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Raise_functionContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Raise_functionContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Recursive_cteContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Recursive_cteContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Recursive_selectContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Recursive_selectContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Reindex_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Reindex_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Release_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Release_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Result_columnContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Result_columnContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Returning_clauseContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Returning_clauseContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Rollback_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Rollback_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Savepoint_nameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Savepoint_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Savepoint_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Savepoint_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Schema_nameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Schema_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Select_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Signed_numberContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Signed_numberContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_funcContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Simple_funcContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_function_invocationContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Simple_function_invocationContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_select_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Simple_select_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmt_listContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Sql_stmt_listContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_aliasContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Table_aliasContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Table_constraintContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_function_nameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Table_function_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_nameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Table_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_index_nameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Table_or_index_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Transaction_nameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Transaction_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Trigger_nameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Trigger_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Type_nameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Type_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Unary_operatorContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Unary_operatorContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Vacuum_stmtContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Vacuum_stmtContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Value_rowContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Value_rowContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Values_clauseContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Values_clauseContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *View_nameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.View_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_defnContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Window_defnContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_function_invocationContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Window_function_invocationContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_nameContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.Window_nameContext	typeref:typename:antlr.Parser
GetParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *With_clauseContext) GetParser() antlr.Parser { return s.parser }$/;"	f	struct:sqliteparser.With_clauseContext	typeref:typename:antlr.Parser
GetParserRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	GetParserRuleContext() ParserRuleContext$/;"	n	interface:antlr.Parser	typeref:typename:ParserRuleContext
GetParserRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) GetParserRuleContext() ParserRuleContext {$/;"	f	struct:antlr.BaseParser	typeref:typename:ParserRuleContext
GetPayload	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) GetPayload() interface{} {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:interface{}
GetPayload	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	GetPayload() interface{}$/;"	n	interface:antlr.Tree	typeref:typename:interface{}
GetPayload	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (t *TerminalNodeImpl) GetPayload() interface{} {$/;"	f	struct:antlr.TerminalNodeImpl	typeref:typename:interface{}
GetPrecedence	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	GetPrecedence() int$/;"	n	interface:antlr.Parser	typeref:typename:int
GetPrecedence	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) GetPrecedence() int {$/;"	f	struct:antlr.BaseParser	typeref:typename:int
GetPredicates	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	GetPredicates() []SemanticContext$/;"	n	interface:antlr.ATNConfigSet	typeref:typename:[]SemanticContext
GetPredicates	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) GetPredicates() []SemanticContext {$/;"	f	struct:antlr.BaseATNConfigSet	typeref:typename:[]SemanticContext
GetPredictionMode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) GetPredictionMode() int {$/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:int
GetProgram	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) GetProgram(name string) []RewriteOperation {$/;"	f	struct:antlr.TokenStreamRewriter	typeref:typename:[]RewriteOperation
GetReachesIntoOuterContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^	GetReachesIntoOuterContext() int$/;"	n	interface:antlr.ATNConfig	typeref:typename:int
GetReachesIntoOuterContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func (b *BaseATNConfig) GetReachesIntoOuterContext() int {$/;"	f	struct:antlr.BaseATNConfig	typeref:typename:int
GetReturnStates	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (a *ArrayPredictionContext) GetReturnStates() []int {$/;"	f	struct:antlr.ArrayPredictionContext	typeref:typename:[]int
GetRow_ROW_ID	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetRow_ROW_ID() antlr.Token$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:antlr.Token
GetRow_ROW_ID	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) GetRow_ROW_ID() antlr.Token { return s.row_ROW_ID }$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:antlr.Token
GetRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) GetRuleContext() RuleContext {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:RuleContext
GetRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	GetRuleContext() RuleContext$/;"	n	interface:antlr.RuleNode	typeref:typename:RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Aggregate_funcContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Aggregate_funcContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Aggregate_function_invocationContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Aggregate_function_invocationContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *AliasContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.AliasContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Analyze_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Analyze_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Any_nameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Any_nameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Asc_descContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Asc_descContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Attach_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Attach_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Base_window_nameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Base_window_nameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Begin_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Begin_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Collation_nameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Collation_nameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_aliasContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Column_aliasContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_defContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Column_defContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_nameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Column_nameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_name_listContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Column_name_listContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Commit_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Commit_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_expressionContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Common_table_expressionContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Common_table_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_operatorContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Compound_operatorContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_select_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Compound_select_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Conflict_clauseContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Conflict_clauseContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Create_view_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Cte_table_nameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Cte_table_nameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Default_valueContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Default_valueContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Delete_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmt_limitedContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Delete_stmt_limitedContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Detach_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Detach_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Drop_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Drop_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Error_messageContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Error_messageContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Expr_asc_descContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Expr_asc_descContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Factored_select_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Factored_select_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *FilenameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.FilenameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Filter_clauseContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Filter_clauseContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_tableContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Foreign_tableContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_clauseContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Frame_clauseContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_leftContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Frame_leftContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_rightContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Frame_rightContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_singleContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Frame_singleContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_specContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Frame_specContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Function_nameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Function_nameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Index_nameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Index_nameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Indexed_columnContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Indexed_columnContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Initial_selectContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Initial_selectContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_clauseContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Join_clauseContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_constraintContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Join_constraintContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_operatorContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Join_operatorContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Limit_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Limit_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Literal_valueContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Literal_valueContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Module_argumentContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Module_argumentContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Module_nameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Module_nameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *NameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.NameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *OffsetContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.OffsetContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_exprContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Order_by_exprContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_expr_asc_descContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Order_by_expr_asc_descContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Order_by_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Ordering_termContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Ordering_termContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Over_clauseContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Over_clauseContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ParseContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.ParseContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Partition_byContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Partition_byContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_nameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Pragma_nameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Pragma_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_valueContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Pragma_valueContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Qualified_table_nameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Qualified_table_nameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Raise_functionContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Raise_functionContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Recursive_cteContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Recursive_cteContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Recursive_selectContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Recursive_selectContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Reindex_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Reindex_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Release_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Release_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Result_columnContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Result_columnContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Returning_clauseContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Returning_clauseContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Rollback_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Rollback_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Savepoint_nameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Savepoint_nameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Savepoint_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Savepoint_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Schema_nameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Schema_nameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Select_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Signed_numberContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Signed_numberContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_funcContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Simple_funcContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_function_invocationContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Simple_function_invocationContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_select_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Simple_select_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmt_listContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Sql_stmt_listContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_aliasContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Table_aliasContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Table_constraintContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_function_nameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Table_function_nameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_nameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Table_nameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_index_nameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Table_or_index_nameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Transaction_nameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Transaction_nameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Trigger_nameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Trigger_nameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Type_nameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Type_nameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Unary_operatorContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Unary_operatorContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Vacuum_stmtContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Vacuum_stmtContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Value_rowContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Value_rowContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Values_clauseContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Values_clauseContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *View_nameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.View_nameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_defnContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Window_defnContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_function_invocationContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Window_function_invocationContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_nameContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.Window_nameContext	typeref:typename:antlr.RuleContext
GetRuleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *With_clauseContext) GetRuleContext() antlr.RuleContext {$/;"	f	struct:sqliteparser.With_clauseContext	typeref:typename:antlr.RuleContext
GetRuleIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	GetRuleIndex() int$/;"	n	interface:antlr.ATNState	typeref:typename:int
GetRuleIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (as *BaseATNState) GetRuleIndex() int {$/;"	f	struct:antlr.BaseATNState	typeref:typename:int
GetRuleIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) GetRuleIndex(ruleName string) int {$/;"	f	struct:antlr.BaseParser	typeref:typename:int
GetRuleIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^	GetRuleIndex() int$/;"	n	interface:antlr.RuleContext	typeref:typename:int
GetRuleIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^func (b *BaseRuleContext) GetRuleIndex() int {$/;"	f	struct:antlr.BaseRuleContext	typeref:typename:int
GetRuleIndexMap	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^func (b *BaseRecognizer) GetRuleIndexMap() map[string]int {$/;"	f	struct:antlr.BaseRecognizer	typeref:typename:map[string]int
GetRuleInvocationStack	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	GetRuleInvocationStack(ParserRuleContext) []string$/;"	n	interface:antlr.Parser	typeref:typename:[]string
GetRuleInvocationStack	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) GetRuleInvocationStack(c ParserRuleContext) []string {$/;"	f	struct:antlr.BaseParser	typeref:typename:[]string
GetRuleNames	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^	GetRuleNames() []string$/;"	n	interface:antlr.Recognizer	typeref:typename:[]string
GetRuleNames	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^func (b *BaseRecognizer) GetRuleNames() []string {$/;"	f	struct:antlr.BaseRecognizer	typeref:typename:[]string
GetSemanticContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^	GetSemanticContext() SemanticContext$/;"	n	interface:antlr.ATNConfig	typeref:typename:SemanticContext
GetSemanticContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func (b *BaseATNConfig) GetSemanticContext() SemanticContext {$/;"	f	struct:antlr.BaseATNConfig	typeref:typename:SemanticContext
GetSource	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	GetSource() *TokenSourceCharStreamPair$/;"	n	interface:antlr.Token	typeref:typename:*TokenSourceCharStreamPair
GetSource	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^func (b *BaseToken) GetSource() *TokenSourceCharStreamPair {$/;"	f	struct:antlr.BaseToken	typeref:typename:*TokenSourceCharStreamPair
GetSourceInterval	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) GetSourceInterval() *Interval {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:*Interval
GetSourceInterval	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	GetSourceInterval() *Interval$/;"	n	interface:antlr.SyntaxTree	typeref:typename:*Interval
GetSourceInterval	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (t *TerminalNodeImpl) GetSourceInterval() *Interval {$/;"	f	struct:antlr.TerminalNodeImpl	typeref:typename:*Interval
GetSourceName	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) GetSourceName() string {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:string
GetSourceName	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/file_stream.go	/^func (f *FileStream) GetSourceName() string {$/;"	f	struct:antlr.FileStream	typeref:typename:string
GetSourceName	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/input_stream.go	/^func (*InputStream) GetSourceName() string {$/;"	f	struct:antlr.InputStream	typeref:typename:string
GetSourceName	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/int_stream.go	/^	GetSourceName() string$/;"	n	interface:antlr.IntStream	typeref:typename:string
GetSourceName	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) GetSourceName() string {$/;"	f	struct:antlr.BaseLexer	typeref:typename:string
GetSourceName	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) GetSourceName() string {$/;"	f	struct:antlr.BaseParser	typeref:typename:string
GetSourceName	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token_source.go	/^	GetSourceName() string$/;"	n	interface:antlr.TokenSource	typeref:typename:string
GetStart	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^	GetStart() Token$/;"	n	interface:antlr.ParserRuleContext	typeref:typename:Token
GetStart	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) GetStart() Token {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:Token
GetStart	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	GetStart() int$/;"	n	interface:antlr.Token	typeref:typename:int
GetStart	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^func (b *BaseToken) GetStart() int {$/;"	f	struct:antlr.BaseToken	typeref:typename:int
GetState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^	GetState() ATNState$/;"	n	interface:antlr.ATNConfig	typeref:typename:ATNState
GetState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func (b *BaseATNConfig) GetState() ATNState {$/;"	f	struct:antlr.BaseATNConfig	typeref:typename:ATNState
GetState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^	GetState() int$/;"	n	interface:antlr.Recognizer	typeref:typename:int
GetState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^func (b *BaseRecognizer) GetState() int {$/;"	f	struct:antlr.BaseRecognizer	typeref:typename:int
GetStateNumber	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	GetStateNumber() int$/;"	n	interface:antlr.ATNState	typeref:typename:int
GetStateNumber	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (as *BaseATNState) GetStateNumber() int {$/;"	f	struct:antlr.BaseATNState	typeref:typename:int
GetStateString	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_serializer.go	/^func (d *DFASerializer) GetStateString(s *DFAState) string {$/;"	f	struct:antlr.DFASerializer	typeref:typename:string
GetStateType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	GetStateType() int$/;"	n	interface:antlr.ATNState	typeref:typename:int
GetStateType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (as *BaseATNState) GetStateType() int {$/;"	f	struct:antlr.BaseATNState	typeref:typename:int
GetStates	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	GetStates() *JStore[ATNState, Comparator[ATNState]]$/;"	n	interface:antlr.ATNConfigSet	typeref:typename:*JStore
GetStates	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) GetStates() *JStore[ATNState, Comparator[ATNState]] {$/;"	f	struct:antlr.BaseATNConfigSet	typeref:typename:*JStore[
GetStop	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^	GetStop() Token$/;"	n	interface:antlr.ParserRuleContext	typeref:typename:Token
GetStop	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) GetStop() Token {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:Token
GetStop	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	GetStop() int$/;"	n	interface:antlr.Token	typeref:typename:int
GetStop	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^func (b *BaseToken) GetStop() int {$/;"	f	struct:antlr.BaseToken	typeref:typename:int
GetSymbol	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	GetSymbol() Token$/;"	n	interface:antlr.TerminalNode	typeref:typename:Token
GetSymbol	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (t *TerminalNodeImpl) GetSymbol() Token {$/;"	f	struct:antlr.TerminalNodeImpl	typeref:typename:Token
GetSymbolicNames	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^	GetSymbolicNames() []string$/;"	n	interface:antlr.Recognizer	typeref:typename:[]string
GetSymbolicNames	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^func (b *BaseRecognizer) GetSymbolicNames() []string {$/;"	f	struct:antlr.BaseRecognizer	typeref:typename:[]string
GetText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/char_stream.go	/^	GetText(int, int) string$/;"	n	interface:antlr.CharStream	typeref:typename:string
GetText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/input_stream.go	/^func (is *InputStream) GetText(start int, stop int) string {$/;"	f	struct:antlr.InputStream	typeref:typename:string
GetText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) GetText() string {$/;"	f	struct:antlr.BaseLexer	typeref:typename:string
GetText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	GetText(input CharStream) string$/;"	n	interface:antlr.ILexerATNSimulator	typeref:typename:string
GetText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) GetText(input CharStream) string {$/;"	f	struct:antlr.LexerATNSimulator	typeref:typename:string
GetText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) GetText() string {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:string
GetText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	GetText() string$/;"	n	interface:antlr.Token	typeref:typename:string
GetText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^func (c *CommonToken) GetText() string {$/;"	f	struct:antlr.CommonToken	typeref:typename:string
GetText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	GetText() string$/;"	n	interface:antlr.RewriteOperation	typeref:typename:string
GetText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (op *BaseRewriteOperation) GetText() string {$/;"	f	struct:antlr.BaseRewriteOperation	typeref:typename:string
GetText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) GetText(program_name string, interval *Interval) string {$/;"	f	struct:antlr.TokenStreamRewriter	typeref:typename:string
GetText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	GetText() string$/;"	n	interface:antlr.ParseTree	typeref:typename:string
GetText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (t *TerminalNodeImpl) GetText() string {$/;"	f	struct:antlr.TerminalNodeImpl	typeref:typename:string
GetTextDefault	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) GetTextDefault() string {$/;"	f	struct:antlr.TokenStreamRewriter	typeref:typename:string
GetTextFromInterval	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/char_stream.go	/^	GetTextFromInterval(*Interval) string$/;"	n	interface:antlr.CharStream	typeref:typename:string
GetTextFromInterval	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) GetTextFromInterval(interval *Interval) string {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:string
GetTextFromInterval	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/input_stream.go	/^func (is *InputStream) GetTextFromInterval(i *Interval) string {$/;"	f	struct:antlr.InputStream	typeref:typename:string
GetTextFromInterval	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token_stream.go	/^	GetTextFromInterval(*Interval) string$/;"	n	interface:antlr.TokenStream	typeref:typename:string
GetTextFromRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) GetTextFromRuleContext(interval RuleContext) string {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:string
GetTextFromRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token_stream.go	/^	GetTextFromRuleContext(RuleContext) string$/;"	n	interface:antlr.TokenStream	typeref:typename:string
GetTextFromTokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/char_stream.go	/^	GetTextFromTokens(start, end Token) string$/;"	n	interface:antlr.CharStream	typeref:typename:string
GetTextFromTokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) GetTextFromTokens(start, end Token) string {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:string
GetTextFromTokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/input_stream.go	/^func (is *InputStream) GetTextFromTokens(start, stop Token) string {$/;"	f	struct:antlr.InputStream	typeref:typename:string
GetTextFromTokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token_stream.go	/^	GetTextFromTokens(Token, Token) string$/;"	n	interface:antlr.TokenStream	typeref:typename:string
GetTime	vendor/github.com/google/uuid/time.go	/^func GetTime() (Time, uint16, error) {$/;"	f	package:uuid	typeref:typename:(Time, uint16, error)
GetToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) GetToken(ttype int, i int) TerminalNode {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:TerminalNode
GetTokenErrorDisplay	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (d *DefaultErrorStrategy) GetTokenErrorDisplay(t Token) string {$/;"	f	struct:antlr.DefaultErrorStrategy	typeref:typename:string
GetTokenErrorDisplay	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^func (b *BaseRecognizer) GetTokenErrorDisplay(t Token) string {$/;"	f	struct:antlr.BaseRecognizer	typeref:typename:string
GetTokenFactory	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) GetTokenFactory() TokenFactory {$/;"	f	struct:antlr.BaseLexer	typeref:typename:TokenFactory
GetTokenFactory	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	GetTokenFactory() TokenFactory$/;"	n	interface:antlr.Parser	typeref:typename:TokenFactory
GetTokenFactory	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) GetTokenFactory() TokenFactory {$/;"	f	struct:antlr.BaseParser	typeref:typename:TokenFactory
GetTokenFactory	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token_source.go	/^	GetTokenFactory() TokenFactory$/;"	n	interface:antlr.TokenSource	typeref:typename:TokenFactory
GetTokenIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	GetTokenIndex() int$/;"	n	interface:antlr.Token	typeref:typename:int
GetTokenIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^func (b *BaseToken) GetTokenIndex() int {$/;"	f	struct:antlr.BaseToken	typeref:typename:int
GetTokenName	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) GetTokenName(tt int) string {$/;"	f	struct:antlr.LexerATNSimulator	typeref:typename:string
GetTokenName	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) GetTokenName(t int) string {$/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:string
GetTokenNames	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^func (b *BaseRecognizer) GetTokenNames() []string {$/;"	f	struct:antlr.BaseRecognizer	typeref:typename:[]string
GetTokenSource	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) GetTokenSource() TokenSource {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:TokenSource
GetTokenSource	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	GetTokenSource() TokenSource$/;"	n	interface:antlr.Token	typeref:typename:TokenSource
GetTokenSource	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^func (b *BaseToken) GetTokenSource() TokenSource {$/;"	f	struct:antlr.BaseToken	typeref:typename:TokenSource
GetTokenSource	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token_stream.go	/^	GetTokenSource() TokenSource$/;"	n	interface:antlr.TokenStream	typeref:typename:TokenSource
GetTokenSourceCharStreamPair	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) GetTokenSourceCharStreamPair() *TokenSourceCharStreamPair {$/;"	f	struct:antlr.BaseLexer	typeref:typename:*TokenSourceCharStreamPair
GetTokenStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	GetTokenStream() TokenStream$/;"	n	interface:antlr.Parser	typeref:typename:TokenStream
GetTokenStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) GetTokenStream() TokenStream {$/;"	f	struct:antlr.BaseParser	typeref:typename:TokenStream
GetTokenStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) GetTokenStream() TokenStream {$/;"	f	struct:antlr.TokenStreamRewriter	typeref:typename:TokenStream
GetTokenType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^func (b *BaseRecognizer) GetTokenType(tokenName string) int {$/;"	f	struct:antlr.BaseRecognizer	typeref:typename:int
GetTokenType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	GetTokenType() int$/;"	n	interface:antlr.Token	typeref:typename:int
GetTokenType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^func (b *BaseToken) GetTokenType() int {$/;"	f	struct:antlr.BaseToken	typeref:typename:int
GetTokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) GetTokens(start int, stop int, types *IntervalSet) []Token {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:[]Token
GetTokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) GetTokens(ttype int) []TerminalNode {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:[]TerminalNode
GetTokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	GetTokens() TokenStream$/;"	n	interface:antlr.RewriteOperation	typeref:typename:TokenStream
GetTokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (op *BaseRewriteOperation) GetTokens() TokenStream {$/;"	f	struct:antlr.BaseRewriteOperation	typeref:typename:TokenStream
GetTransitions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	GetTransitions() []Transition$/;"	n	interface:antlr.ATNState	typeref:typename:[]Transition
GetTransitions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (as *BaseATNState) GetTransitions() []Transition {$/;"	f	struct:antlr.BaseATNState	typeref:typename:[]Transition
GetType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) GetType() int {$/;"	f	struct:antlr.BaseLexer	typeref:typename:int
GetTypedRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) GetTypedRuleContext(ctxType reflect.Type, i int) RuleContext {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:RuleContext
GetTypedRuleContexts	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) GetTypedRuleContexts(ctxType reflect.Type) []RuleContext {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:[]RuleContext
GetUniqueAlt	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	GetUniqueAlt() int$/;"	n	interface:antlr.ATNConfigSet	typeref:typename:int
GetUniqueAlt	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) GetUniqueAlt() int {$/;"	f	struct:antlr.BaseATNConfigSet	typeref:typename:int
GetUser	internal/database/users.sql.go	/^func (q *Queries) GetUser(ctx context.Context, apiKey string) (User, error) {$/;"	f	unknown:database.Queries	typeref:typename:(User, error)
GetWhereExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	GetWhereExpr() IExprContext$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:IExprContext
GetWhereExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) GetWhereExpr() IExprContext { return s.whereExpr }$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:IExprContext
Get_expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Get_expr() IExprContext$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:IExprContext
Get_expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) Get_expr() IExprContext { return s._expr }$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:IExprContext
Go	vendor/nhooyr.io/websocket/internal/xsync/go.go	/^func Go(fn func() error) <-chan error {$/;"	f	package:xsync	typeref:typename:<-chan error
Go module support & note on chi's versioning	vendor/github.com/go-chi/chi/README.md	/^## Go module support & note on chi's versioning$/;"	s	chapter:<img alt="chi" src="https://cdn.rawgit.com/go-chi/chi/master/_examples/chi.svg" width="220" />
GoDotEnv ![CI](https://github.com/joho/godotenv/workflows/CI/badge.svg) [![Go Report Card](https://goreportcard.com/badge/github.com/joho/godotenv)](https://goreportcard.com/report/github.com/joho/godotenv)	vendor/github.com/joho/godotenv/README.md	/^# GoDotEnv ![CI](https:\/\/github.com\/joho\/godotenv\/workflows\/CI\/badge.svg) [![Go Report Ca/;"	c
GrammarFileName	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^	GrammarFileName string$/;"	m	struct:antlr.BaseRecognizer	typeref:typename:string
Group	vendor/github.com/go-chi/chi/chi.go	/^	Group(fn func(r Router)) Router$/;"	n	interface:chi.Router	typeref:typename:Router
Group	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) Group(fn func(r Router)) Router {$/;"	f	struct:chi.Mux	typeref:typename:Router
Group	vendor/github.com/google/uuid/dce.go	/^	Group  = Domain(1)$/;"	c	package:uuid
Grow	vendor/golang.org/x/exp/slices/slices.go	/^func Grow[S ~[]E, E any](s S, n int) S {$/;"	f	package:slices	typeref:typename:(s S, n int) S
HAVING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	HAVING_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
HAVING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	HAVING_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:antlr.TerminalNode
HAVING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) HAVING_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
HAVING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) HAVING_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:antlr.TerminalNode
HTTPClient	vendor/nhooyr.io/websocket/dial.go	/^	HTTPClient *http.Client$/;"	m	struct:websocket.DialOptions	typeref:typename:*http.Client
HTTPHeader	vendor/nhooyr.io/websocket/dial.go	/^	HTTPHeader http.Header$/;"	m	struct:websocket.DialOptions	typeref:typename:http.Header
Handle	vendor/github.com/go-chi/chi/chi.go	/^	Handle(pattern string, h http.Handler)$/;"	n	interface:chi.Router
Handle	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) Handle(pattern string, handler http.Handler) {$/;"	f	struct:chi.Mux
HandleFunc	vendor/github.com/go-chi/chi/chi.go	/^	HandleFunc(pattern string, h http.HandlerFunc)$/;"	n	interface:chi.Router
HandleFunc	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) HandleFunc(pattern string, handlerFn http.HandlerFunc) {$/;"	f	struct:chi.Mux
Handler	vendor/github.com/go-chi/chi/chain.go	/^func (mws Middlewares) Handler(h http.Handler) http.Handler {$/;"	f	unknown:chi.Middlewares	typeref:typename:http.Handler
Handler	vendor/github.com/go-chi/cors/cors.go	/^func (c *Cors) Handler(next http.Handler) http.Handler {$/;"	f	struct:cors.Cors	typeref:typename:http.Handler
Handler	vendor/github.com/go-chi/cors/cors.go	/^func Handler(options Options) func(next http.Handler) http.Handler {$/;"	f	package:cors	typeref:typename:func(next http.Handler) http.Handler
HandlerFunc	vendor/github.com/go-chi/chi/chain.go	/^func (mws Middlewares) HandlerFunc(h http.HandlerFunc) http.Handler {$/;"	f	unknown:chi.Middlewares	typeref:typename:http.Handler
Handlers	vendor/github.com/go-chi/chi/tree.go	/^	Handlers  map[string]http.Handler$/;"	m	struct:chi.Route	typeref:typename:map[string]http.Handler
HasNextResultSet	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/rows.go	/^func (r *rows) HasNextResultSet() bool {$/;"	f	struct:shared.rows	typeref:typename:bool
HasResult	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (p *BatchResultRowsProvider) HasResult(setIdx int) bool {$/;"	f	struct:hranaV2.BatchResultRowsProvider	typeref:typename:bool
HasResult	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (p *StmtResultRowsProvider) HasResult(setIdx int) bool {$/;"	f	struct:hranaV2.StmtResultRowsProvider	typeref:typename:bool
HasResult	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/rows.go	/^	HasResult(setIdx int) bool$/;"	n	interface:shared.rowsProvider	typeref:typename:bool
HasSemanticContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	HasSemanticContext() bool$/;"	n	interface:antlr.ATNConfigSet	typeref:typename:bool
HasSemanticContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) HasSemanticContext() bool {$/;"	f	struct:antlr.BaseATNConfigSet	typeref:typename:bool
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^	Hash() int$/;"	n	interface:antlr.ATNConfig	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func (b *BaseATNConfig) Hash() int {$/;"	f	struct:antlr.BaseATNConfig	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func (l *LexerATNConfig) Hash() int {$/;"	f	struct:antlr.LexerATNConfig	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	Hash() int$/;"	n	interface:antlr.ATNConfigSet	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) Hash() int {$/;"	f	struct:antlr.BaseATNConfigSet	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	Hash() int$/;"	n	interface:antlr.ATNState	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (as *BaseATNState) Hash() int {$/;"	f	struct:antlr.BaseATNState	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^func (d *DFAState) Hash() int {$/;"	f	struct:antlr.DFAState	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	Hash() int$/;"	n	interface:antlr.LexerAction	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (b *BaseLexerAction) Hash() int {$/;"	f	struct:antlr.BaseLexerAction	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerChannelAction) Hash() int {$/;"	f	struct:antlr.LexerChannelAction	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerCustomAction) Hash() int {$/;"	f	struct:antlr.LexerCustomAction	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerIndexedCustomAction) Hash() int {$/;"	f	struct:antlr.LexerIndexedCustomAction	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerModeAction) Hash() int {$/;"	f	struct:antlr.LexerModeAction	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerPushModeAction) Hash() int {$/;"	f	struct:antlr.LexerPushModeAction	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerTypeAction) Hash() int {$/;"	f	struct:antlr.LexerTypeAction	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action_executor.go	/^func (l *LexerActionExecutor) Hash() int {$/;"	f	struct:antlr.LexerActionExecutor	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^	Hash() int$/;"	n	interface:antlr.PredictionContext	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (a *ArrayPredictionContext) Hash() int {$/;"	f	struct:antlr.ArrayPredictionContext	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (b *BaseSingletonPredictionContext) Hash() int {$/;"	f	struct:antlr.BaseSingletonPredictionContext	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (e *EmptyPredictionContext) Hash() int {$/;"	f	struct:antlr.EmptyPredictionContext	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^	Hash() int$/;"	n	interface:antlr.SemanticContext	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func (a *AND) Hash() int {$/;"	f	struct:antlr.AND	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func (a *OR) Hash() int {$/;"	f	unknown:antlr.OR	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func (p *PrecedencePredicate) Hash() int {$/;"	f	struct:antlr.PrecedencePredicate	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func (p *Predicate) Hash() int {$/;"	f	struct:antlr.Predicate	typeref:typename:int
Hash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^	Hash() int$/;"	n	interface:antlr.hasher	typeref:typename:int
Hash1	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/comparators.go	/^func (c *ATNAltConfigComparator[T]) Hash1(o ATNConfig) int {$/;"	f	unknown:antlr.T	typeref:typename:int
Hash1	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/comparators.go	/^func (c *ATNConfigComparator[T]) Hash1(o ATNConfig) int {$/;"	f	unknown:antlr.T	typeref:typename:int
Hash1	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/comparators.go	/^func (c *BaseATNConfigComparator[T]) Hash1(o ATNConfig) int {$/;"	f	unknown:antlr.T	typeref:typename:int
Hash1	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/comparators.go	/^func (c *ObjEqComparator[T]) Hash1(o T) int {$/;"	f	unknown:antlr.T	typeref:typename:int
Head	vendor/github.com/go-chi/chi/chi.go	/^	Head(pattern string, h http.HandlerFunc)$/;"	n	interface:chi.Router
Head	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) Head(pattern string, handlerFn http.HandlerFunc) {$/;"	f	struct:chi.Mux
Highlights	vendor/nhooyr.io/websocket/README.md	/^## Highlights$/;"	s	chapter:websocket
How to contribute	vendor/github.com/google/uuid/CONTRIBUTING.md	/^# How to contribute$/;"	c
HuffmanOnly	vendor/github.com/klauspost/compress/flate/deflate.go	/^	HuffmanOnly         = -2$/;"	c	package:flate
IATNSimulator	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_simulator.go	/^type IATNSimulator interface {$/;"	i	package:antlr
IAbstractPredicateTransitionFoo	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	IAbstractPredicateTransitionFoo()$/;"	n	interface:antlr.AbstractPredicateTransition
IAbstractPredicateTransitionFoo	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (a *BaseAbstractPredicateTransition) IAbstractPredicateTransitionFoo() {}$/;"	f	struct:antlr.BaseAbstractPredicateTransition
IAggregate_funcContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IAggregate_funcContext interface {$/;"	i	package:sqliteparser
IAggregate_function_invocationContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IAggregate_function_invocationContext interface {$/;"	i	package:sqliteparser
IAliasContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IAliasContext interface {$/;"	i	package:sqliteparser
IAlter_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IAlter_table_stmtContext interface {$/;"	i	package:sqliteparser
IAnalyze_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IAnalyze_stmtContext interface {$/;"	i	package:sqliteparser
IAny_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IAny_nameContext interface {$/;"	i	package:sqliteparser
IAsc_descContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IAsc_descContext interface {$/;"	i	package:sqliteparser
IAttach_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IAttach_stmtContext interface {$/;"	i	package:sqliteparser
IBase_window_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IBase_window_nameContext interface {$/;"	i	package:sqliteparser
IBegin_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IBegin_stmtContext interface {$/;"	i	package:sqliteparser
ICollation_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ICollation_nameContext interface {$/;"	i	package:sqliteparser
IColumn_aliasContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IColumn_aliasContext interface {$/;"	i	package:sqliteparser
IColumn_constraintContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IColumn_constraintContext interface {$/;"	i	package:sqliteparser
IColumn_defContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IColumn_defContext interface {$/;"	i	package:sqliteparser
IColumn_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IColumn_nameContext interface {$/;"	i	package:sqliteparser
IColumn_name_listContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IColumn_name_listContext interface {$/;"	i	package:sqliteparser
ICommit_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ICommit_stmtContext interface {$/;"	i	package:sqliteparser
ICommon_table_expressionContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ICommon_table_expressionContext interface {$/;"	i	package:sqliteparser
ICommon_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ICommon_table_stmtContext interface {$/;"	i	package:sqliteparser
ICompound_operatorContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ICompound_operatorContext interface {$/;"	i	package:sqliteparser
ICompound_select_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ICompound_select_stmtContext interface {$/;"	i	package:sqliteparser
IConflict_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IConflict_clauseContext interface {$/;"	i	package:sqliteparser
ICreate_index_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ICreate_index_stmtContext interface {$/;"	i	package:sqliteparser
ICreate_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ICreate_table_stmtContext interface {$/;"	i	package:sqliteparser
ICreate_trigger_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ICreate_trigger_stmtContext interface {$/;"	i	package:sqliteparser
ICreate_view_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ICreate_view_stmtContext interface {$/;"	i	package:sqliteparser
ICreate_virtual_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ICreate_virtual_table_stmtContext interface {$/;"	i	package:sqliteparser
ICte_table_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ICte_table_nameContext interface {$/;"	i	package:sqliteparser
ID	internal/database/models.go	/^	ID        string$/;"	m	struct:database.Note	typeref:typename:string
ID	internal/database/models.go	/^	ID        string$/;"	m	struct:database.User	typeref:typename:string
ID	internal/database/notes.sql.go	/^	ID        string$/;"	m	struct:database.CreateNoteParams	typeref:typename:string
ID	internal/database/users.sql.go	/^	ID        string$/;"	m	struct:database.CreateUserParams	typeref:typename:string
ID	models.go	/^	ID        string    `json:"id"`$/;"	m	struct:main.Note	typeref:typename:string
ID	models.go	/^	ID        string    `json:"id"`$/;"	m	struct:main.User	typeref:typename:string
ID	vendor/github.com/google/uuid/dce.go	/^func (uuid UUID) ID() uint32 {$/;"	f	unknown:uuid.UUID	typeref:typename:uint32
IDENTIFIER	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IDENTIFIER() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAny_nameContext	typeref:typename:antlr.TerminalNode
IDENTIFIER	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IDENTIFIER() antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_aliasContext	typeref:typename:antlr.TerminalNode
IDENTIFIER	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IDENTIFIER() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:antlr.TerminalNode
IDENTIFIER	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Any_nameContext) IDENTIFIER() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Any_nameContext	typeref:typename:antlr.TerminalNode
IDENTIFIER	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_aliasContext) IDENTIFIER() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_aliasContext	typeref:typename:antlr.TerminalNode
IDENTIFIER	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) IDENTIFIER() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:antlr.TerminalNode
IDefault_valueContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IDefault_valueContext interface {$/;"	i	package:sqliteparser
IDelete_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IDelete_stmtContext interface {$/;"	i	package:sqliteparser
IDelete_stmt_limitedContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IDelete_stmt_limitedContext interface {$/;"	i	package:sqliteparser
IDetach_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IDetach_stmtContext interface {$/;"	i	package:sqliteparser
IDrop_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IDrop_stmtContext interface {$/;"	i	package:sqliteparser
IError_messageContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IError_messageContext interface {$/;"	i	package:sqliteparser
IExprContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IExprContext interface {$/;"	i	package:sqliteparser
IExpr_asc_descContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IExpr_asc_descContext interface {$/;"	i	package:sqliteparser
IF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IF_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_index_stmtContext	typeref:typename:antlr.TerminalNode
IF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IF_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:antlr.TerminalNode
IF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IF_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
IF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IF_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_view_stmtContext	typeref:typename:antlr.TerminalNode
IF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IF_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
IF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IF_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IDrop_stmtContext	typeref:typename:antlr.TerminalNode
IF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IF_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
IF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) IF_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:antlr.TerminalNode
IF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) IF_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:antlr.TerminalNode
IF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) IF_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
IF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) IF_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_view_stmtContext	typeref:typename:antlr.TerminalNode
IF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) IF_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
IF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Drop_stmtContext) IF_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Drop_stmtContext	typeref:typename:antlr.TerminalNode
IF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) IF_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
IFactored_select_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IFactored_select_stmtContext interface {$/;"	i	package:sqliteparser
IFilenameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IFilenameContext interface {$/;"	i	package:sqliteparser
IFilter_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IFilter_clauseContext interface {$/;"	i	package:sqliteparser
IForeign_key_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IForeign_key_clauseContext interface {$/;"	i	package:sqliteparser
IForeign_tableContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IForeign_tableContext interface {$/;"	i	package:sqliteparser
IFrame_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IFrame_clauseContext interface {$/;"	i	package:sqliteparser
IFrame_leftContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IFrame_leftContext interface {$/;"	i	package:sqliteparser
IFrame_rightContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IFrame_rightContext interface {$/;"	i	package:sqliteparser
IFrame_singleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IFrame_singleContext interface {$/;"	i	package:sqliteparser
IFrame_specContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IFrame_specContext interface {$/;"	i	package:sqliteparser
IFunction_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IFunction_nameContext interface {$/;"	i	package:sqliteparser
IGNORE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IGNORE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IConflict_clauseContext	typeref:typename:antlr.TerminalNode
IGNORE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IGNORE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:antlr.TerminalNode
IGNORE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IGNORE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
IGNORE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IGNORE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IRaise_functionContext	typeref:typename:antlr.TerminalNode
IGNORE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IGNORE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:antlr.TerminalNode
IGNORE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IGNORE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:antlr.TerminalNode
IGNORE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Conflict_clauseContext) IGNORE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Conflict_clauseContext	typeref:typename:antlr.TerminalNode
IGNORE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) IGNORE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:antlr.TerminalNode
IGNORE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) IGNORE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
IGNORE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Raise_functionContext) IGNORE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Raise_functionContext	typeref:typename:antlr.TerminalNode
IGNORE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) IGNORE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:antlr.TerminalNode
IGNORE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) IGNORE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:antlr.TerminalNode
IIndex_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IIndex_nameContext interface {$/;"	i	package:sqliteparser
IIndexed_columnContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IIndexed_columnContext interface {$/;"	i	package:sqliteparser
IInitial_selectContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IInitial_selectContext interface {$/;"	i	package:sqliteparser
IInsert_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IInsert_stmtContext interface {$/;"	i	package:sqliteparser
IJoin_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IJoin_clauseContext interface {$/;"	i	package:sqliteparser
IJoin_constraintContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IJoin_constraintContext interface {$/;"	i	package:sqliteparser
IJoin_operatorContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IJoin_operatorContext interface {$/;"	i	package:sqliteparser
IKeywordContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IKeywordContext interface {$/;"	i	package:sqliteparser
ILexerATNSimulator	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^type ILexerATNSimulator interface {$/;"	i	package:antlr
ILimit_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ILimit_stmtContext interface {$/;"	i	package:sqliteparser
ILiteral_valueContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ILiteral_valueContext interface {$/;"	i	package:sqliteparser
IMMEDIATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IMMEDIATE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IBegin_stmtContext	typeref:typename:antlr.TerminalNode
IMMEDIATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IMMEDIATE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:antlr.TerminalNode
IMMEDIATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IMMEDIATE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
IMMEDIATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Begin_stmtContext) IMMEDIATE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Begin_stmtContext	typeref:typename:antlr.TerminalNode
IMMEDIATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) IMMEDIATE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.TerminalNode
IMMEDIATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) IMMEDIATE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
IModule_argumentContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IModule_argumentContext interface {$/;"	i	package:sqliteparser
IModule_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IModule_nameContext interface {$/;"	i	package:sqliteparser
INDEXED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	INDEXED_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
INDEXED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	INDEXED_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IQualified_table_nameContext	typeref:typename:antlr.TerminalNode
INDEXED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	INDEXED_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ITable_or_subqueryContext	typeref:typename:antlr.TerminalNode
INDEXED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) INDEXED_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
INDEXED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Qualified_table_nameContext) INDEXED_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Qualified_table_nameContext	typeref:typename:antlr.TerminalNode
INDEXED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) INDEXED_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:antlr.TerminalNode
INDEX_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	INDEX_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_index_stmtContext	typeref:typename:antlr.TerminalNode
INDEX_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	INDEX_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IDrop_stmtContext	typeref:typename:antlr.TerminalNode
INDEX_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	INDEX_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
INDEX_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) INDEX_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:antlr.TerminalNode
INDEX_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Drop_stmtContext) INDEX_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Drop_stmtContext	typeref:typename:antlr.TerminalNode
INDEX_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) INDEX_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
INITIALLY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	INITIALLY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:antlr.TerminalNode
INITIALLY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	INITIALLY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
INITIALLY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) INITIALLY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.TerminalNode
INITIALLY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) INITIALLY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
INNER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	INNER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IJoin_operatorContext	typeref:typename:antlr.TerminalNode
INNER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	INNER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
INNER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_operatorContext) INNER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Join_operatorContext	typeref:typename:antlr.TerminalNode
INNER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) INNER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
INSERT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	INSERT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
INSERT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	INSERT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:antlr.TerminalNode
INSERT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	INSERT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
INSERT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) INSERT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
INSERT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) INSERT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:antlr.TerminalNode
INSERT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) INSERT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
INSTEAD_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	INSTEAD_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
INSTEAD_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	INSTEAD_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
INSTEAD_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) INSTEAD_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
INSTEAD_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) INSTEAD_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
INTERSECT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	INTERSECT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICompound_operatorContext	typeref:typename:antlr.TerminalNode
INTERSECT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	INTERSECT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
INTERSECT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	INTERSECT_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ICompound_select_stmtContext	typeref:typename:antlr.TerminalNode
INTERSECT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_operatorContext) INTERSECT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Compound_operatorContext	typeref:typename:antlr.TerminalNode
INTERSECT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_select_stmtContext) INTERSECT_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Compound_select_stmtContext	typeref:typename:antlr.TerminalNode
INTERSECT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) INTERSECT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
INTO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	INTO_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:antlr.TerminalNode
INTO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	INTO_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
INTO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	INTO_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IVacuum_stmtContext	typeref:typename:antlr.TerminalNode
INTO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) INTO_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:antlr.TerminalNode
INTO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) INTO_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
INTO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Vacuum_stmtContext) INTO_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Vacuum_stmtContext	typeref:typename:antlr.TerminalNode
IN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IN_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
IN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IN_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
IN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) IN_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
IN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) IN_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
INameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type INameContext interface {$/;"	i	package:sqliteparser
IOffsetContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IOffsetContext interface {$/;"	i	package:sqliteparser
IOrder_by_exprContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IOrder_by_exprContext interface {$/;"	i	package:sqliteparser
IOrder_by_expr_asc_descContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IOrder_by_expr_asc_descContext interface {$/;"	i	package:sqliteparser
IOrder_by_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IOrder_by_stmtContext interface {$/;"	i	package:sqliteparser
IOrdering_termContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IOrdering_termContext interface {$/;"	i	package:sqliteparser
IOver_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IOver_clauseContext interface {$/;"	i	package:sqliteparser
IParseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IParseContext interface {$/;"	i	package:sqliteparser
IPartition_byContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IPartition_byContext interface {$/;"	i	package:sqliteparser
IPragma_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IPragma_nameContext interface {$/;"	i	package:sqliteparser
IPragma_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IPragma_stmtContext interface {$/;"	i	package:sqliteparser
IPragma_valueContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IPragma_valueContext interface {$/;"	i	package:sqliteparser
IQualified_table_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IQualified_table_nameContext interface {$/;"	i	package:sqliteparser
IRaise_functionContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IRaise_functionContext interface {$/;"	i	package:sqliteparser
IRecursive_cteContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IRecursive_cteContext interface {$/;"	i	package:sqliteparser
IRecursive_selectContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IRecursive_selectContext interface {$/;"	i	package:sqliteparser
IReindex_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IReindex_stmtContext interface {$/;"	i	package:sqliteparser
IRelease_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IRelease_stmtContext interface {$/;"	i	package:sqliteparser
IResult_columnContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IResult_columnContext interface {$/;"	i	package:sqliteparser
IReturning_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IReturning_clauseContext interface {$/;"	i	package:sqliteparser
IRollback_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IRollback_stmtContext interface {$/;"	i	package:sqliteparser
ISNULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ISNULL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
ISNULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ISNULL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
ISNULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) ISNULL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
ISNULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) ISNULL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
IS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
IS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
IS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) IS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
IS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) IS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
ISavepoint_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ISavepoint_nameContext interface {$/;"	i	package:sqliteparser
ISavepoint_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ISavepoint_stmtContext interface {$/;"	i	package:sqliteparser
ISchema_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ISchema_nameContext interface {$/;"	i	package:sqliteparser
ISelect_coreContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ISelect_coreContext interface {$/;"	i	package:sqliteparser
ISelect_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ISelect_stmtContext interface {$/;"	i	package:sqliteparser
ISigned_numberContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ISigned_numberContext interface {$/;"	i	package:sqliteparser
ISimple_funcContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ISimple_funcContext interface {$/;"	i	package:sqliteparser
ISimple_function_invocationContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ISimple_function_invocationContext interface {$/;"	i	package:sqliteparser
ISimple_select_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ISimple_select_stmtContext interface {$/;"	i	package:sqliteparser
ISql_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ISql_stmtContext interface {$/;"	i	package:sqliteparser
ISql_stmt_listContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ISql_stmt_listContext interface {$/;"	i	package:sqliteparser
ITable_aliasContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ITable_aliasContext interface {$/;"	i	package:sqliteparser
ITable_constraintContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ITable_constraintContext interface {$/;"	i	package:sqliteparser
ITable_function_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ITable_function_nameContext interface {$/;"	i	package:sqliteparser
ITable_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ITable_nameContext interface {$/;"	i	package:sqliteparser
ITable_or_index_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ITable_or_index_nameContext interface {$/;"	i	package:sqliteparser
ITable_or_subqueryContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ITable_or_subqueryContext interface {$/;"	i	package:sqliteparser
ITransaction_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ITransaction_nameContext interface {$/;"	i	package:sqliteparser
ITrigger_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ITrigger_nameContext interface {$/;"	i	package:sqliteparser
IType_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IType_nameContext interface {$/;"	i	package:sqliteparser
IUnary_operatorContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IUnary_operatorContext interface {$/;"	i	package:sqliteparser
IUpdate_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IUpdate_stmtContext interface {$/;"	i	package:sqliteparser
IUpdate_stmt_limitedContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IUpdate_stmt_limitedContext interface {$/;"	i	package:sqliteparser
IUpsert_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IUpsert_clauseContext interface {$/;"	i	package:sqliteparser
IVacuum_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IVacuum_stmtContext interface {$/;"	i	package:sqliteparser
IValue_rowContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IValue_rowContext interface {$/;"	i	package:sqliteparser
IValues_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IValues_clauseContext interface {$/;"	i	package:sqliteparser
IView_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IView_nameContext interface {$/;"	i	package:sqliteparser
IWindow_defnContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IWindow_defnContext interface {$/;"	i	package:sqliteparser
IWindow_functionContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IWindow_functionContext interface {$/;"	i	package:sqliteparser
IWindow_function_invocationContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IWindow_function_invocationContext interface {$/;"	i	package:sqliteparser
IWindow_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IWindow_nameContext interface {$/;"	i	package:sqliteparser
IWith_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type IWith_clauseContext interface {$/;"	i	package:sqliteparser
InErrorRecoveryMode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^	InErrorRecoveryMode(Parser) bool$/;"	n	interface:antlr.ErrorStrategy	typeref:typename:bool
InErrorRecoveryMode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (d *DefaultErrorStrategy) InErrorRecoveryMode(recognizer Parser) bool {$/;"	f	struct:antlr.DefaultErrorStrategy	typeref:typename:bool
IncompleteCreateTriggerStatement	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparserutils/utils.go	/^	IncompleteCreateTriggerStatement bool$/;"	m	struct:sqliteparserutils.SplitStatementExtraInfo	typeref:typename:bool
IncompleteMultilineComment	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparserutils/utils.go	/^	IncompleteMultilineComment       bool$/;"	m	struct:sqliteparserutils.SplitStatementExtraInfo	typeref:typename:bool
Index	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) Index() int {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:int
Index	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/input_stream.go	/^func (is *InputStream) Index() int {$/;"	f	struct:antlr.InputStream	typeref:typename:int
Index	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/int_stream.go	/^	Index() int$/;"	n	interface:antlr.IntStream	typeref:typename:int
Index	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^func Index[S ~[]E, E comparable](s S, v E) int {$/;"	f	package:libsql	typeref:typename:(s S, v E) int
Index	vendor/golang.org/x/exp/slices/slices.go	/^func Index[E comparable](s []E, v E) int {$/;"	f	package:slices	typeref:typename:(s []E, v E) int
IndexFunc	vendor/golang.org/x/exp/slices/slices.go	/^func IndexFunc[E any](s []E, f func(E) bool) int {$/;"	f	package:slices	typeref:typename:(s []E, f func(E) bool) int
Index_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Index_name() IIndex_nameContext$/;"	n	interface:sqliteparser.ICreate_index_stmtContext	typeref:typename:IIndex_nameContext
Index_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Index_name() IIndex_nameContext$/;"	n	interface:sqliteparser.IQualified_table_nameContext	typeref:typename:IIndex_nameContext
Index_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Index_name() IIndex_nameContext$/;"	n	interface:sqliteparser.IReindex_stmtContext	typeref:typename:IIndex_nameContext
Index_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Index_name() IIndex_nameContext$/;"	n	interface:sqliteparser.ITable_or_subqueryContext	typeref:typename:IIndex_nameContext
Index_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Index_name() (localctx IIndex_nameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IIndex_nameContext)
Index_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) Index_name() IIndex_nameContext {$/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:IIndex_nameContext
Index_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Qualified_table_nameContext) Index_name() IIndex_nameContext {$/;"	f	struct:sqliteparser.Qualified_table_nameContext	typeref:typename:IIndex_nameContext
Index_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Reindex_stmtContext) Index_name() IIndex_nameContext {$/;"	f	struct:sqliteparser.Reindex_stmtContext	typeref:typename:IIndex_nameContext
Index_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) Index_name() IIndex_nameContext {$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:IIndex_nameContext
Index_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Index_nameContext struct {$/;"	s	package:sqliteparser
Indexed_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Indexed_column(i int) IIndexed_columnContext$/;"	n	interface:sqliteparser.ICreate_index_stmtContext	typeref:typename:IIndexed_columnContext
Indexed_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Indexed_column(i int) IIndexed_columnContext$/;"	n	interface:sqliteparser.ITable_constraintContext	typeref:typename:IIndexed_columnContext
Indexed_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Indexed_column(i int) IIndexed_columnContext$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:IIndexed_columnContext
Indexed_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Indexed_column() (localctx IIndexed_columnContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IIndexed_columnContext)
Indexed_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) Indexed_column(i int) IIndexed_columnContext {$/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:IIndexed_columnContext
Indexed_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) Indexed_column(i int) IIndexed_columnContext {$/;"	f	struct:sqliteparser.Table_constraintContext	typeref:typename:IIndexed_columnContext
Indexed_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) Indexed_column(i int) IIndexed_columnContext {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:IIndexed_columnContext
Indexed_columnContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Indexed_columnContext struct {$/;"	s	package:sqliteparser
Initial_select	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Initial_select() IInitial_selectContext$/;"	n	interface:sqliteparser.IRecursive_cteContext	typeref:typename:IInitial_selectContext
Initial_select	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Initial_select() (localctx IInitial_selectContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IInitial_selectContext)
Initial_select	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Recursive_cteContext) Initial_select() IInitial_selectContext {$/;"	f	struct:sqliteparser.Recursive_cteContext	typeref:typename:IInitial_selectContext
Initial_selectContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Initial_selectContext struct {$/;"	s	package:sqliteparser
InitializeProgram	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) InitializeProgram(name string) []RewriteOperation {$/;"	f	struct:antlr.TokenStreamRewriter	typeref:typename:[]RewriteOperation
InputMisMatchException	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^type InputMisMatchException struct {$/;"	s	package:antlr
InputStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/file_stream.go	/^	*InputStream$/;"	M	struct:antlr.FileStream	typeref:typename:*InputStream
InputStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/input_stream.go	/^type InputStream struct {$/;"	s	package:antlr
InsecureSkipVerify	vendor/nhooyr.io/websocket/accept.go	/^	InsecureSkipVerify bool$/;"	m	struct:websocket.AcceptOptions	typeref:typename:bool
InsecureSkipVerify	vendor/nhooyr.io/websocket/accept_js.go	/^	InsecureSkipVerify   bool$/;"	m	struct:websocket.AcceptOptions	typeref:typename:bool
Insert	vendor/golang.org/x/exp/slices/slices.go	/^func Insert[S ~[]E, E any](s S, i int, v ...E) S {$/;"	f	package:slices	typeref:typename:(s S, i int, v ...E) S
InsertAfter	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) InsertAfter(program_name string, index int, text string) {$/;"	f	struct:antlr.TokenStreamRewriter
InsertAfterDefault	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) InsertAfterDefault(index int, text string) {$/;"	f	struct:antlr.TokenStreamRewriter
InsertAfterOp	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^type InsertAfterOp struct {$/;"	s	package:antlr
InsertAfterToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) InsertAfterToken(program_name string, token Token, text string) /;"	f	struct:antlr.TokenStreamRewriter
InsertBefore	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) InsertBefore(program_name string, index int, text string) {$/;"	f	struct:antlr.TokenStreamRewriter
InsertBeforeDefault	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) InsertBeforeDefault(index int, text string) {$/;"	f	struct:antlr.TokenStreamRewriter
InsertBeforeOp	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^type InsertBeforeOp struct {$/;"	s	package:antlr
InsertBeforeToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) InsertBeforeToken(program_name string, token Token, text string)/;"	f	struct:antlr.TokenStreamRewriter
InsertRoute	vendor/github.com/go-chi/chi/tree.go	/^func (n *node) InsertRoute(method methodTyp, pattern string, handler http.Handler) *node {$/;"	f	struct:chi.node	typeref:typename:*node
Insert_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Insert_stmt() IInsert_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:IInsert_stmtContext
Insert_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Insert_stmt(i int) IInsert_stmtContext$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:IInsert_stmtContext
Insert_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Insert_stmt() (localctx IInsert_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IInsert_stmtContext)
Insert_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) Insert_stmt(i int) IInsert_stmtContext {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:IInsert_stmtContext
Insert_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Insert_stmt() IInsert_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:IInsert_stmtContext
Insert_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Insert_stmtContext struct {$/;"	s	package:sqliteparser
Install	vendor/github.com/go-chi/chi/README.md	/^## Install$/;"	s	chapter:<img alt="chi" src="https://cdn.rawgit.com/go-chi/chi/master/_examples/chi.svg" width="220" />
Install	vendor/github.com/google/uuid/README.md	/^###### Install$/;"	u	chapter:uuid ![build status](https://travis-ci.org/google/uuid.svg?branch=master)
Install	vendor/nhooyr.io/websocket/README.md	/^## Install$/;"	s	chapter:websocket
Installation	vendor/github.com/joho/godotenv/README.md	/^## Installation$/;"	s	chapter:GoDotEnv ![CI](https://github.com/joho/godotenv/workflows/CI/badge.svg) [![Go Report Card](https://goreportcard.com/badge/github.com/joho/godotenv)](https://goreportcard.com/report/github.com/joho/godotenv)
Int64	vendor/nhooyr.io/websocket/internal/xsync/int64.go	/^type Int64 struct {$/;"	s	package:xsync
IntStack	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^type IntStack []int$/;"	t	package:antlr	typeref:typename:[]int
IntStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/int_stream.go	/^type IntStream interface {$/;"	i	package:antlr
Integer	vendor/golang.org/x/exp/constraints/constraints.go	/^type Integer interface {$/;"	i	package:constraints
InternalError	vendor/github.com/klauspost/compress/flate/inflate.go	/^type InternalError string$/;"	t	package:flate	typeref:typename:string
Interpreter	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	Interpreter         ILexerATNSimulator$/;"	m	struct:antlr.BaseLexer	typeref:typename:ILexerATNSimulator
Interpreter	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	Interpreter     *ParserATNSimulator$/;"	m	struct:antlr.BaseParser	typeref:typename:*ParserATNSimulator
InterpreterRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^type InterpreterRuleContext interface {$/;"	i	package:antlr
Interval	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^type Interval struct {$/;"	s	package:antlr
IntervalSet	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^type IntervalSet struct {$/;"	s	package:antlr
Invalid	vendor/github.com/google/uuid/uuid.go	/^	Invalid   = Variant(iota) \/\/ Invalid UUID$/;"	c	package:uuid
IsAggregate_funcContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsAggregate_funcContext()$/;"	n	interface:sqliteparser.IAggregate_funcContext
IsAggregate_funcContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Aggregate_funcContext) IsAggregate_funcContext() {}$/;"	f	struct:sqliteparser.Aggregate_funcContext
IsAggregate_function_invocationContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsAggregate_function_invocationContext()$/;"	n	interface:sqliteparser.IAggregate_function_invocationContext
IsAggregate_function_invocationContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Aggregate_function_invocationContext) IsAggregate_function_invocationContext() {}$/;"	f	struct:sqliteparser.Aggregate_function_invocationContext
IsAliasContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsAliasContext()$/;"	n	interface:sqliteparser.IAliasContext
IsAliasContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*AliasContext) IsAliasContext() {}$/;"	f	struct:sqliteparser.AliasContext
IsAlter_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsAlter_table_stmtContext()$/;"	n	interface:sqliteparser.IAlter_table_stmtContext
IsAlter_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Alter_table_stmtContext) IsAlter_table_stmtContext() {}$/;"	f	struct:sqliteparser.Alter_table_stmtContext
IsAnalyze_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsAnalyze_stmtContext()$/;"	n	interface:sqliteparser.IAnalyze_stmtContext
IsAnalyze_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Analyze_stmtContext) IsAnalyze_stmtContext() {}$/;"	f	struct:sqliteparser.Analyze_stmtContext
IsAny_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsAny_nameContext()$/;"	n	interface:sqliteparser.IAny_nameContext
IsAny_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Any_nameContext) IsAny_nameContext() {}$/;"	f	struct:sqliteparser.Any_nameContext
IsAsc_descContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsAsc_descContext()$/;"	n	interface:sqliteparser.IAsc_descContext
IsAsc_descContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Asc_descContext) IsAsc_descContext() {}$/;"	f	struct:sqliteparser.Asc_descContext
IsAttach_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsAttach_stmtContext()$/;"	n	interface:sqliteparser.IAttach_stmtContext
IsAttach_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Attach_stmtContext) IsAttach_stmtContext() {}$/;"	f	struct:sqliteparser.Attach_stmtContext
IsBase_window_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsBase_window_nameContext()$/;"	n	interface:sqliteparser.IBase_window_nameContext
IsBase_window_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Base_window_nameContext) IsBase_window_nameContext() {}$/;"	f	struct:sqliteparser.Base_window_nameContext
IsBegin_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsBegin_stmtContext()$/;"	n	interface:sqliteparser.IBegin_stmtContext
IsBegin_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Begin_stmtContext) IsBegin_stmtContext() {}$/;"	f	struct:sqliteparser.Begin_stmtContext
IsCollation_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsCollation_nameContext()$/;"	n	interface:sqliteparser.ICollation_nameContext
IsCollation_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Collation_nameContext) IsCollation_nameContext() {}$/;"	f	struct:sqliteparser.Collation_nameContext
IsColumn_aliasContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsColumn_aliasContext()$/;"	n	interface:sqliteparser.IColumn_aliasContext
IsColumn_aliasContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Column_aliasContext) IsColumn_aliasContext() {}$/;"	f	struct:sqliteparser.Column_aliasContext
IsColumn_constraintContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsColumn_constraintContext()$/;"	n	interface:sqliteparser.IColumn_constraintContext
IsColumn_constraintContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Column_constraintContext) IsColumn_constraintContext() {}$/;"	f	struct:sqliteparser.Column_constraintContext
IsColumn_defContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsColumn_defContext()$/;"	n	interface:sqliteparser.IColumn_defContext
IsColumn_defContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Column_defContext) IsColumn_defContext() {}$/;"	f	struct:sqliteparser.Column_defContext
IsColumn_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsColumn_nameContext()$/;"	n	interface:sqliteparser.IColumn_nameContext
IsColumn_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Column_nameContext) IsColumn_nameContext() {}$/;"	f	struct:sqliteparser.Column_nameContext
IsColumn_name_listContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsColumn_name_listContext()$/;"	n	interface:sqliteparser.IColumn_name_listContext
IsColumn_name_listContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Column_name_listContext) IsColumn_name_listContext() {}$/;"	f	struct:sqliteparser.Column_name_listContext
IsCommit_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsCommit_stmtContext()$/;"	n	interface:sqliteparser.ICommit_stmtContext
IsCommit_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Commit_stmtContext) IsCommit_stmtContext() {}$/;"	f	struct:sqliteparser.Commit_stmtContext
IsCommon_table_expressionContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsCommon_table_expressionContext()$/;"	n	interface:sqliteparser.ICommon_table_expressionContext
IsCommon_table_expressionContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Common_table_expressionContext) IsCommon_table_expressionContext() {}$/;"	f	struct:sqliteparser.Common_table_expressionContext
IsCommon_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsCommon_table_stmtContext()$/;"	n	interface:sqliteparser.ICommon_table_stmtContext
IsCommon_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Common_table_stmtContext) IsCommon_table_stmtContext() {}$/;"	f	struct:sqliteparser.Common_table_stmtContext
IsCompound_operatorContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsCompound_operatorContext()$/;"	n	interface:sqliteparser.ICompound_operatorContext
IsCompound_operatorContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Compound_operatorContext) IsCompound_operatorContext() {}$/;"	f	struct:sqliteparser.Compound_operatorContext
IsCompound_select_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsCompound_select_stmtContext()$/;"	n	interface:sqliteparser.ICompound_select_stmtContext
IsCompound_select_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Compound_select_stmtContext) IsCompound_select_stmtContext() {}$/;"	f	struct:sqliteparser.Compound_select_stmtContext
IsConflict_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsConflict_clauseContext()$/;"	n	interface:sqliteparser.IConflict_clauseContext
IsConflict_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Conflict_clauseContext) IsConflict_clauseContext() {}$/;"	f	struct:sqliteparser.Conflict_clauseContext
IsCreate_index_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsCreate_index_stmtContext()$/;"	n	interface:sqliteparser.ICreate_index_stmtContext
IsCreate_index_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Create_index_stmtContext) IsCreate_index_stmtContext() {}$/;"	f	struct:sqliteparser.Create_index_stmtContext
IsCreate_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsCreate_table_stmtContext()$/;"	n	interface:sqliteparser.ICreate_table_stmtContext
IsCreate_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Create_table_stmtContext) IsCreate_table_stmtContext() {}$/;"	f	struct:sqliteparser.Create_table_stmtContext
IsCreate_trigger_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsCreate_trigger_stmtContext()$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext
IsCreate_trigger_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Create_trigger_stmtContext) IsCreate_trigger_stmtContext() {}$/;"	f	struct:sqliteparser.Create_trigger_stmtContext
IsCreate_view_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsCreate_view_stmtContext()$/;"	n	interface:sqliteparser.ICreate_view_stmtContext
IsCreate_view_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Create_view_stmtContext) IsCreate_view_stmtContext() {}$/;"	f	struct:sqliteparser.Create_view_stmtContext
IsCreate_virtual_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsCreate_virtual_table_stmtContext()$/;"	n	interface:sqliteparser.ICreate_virtual_table_stmtContext
IsCreate_virtual_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Create_virtual_table_stmtContext) IsCreate_virtual_table_stmtContext() {}$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext
IsCte_table_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsCte_table_nameContext()$/;"	n	interface:sqliteparser.ICte_table_nameContext
IsCte_table_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Cte_table_nameContext) IsCte_table_nameContext() {}$/;"	f	struct:sqliteparser.Cte_table_nameContext
IsDefault_valueContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsDefault_valueContext()$/;"	n	interface:sqliteparser.IDefault_valueContext
IsDefault_valueContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Default_valueContext) IsDefault_valueContext() {}$/;"	f	struct:sqliteparser.Default_valueContext
IsDelete_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsDelete_stmtContext()$/;"	n	interface:sqliteparser.IDelete_stmtContext
IsDelete_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Delete_stmtContext) IsDelete_stmtContext() {}$/;"	f	struct:sqliteparser.Delete_stmtContext
IsDelete_stmt_limitedContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsDelete_stmt_limitedContext()$/;"	n	interface:sqliteparser.IDelete_stmt_limitedContext
IsDelete_stmt_limitedContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Delete_stmt_limitedContext) IsDelete_stmt_limitedContext() {}$/;"	f	struct:sqliteparser.Delete_stmt_limitedContext
IsDetach_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsDetach_stmtContext()$/;"	n	interface:sqliteparser.IDetach_stmtContext
IsDetach_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Detach_stmtContext) IsDetach_stmtContext() {}$/;"	f	struct:sqliteparser.Detach_stmtContext
IsDrop_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsDrop_stmtContext()$/;"	n	interface:sqliteparser.IDrop_stmtContext
IsDrop_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Drop_stmtContext) IsDrop_stmtContext() {}$/;"	f	struct:sqliteparser.Drop_stmtContext
IsEmpty	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	IsEmpty() bool$/;"	n	interface:antlr.ATNConfigSet	typeref:typename:bool
IsEmpty	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) IsEmpty() bool {$/;"	f	struct:antlr.BaseATNConfigSet	typeref:typename:bool
IsEmpty	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^	IsEmpty() bool$/;"	n	interface:antlr.RuleContext	typeref:typename:bool
IsEmpty	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^func (b *BaseRuleContext) IsEmpty() bool {$/;"	f	struct:antlr.BaseRuleContext	typeref:typename:bool
IsError_messageContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsError_messageContext()$/;"	n	interface:sqliteparser.IError_messageContext
IsError_messageContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Error_messageContext) IsError_messageContext() {}$/;"	f	struct:sqliteparser.Error_messageContext
IsExpectedToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	IsExpectedToken(int) bool$/;"	n	interface:antlr.Parser	typeref:typename:bool
IsExpectedToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) IsExpectedToken(symbol int) bool {$/;"	f	struct:antlr.BaseParser	typeref:typename:bool
IsExprContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsExprContext()$/;"	n	interface:sqliteparser.IExprContext
IsExprContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*ExprContext) IsExprContext() {}$/;"	f	struct:sqliteparser.ExprContext
IsExpr_asc_descContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsExpr_asc_descContext()$/;"	n	interface:sqliteparser.IExpr_asc_descContext
IsExpr_asc_descContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Expr_asc_descContext) IsExpr_asc_descContext() {}$/;"	f	struct:sqliteparser.Expr_asc_descContext
IsFactored_select_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsFactored_select_stmtContext()$/;"	n	interface:sqliteparser.IFactored_select_stmtContext
IsFactored_select_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Factored_select_stmtContext) IsFactored_select_stmtContext() {}$/;"	f	struct:sqliteparser.Factored_select_stmtContext
IsFilenameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsFilenameContext()$/;"	n	interface:sqliteparser.IFilenameContext
IsFilenameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*FilenameContext) IsFilenameContext() {}$/;"	f	struct:sqliteparser.FilenameContext
IsFilter_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsFilter_clauseContext()$/;"	n	interface:sqliteparser.IFilter_clauseContext
IsFilter_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Filter_clauseContext) IsFilter_clauseContext() {}$/;"	f	struct:sqliteparser.Filter_clauseContext
IsForeign_key_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsForeign_key_clauseContext()$/;"	n	interface:sqliteparser.IForeign_key_clauseContext
IsForeign_key_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Foreign_key_clauseContext) IsForeign_key_clauseContext() {}$/;"	f	struct:sqliteparser.Foreign_key_clauseContext
IsForeign_tableContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsForeign_tableContext()$/;"	n	interface:sqliteparser.IForeign_tableContext
IsForeign_tableContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Foreign_tableContext) IsForeign_tableContext() {}$/;"	f	struct:sqliteparser.Foreign_tableContext
IsFrame_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsFrame_clauseContext()$/;"	n	interface:sqliteparser.IFrame_clauseContext
IsFrame_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Frame_clauseContext) IsFrame_clauseContext() {}$/;"	f	struct:sqliteparser.Frame_clauseContext
IsFrame_leftContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsFrame_leftContext()$/;"	n	interface:sqliteparser.IFrame_leftContext
IsFrame_leftContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Frame_leftContext) IsFrame_leftContext() {}$/;"	f	struct:sqliteparser.Frame_leftContext
IsFrame_rightContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsFrame_rightContext()$/;"	n	interface:sqliteparser.IFrame_rightContext
IsFrame_rightContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Frame_rightContext) IsFrame_rightContext() {}$/;"	f	struct:sqliteparser.Frame_rightContext
IsFrame_singleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsFrame_singleContext()$/;"	n	interface:sqliteparser.IFrame_singleContext
IsFrame_singleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Frame_singleContext) IsFrame_singleContext() {}$/;"	f	struct:sqliteparser.Frame_singleContext
IsFrame_specContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsFrame_specContext()$/;"	n	interface:sqliteparser.IFrame_specContext
IsFrame_specContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Frame_specContext) IsFrame_specContext() {}$/;"	f	struct:sqliteparser.Frame_specContext
IsFunction_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsFunction_nameContext()$/;"	n	interface:sqliteparser.IFunction_nameContext
IsFunction_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Function_nameContext) IsFunction_nameContext() {}$/;"	f	struct:sqliteparser.Function_nameContext
IsIndex_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsIndex_nameContext()$/;"	n	interface:sqliteparser.IIndex_nameContext
IsIndex_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Index_nameContext) IsIndex_nameContext() {}$/;"	f	struct:sqliteparser.Index_nameContext
IsIndexed_columnContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsIndexed_columnContext()$/;"	n	interface:sqliteparser.IIndexed_columnContext
IsIndexed_columnContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Indexed_columnContext) IsIndexed_columnContext() {}$/;"	f	struct:sqliteparser.Indexed_columnContext
IsInitial_selectContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsInitial_selectContext()$/;"	n	interface:sqliteparser.IInitial_selectContext
IsInitial_selectContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Initial_selectContext) IsInitial_selectContext() {}$/;"	f	struct:sqliteparser.Initial_selectContext
IsInsert_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsInsert_stmtContext()$/;"	n	interface:sqliteparser.IInsert_stmtContext
IsInsert_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Insert_stmtContext) IsInsert_stmtContext() {}$/;"	f	struct:sqliteparser.Insert_stmtContext
IsInvalidLengthError	vendor/github.com/google/uuid/uuid.go	/^func IsInvalidLengthError(err error) bool {$/;"	f	package:uuid	typeref:typename:bool
IsJoin_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsJoin_clauseContext()$/;"	n	interface:sqliteparser.IJoin_clauseContext
IsJoin_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Join_clauseContext) IsJoin_clauseContext() {}$/;"	f	struct:sqliteparser.Join_clauseContext
IsJoin_constraintContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsJoin_constraintContext()$/;"	n	interface:sqliteparser.IJoin_constraintContext
IsJoin_constraintContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Join_constraintContext) IsJoin_constraintContext() {}$/;"	f	struct:sqliteparser.Join_constraintContext
IsJoin_operatorContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsJoin_operatorContext()$/;"	n	interface:sqliteparser.IJoin_operatorContext
IsJoin_operatorContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Join_operatorContext) IsJoin_operatorContext() {}$/;"	f	struct:sqliteparser.Join_operatorContext
IsKeywordContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsKeywordContext()$/;"	n	interface:sqliteparser.IKeywordContext
IsKeywordContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*KeywordContext) IsKeywordContext() {}$/;"	f	struct:sqliteparser.KeywordContext
IsLimit_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsLimit_stmtContext()$/;"	n	interface:sqliteparser.ILimit_stmtContext
IsLimit_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Limit_stmtContext) IsLimit_stmtContext() {}$/;"	f	struct:sqliteparser.Limit_stmtContext
IsLiteral_valueContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsLiteral_valueContext()$/;"	n	interface:sqliteparser.ILiteral_valueContext
IsLiteral_valueContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Literal_valueContext) IsLiteral_valueContext() {}$/;"	f	struct:sqliteparser.Literal_valueContext
IsModule_argumentContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsModule_argumentContext()$/;"	n	interface:sqliteparser.IModule_argumentContext
IsModule_argumentContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Module_argumentContext) IsModule_argumentContext() {}$/;"	f	struct:sqliteparser.Module_argumentContext
IsModule_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsModule_nameContext()$/;"	n	interface:sqliteparser.IModule_nameContext
IsModule_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Module_nameContext) IsModule_nameContext() {}$/;"	f	struct:sqliteparser.Module_nameContext
IsNameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsNameContext()$/;"	n	interface:sqliteparser.INameContext
IsNameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*NameContext) IsNameContext() {}$/;"	f	struct:sqliteparser.NameContext
IsOffsetContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsOffsetContext()$/;"	n	interface:sqliteparser.IOffsetContext
IsOffsetContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*OffsetContext) IsOffsetContext() {}$/;"	f	struct:sqliteparser.OffsetContext
IsOrder_by_exprContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsOrder_by_exprContext()$/;"	n	interface:sqliteparser.IOrder_by_exprContext
IsOrder_by_exprContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Order_by_exprContext) IsOrder_by_exprContext() {}$/;"	f	struct:sqliteparser.Order_by_exprContext
IsOrder_by_expr_asc_descContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsOrder_by_expr_asc_descContext()$/;"	n	interface:sqliteparser.IOrder_by_expr_asc_descContext
IsOrder_by_expr_asc_descContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Order_by_expr_asc_descContext) IsOrder_by_expr_asc_descContext() {}$/;"	f	struct:sqliteparser.Order_by_expr_asc_descContext
IsOrder_by_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsOrder_by_stmtContext()$/;"	n	interface:sqliteparser.IOrder_by_stmtContext
IsOrder_by_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Order_by_stmtContext) IsOrder_by_stmtContext() {}$/;"	f	struct:sqliteparser.Order_by_stmtContext
IsOrdering_termContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsOrdering_termContext()$/;"	n	interface:sqliteparser.IOrdering_termContext
IsOrdering_termContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Ordering_termContext) IsOrdering_termContext() {}$/;"	f	struct:sqliteparser.Ordering_termContext
IsOver_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsOver_clauseContext()$/;"	n	interface:sqliteparser.IOver_clauseContext
IsOver_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Over_clauseContext) IsOver_clauseContext() {}$/;"	f	struct:sqliteparser.Over_clauseContext
IsParseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsParseContext()$/;"	n	interface:sqliteparser.IParseContext
IsParseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*ParseContext) IsParseContext() {}$/;"	f	struct:sqliteparser.ParseContext
IsPartition_byContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsPartition_byContext()$/;"	n	interface:sqliteparser.IPartition_byContext
IsPartition_byContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Partition_byContext) IsPartition_byContext() {}$/;"	f	struct:sqliteparser.Partition_byContext
IsPragma_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsPragma_nameContext()$/;"	n	interface:sqliteparser.IPragma_nameContext
IsPragma_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Pragma_nameContext) IsPragma_nameContext() {}$/;"	f	struct:sqliteparser.Pragma_nameContext
IsPragma_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsPragma_stmtContext()$/;"	n	interface:sqliteparser.IPragma_stmtContext
IsPragma_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Pragma_stmtContext) IsPragma_stmtContext() {}$/;"	f	struct:sqliteparser.Pragma_stmtContext
IsPragma_valueContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsPragma_valueContext()$/;"	n	interface:sqliteparser.IPragma_valueContext
IsPragma_valueContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Pragma_valueContext) IsPragma_valueContext() {}$/;"	f	struct:sqliteparser.Pragma_valueContext
IsQualified_table_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsQualified_table_nameContext()$/;"	n	interface:sqliteparser.IQualified_table_nameContext
IsQualified_table_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Qualified_table_nameContext) IsQualified_table_nameContext() {}$/;"	f	struct:sqliteparser.Qualified_table_nameContext
IsRaise_functionContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsRaise_functionContext()$/;"	n	interface:sqliteparser.IRaise_functionContext
IsRaise_functionContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Raise_functionContext) IsRaise_functionContext() {}$/;"	f	struct:sqliteparser.Raise_functionContext
IsRecursive_cteContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsRecursive_cteContext()$/;"	n	interface:sqliteparser.IRecursive_cteContext
IsRecursive_cteContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Recursive_cteContext) IsRecursive_cteContext() {}$/;"	f	struct:sqliteparser.Recursive_cteContext
IsRecursive_selectContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsRecursive_selectContext()$/;"	n	interface:sqliteparser.IRecursive_selectContext
IsRecursive_selectContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Recursive_selectContext) IsRecursive_selectContext() {}$/;"	f	struct:sqliteparser.Recursive_selectContext
IsReindex_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsReindex_stmtContext()$/;"	n	interface:sqliteparser.IReindex_stmtContext
IsReindex_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Reindex_stmtContext) IsReindex_stmtContext() {}$/;"	f	struct:sqliteparser.Reindex_stmtContext
IsRelease_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsRelease_stmtContext()$/;"	n	interface:sqliteparser.IRelease_stmtContext
IsRelease_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Release_stmtContext) IsRelease_stmtContext() {}$/;"	f	struct:sqliteparser.Release_stmtContext
IsResult_columnContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsResult_columnContext()$/;"	n	interface:sqliteparser.IResult_columnContext
IsResult_columnContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Result_columnContext) IsResult_columnContext() {}$/;"	f	struct:sqliteparser.Result_columnContext
IsReturning_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsReturning_clauseContext()$/;"	n	interface:sqliteparser.IReturning_clauseContext
IsReturning_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Returning_clauseContext) IsReturning_clauseContext() {}$/;"	f	struct:sqliteparser.Returning_clauseContext
IsRollback_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsRollback_stmtContext()$/;"	n	interface:sqliteparser.IRollback_stmtContext
IsRollback_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Rollback_stmtContext) IsRollback_stmtContext() {}$/;"	f	struct:sqliteparser.Rollback_stmtContext
IsSavepoint_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsSavepoint_nameContext()$/;"	n	interface:sqliteparser.ISavepoint_nameContext
IsSavepoint_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Savepoint_nameContext) IsSavepoint_nameContext() {}$/;"	f	struct:sqliteparser.Savepoint_nameContext
IsSavepoint_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsSavepoint_stmtContext()$/;"	n	interface:sqliteparser.ISavepoint_stmtContext
IsSavepoint_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Savepoint_stmtContext) IsSavepoint_stmtContext() {}$/;"	f	struct:sqliteparser.Savepoint_stmtContext
IsSchema_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsSchema_nameContext()$/;"	n	interface:sqliteparser.ISchema_nameContext
IsSchema_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Schema_nameContext) IsSchema_nameContext() {}$/;"	f	struct:sqliteparser.Schema_nameContext
IsSelect_coreContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsSelect_coreContext()$/;"	n	interface:sqliteparser.ISelect_coreContext
IsSelect_coreContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Select_coreContext) IsSelect_coreContext() {}$/;"	f	struct:sqliteparser.Select_coreContext
IsSelect_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsSelect_stmtContext()$/;"	n	interface:sqliteparser.ISelect_stmtContext
IsSelect_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Select_stmtContext) IsSelect_stmtContext() {}$/;"	f	struct:sqliteparser.Select_stmtContext
IsSigned_numberContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsSigned_numberContext()$/;"	n	interface:sqliteparser.ISigned_numberContext
IsSigned_numberContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Signed_numberContext) IsSigned_numberContext() {}$/;"	f	struct:sqliteparser.Signed_numberContext
IsSimple_funcContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsSimple_funcContext()$/;"	n	interface:sqliteparser.ISimple_funcContext
IsSimple_funcContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Simple_funcContext) IsSimple_funcContext() {}$/;"	f	struct:sqliteparser.Simple_funcContext
IsSimple_function_invocationContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsSimple_function_invocationContext()$/;"	n	interface:sqliteparser.ISimple_function_invocationContext
IsSimple_function_invocationContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Simple_function_invocationContext) IsSimple_function_invocationContext() {}$/;"	f	struct:sqliteparser.Simple_function_invocationContext
IsSimple_select_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsSimple_select_stmtContext()$/;"	n	interface:sqliteparser.ISimple_select_stmtContext
IsSimple_select_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Simple_select_stmtContext) IsSimple_select_stmtContext() {}$/;"	f	struct:sqliteparser.Simple_select_stmtContext
IsSorted	vendor/golang.org/x/exp/slices/sort.go	/^func IsSorted[E constraints.Ordered](x []E) bool {$/;"	f	package:slices	typeref:typename:(x []E) bool
IsSortedFunc	vendor/golang.org/x/exp/slices/sort.go	/^func IsSortedFunc[E any](x []E, less func(a, b E) bool) bool {$/;"	f	package:slices	typeref:typename:(x []E, less func(a, b E) bool) bool
IsSql_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsSql_stmtContext()$/;"	n	interface:sqliteparser.ISql_stmtContext
IsSql_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Sql_stmtContext) IsSql_stmtContext() {}$/;"	f	struct:sqliteparser.Sql_stmtContext
IsSql_stmt_listContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsSql_stmt_listContext()$/;"	n	interface:sqliteparser.ISql_stmt_listContext
IsSql_stmt_listContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Sql_stmt_listContext) IsSql_stmt_listContext() {}$/;"	f	struct:sqliteparser.Sql_stmt_listContext
IsTable_aliasContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsTable_aliasContext()$/;"	n	interface:sqliteparser.ITable_aliasContext
IsTable_aliasContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Table_aliasContext) IsTable_aliasContext() {}$/;"	f	struct:sqliteparser.Table_aliasContext
IsTable_constraintContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsTable_constraintContext()$/;"	n	interface:sqliteparser.ITable_constraintContext
IsTable_constraintContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Table_constraintContext) IsTable_constraintContext() {}$/;"	f	struct:sqliteparser.Table_constraintContext
IsTable_function_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsTable_function_nameContext()$/;"	n	interface:sqliteparser.ITable_function_nameContext
IsTable_function_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Table_function_nameContext) IsTable_function_nameContext() {}$/;"	f	struct:sqliteparser.Table_function_nameContext
IsTable_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsTable_nameContext()$/;"	n	interface:sqliteparser.ITable_nameContext
IsTable_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Table_nameContext) IsTable_nameContext() {}$/;"	f	struct:sqliteparser.Table_nameContext
IsTable_or_index_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsTable_or_index_nameContext()$/;"	n	interface:sqliteparser.ITable_or_index_nameContext
IsTable_or_index_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Table_or_index_nameContext) IsTable_or_index_nameContext() {}$/;"	f	struct:sqliteparser.Table_or_index_nameContext
IsTable_or_subqueryContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsTable_or_subqueryContext()$/;"	n	interface:sqliteparser.ITable_or_subqueryContext
IsTable_or_subqueryContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Table_or_subqueryContext) IsTable_or_subqueryContext() {}$/;"	f	struct:sqliteparser.Table_or_subqueryContext
IsTransaction_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsTransaction_nameContext()$/;"	n	interface:sqliteparser.ITransaction_nameContext
IsTransaction_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Transaction_nameContext) IsTransaction_nameContext() {}$/;"	f	struct:sqliteparser.Transaction_nameContext
IsTrigger_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsTrigger_nameContext()$/;"	n	interface:sqliteparser.ITrigger_nameContext
IsTrigger_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Trigger_nameContext) IsTrigger_nameContext() {}$/;"	f	struct:sqliteparser.Trigger_nameContext
IsType_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsType_nameContext()$/;"	n	interface:sqliteparser.IType_nameContext
IsType_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Type_nameContext) IsType_nameContext() {}$/;"	f	struct:sqliteparser.Type_nameContext
IsUnary_operatorContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsUnary_operatorContext()$/;"	n	interface:sqliteparser.IUnary_operatorContext
IsUnary_operatorContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Unary_operatorContext) IsUnary_operatorContext() {}$/;"	f	struct:sqliteparser.Unary_operatorContext
IsUpdate_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsUpdate_stmtContext()$/;"	n	interface:sqliteparser.IUpdate_stmtContext
IsUpdate_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Update_stmtContext) IsUpdate_stmtContext() {}$/;"	f	struct:sqliteparser.Update_stmtContext
IsUpdate_stmt_limitedContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsUpdate_stmt_limitedContext()$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext
IsUpdate_stmt_limitedContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Update_stmt_limitedContext) IsUpdate_stmt_limitedContext() {}$/;"	f	struct:sqliteparser.Update_stmt_limitedContext
IsUpsert_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsUpsert_clauseContext()$/;"	n	interface:sqliteparser.IUpsert_clauseContext
IsUpsert_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Upsert_clauseContext) IsUpsert_clauseContext() {}$/;"	f	struct:sqliteparser.Upsert_clauseContext
IsVacuum_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsVacuum_stmtContext()$/;"	n	interface:sqliteparser.IVacuum_stmtContext
IsVacuum_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Vacuum_stmtContext) IsVacuum_stmtContext() {}$/;"	f	struct:sqliteparser.Vacuum_stmtContext
IsValue_rowContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsValue_rowContext()$/;"	n	interface:sqliteparser.IValue_rowContext
IsValue_rowContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Value_rowContext) IsValue_rowContext() {}$/;"	f	struct:sqliteparser.Value_rowContext
IsValues_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsValues_clauseContext()$/;"	n	interface:sqliteparser.IValues_clauseContext
IsValues_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Values_clauseContext) IsValues_clauseContext() {}$/;"	f	struct:sqliteparser.Values_clauseContext
IsView_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsView_nameContext()$/;"	n	interface:sqliteparser.IView_nameContext
IsView_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*View_nameContext) IsView_nameContext() {}$/;"	f	struct:sqliteparser.View_nameContext
IsWindow_defnContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsWindow_defnContext()$/;"	n	interface:sqliteparser.IWindow_defnContext
IsWindow_defnContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Window_defnContext) IsWindow_defnContext() {}$/;"	f	struct:sqliteparser.Window_defnContext
IsWindow_functionContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsWindow_functionContext()$/;"	n	interface:sqliteparser.IWindow_functionContext
IsWindow_functionContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Window_functionContext) IsWindow_functionContext() {}$/;"	f	struct:sqliteparser.Window_functionContext
IsWindow_function_invocationContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsWindow_function_invocationContext()$/;"	n	interface:sqliteparser.IWindow_function_invocationContext
IsWindow_function_invocationContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Window_function_invocationContext) IsWindow_function_invocationContext() {}$/;"	f	struct:sqliteparser.Window_function_invocationContext
IsWindow_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsWindow_nameContext()$/;"	n	interface:sqliteparser.IWindow_nameContext
IsWindow_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*Window_nameContext) IsWindow_nameContext() {}$/;"	f	struct:sqliteparser.Window_nameContext
IsWith_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	IsWith_clauseContext()$/;"	n	interface:sqliteparser.IWith_clauseContext
IsWith_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (*With_clauseContext) IsWith_clauseContext() {}$/;"	f	struct:sqliteparser.With_clauseContext
JMap	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/jcollect.go	/^type JMap[K, V any, C Comparator[K]] struct {$/;"	t	package:antlr	typeref:typename:[K, V any, C Comparator[K]] struct { store map[int][]*entry[K, V]; len int; comparator Comparator[K];}
JOIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	JOIN_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IJoin_operatorContext	typeref:typename:antlr.TerminalNode
JOIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	JOIN_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
JOIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_operatorContext) JOIN_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Join_operatorContext	typeref:typename:antlr.TerminalNode
JOIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) JOIN_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
JStore	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/jcollect.go	/^type JStore[T any, C Comparator[T]] struct {$/;"	t	package:antlr	typeref:typename:[T any, C Comparator[T]] struct { store map[int][]T; len int; comparator Comparator[T];}
Join_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Join_clause() IJoin_clauseContext$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:IJoin_clauseContext
Join_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Join_clause() IJoin_clauseContext$/;"	n	interface:sqliteparser.ITable_or_subqueryContext	typeref:typename:IJoin_clauseContext
Join_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Join_clause() IJoin_clauseContext$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:IJoin_clauseContext
Join_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Join_clause() (localctx IJoin_clauseContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IJoin_clauseContext)
Join_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) Join_clause() IJoin_clauseContext {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:IJoin_clauseContext
Join_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) Join_clause() IJoin_clauseContext {$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:IJoin_clauseContext
Join_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) Join_clause() IJoin_clauseContext {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:IJoin_clauseContext
Join_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Join_clauseContext struct {$/;"	s	package:sqliteparser
Join_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Join_constraint(i int) IJoin_constraintContext$/;"	n	interface:sqliteparser.IJoin_clauseContext	typeref:typename:IJoin_constraintContext
Join_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Join_constraint() (localctx IJoin_constraintContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IJoin_constraintContext)
Join_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_clauseContext) Join_constraint(i int) IJoin_constraintContext {$/;"	f	struct:sqliteparser.Join_clauseContext	typeref:typename:IJoin_constraintContext
Join_constraintContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Join_constraintContext struct {$/;"	s	package:sqliteparser
Join_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Join_operator(i int) IJoin_operatorContext$/;"	n	interface:sqliteparser.IJoin_clauseContext	typeref:typename:IJoin_operatorContext
Join_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Join_operator() (localctx IJoin_operatorContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IJoin_operatorContext)
Join_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_clauseContext) Join_operator(i int) IJoin_operatorContext {$/;"	f	struct:sqliteparser.Join_clauseContext	typeref:typename:IJoin_operatorContext
Join_operatorContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Join_operatorContext struct {$/;"	s	package:sqliteparser
KEY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	KEY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:antlr.TerminalNode
KEY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	KEY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
KEY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	KEY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ITable_constraintContext	typeref:typename:antlr.TerminalNode
KEY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) KEY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:antlr.TerminalNode
KEY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) KEY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
KEY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) KEY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Table_constraintContext	typeref:typename:antlr.TerminalNode
Keys	vendor/github.com/go-chi/chi/context.go	/^	Keys, Values []string$/;"	m	struct:chi.RouteParams	typeref:typename:[]string
Keyword	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Keyword() IKeywordContext$/;"	n	interface:sqliteparser.IAny_nameContext	typeref:typename:IKeywordContext
Keyword	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Keyword() (localctx IKeywordContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IKeywordContext)
Keyword	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Any_nameContext) Keyword() IKeywordContext {$/;"	f	struct:sqliteparser.Any_nameContext	typeref:typename:IKeywordContext
KeywordContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type KeywordContext struct {$/;"	s	package:sqliteparser
LA	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) LA(i int) int {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:int
LA	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/input_stream.go	/^func (is *InputStream) LA(offset int) int {$/;"	f	struct:antlr.InputStream	typeref:typename:int
LA	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/int_stream.go	/^	LA(int) int$/;"	n	interface:antlr.IntStream	typeref:typename:int
LAG_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	LAG_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
LAG_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	LAG_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:antlr.TerminalNode
LAG_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) LAG_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
LAG_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) LAG_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:antlr.TerminalNode
LAST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	LAST_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
LAST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	LAST_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IOrdering_termContext	typeref:typename:antlr.TerminalNode
LAST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) LAST_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
LAST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Ordering_termContext) LAST_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Ordering_termContext	typeref:typename:antlr.TerminalNode
LAST_VALUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	LAST_VALUE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
LAST_VALUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	LAST_VALUE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:antlr.TerminalNode
LAST_VALUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) LAST_VALUE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
LAST_VALUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) LAST_VALUE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:antlr.TerminalNode
LB	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) LB(k int) Token {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:Token
LEAD_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	LEAD_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
LEAD_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	LEAD_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:antlr.TerminalNode
LEAD_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) LEAD_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
LEAD_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) LEAD_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:antlr.TerminalNode
LEFT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	LEFT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IJoin_operatorContext	typeref:typename:antlr.TerminalNode
LEFT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	LEFT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
LEFT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_operatorContext) LEFT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Join_operatorContext	typeref:typename:antlr.TerminalNode
LEFT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) LEFT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
LIKE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	LIKE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
LIKE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	LIKE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
LIKE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) LIKE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
LIKE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) LIKE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
LIMIT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	LIMIT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
LIMIT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	LIMIT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ILimit_stmtContext	typeref:typename:antlr.TerminalNode
LIMIT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) LIMIT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
LIMIT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Limit_stmtContext) LIMIT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Limit_stmtContext	typeref:typename:antlr.TerminalNode
LL1Analyzer	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/ll1_analyzer.go	/^type LL1Analyzer struct {$/;"	s	package:antlr
LL1AnalyzerHitPred	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/ll1_analyzer.go	/^	LL1AnalyzerHitPred = TokenInvalidType$/;"	c	package:antlr
LT	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) LT(k int) Token {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:Token
LT	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/input_stream.go	/^func (is *InputStream) LT(offset int) int {$/;"	f	struct:antlr.InputStream	typeref:typename:int
LT	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token_stream.go	/^	LT(k int) Token$/;"	n	interface:antlr.TokenStream	typeref:typename:Token
LT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	LT() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
LT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) LT() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
LT2	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	LT2() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
LT2	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) LT2() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
LT_EQ	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	LT_EQ() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
LT_EQ	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) LT_EQ() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
LastIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	LastIndex int$/;"	m	struct:antlr.ReplaceOp	typeref:typename:int
LastInsertId	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/result.go	/^func (r *result) LastInsertId() (int64, error) {$/;"	f	struct:shared.result	typeref:typename:(int64, error)
LastInsertId	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (r *result) LastInsertId() (int64, error) {$/;"	f	struct:ws.result	typeref:typename:(int64, error)
LastInsertRowId	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt_result.go	/^	LastInsertRowId  *string   `json:"last_insert_rowid"`$/;"	m	struct:hrana.StmtResult	typeref:typename:*string
LastTokenType	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparserutils/utils.go	/^	LastTokenType                    int$/;"	m	struct:sqliteparserutils.SplitStatementExtraInfo	typeref:typename:int
Legal requirements	vendor/github.com/google/uuid/CONTRIBUTING.md	/^### Legal requirements$/;"	S	chapter:How to contribute
Len	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/jcollect.go	/^func (m *JMap[K, V, C]) Len() int {$/;"	f	unknown:antlr.C	typeref:typename:int
Len	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/jcollect.go	/^func (s *JStore[T, C]) Len() int {$/;"	f	unknown:antlr.C	typeref:typename:int
Len	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^	Len() int$/;"	n	interface:antlr.Set	typeref:typename:int
Len	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^func (as *array2DHashSet) Len() int {$/;"	f	struct:antlr.array2DHashSet	typeref:typename:int
Len	vendor/github.com/go-chi/chi/tree.go	/^func (ns nodes) Len() int           { return len(ns) }$/;"	f	type:chi.nodes	typeref:typename:int
Len	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^func (p *Params) Len() int {$/;"	f	struct:shared.Params	typeref:typename:int
Length	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	Length() int$/;"	n	interface:antlr.ATNConfigSet	typeref:typename:int
Length	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) Length() int {$/;"	f	struct:antlr.BaseATNConfigSet	typeref:typename:int
Less	vendor/github.com/go-chi/chi/tree.go	/^func (ns nodes) Less(i, j int) bool { return ns[i].label < ns[j].label }$/;"	f	type:chi.nodes	typeref:typename:bool
Lexer	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^type Lexer interface {$/;"	i	package:antlr
LexerATNConfig	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^type LexerATNConfig struct {$/;"	s	package:antlr
LexerATNSimulator	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^type LexerATNSimulator struct {$/;"	s	package:antlr
LexerATNSimulatorDFADebug	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	LexerATNSimulatorDFADebug = false$/;"	v	package:antlr
LexerATNSimulatorDebug	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	LexerATNSimulatorDebug    = false$/;"	v	package:antlr
LexerATNSimulatorMatchCalls	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	LexerATNSimulatorMatchCalls = 0$/;"	v	package:antlr
LexerATNSimulatorMaxDFAEdge	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	LexerATNSimulatorMaxDFAEdge = 127 \/\/ forces unicode to stay in ATN$/;"	v	package:antlr
LexerATNSimulatorMinDFAEdge	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	LexerATNSimulatorMinDFAEdge = 0$/;"	v	package:antlr
LexerAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^type LexerAction interface {$/;"	i	package:antlr
LexerActionExecutor	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action_executor.go	/^type LexerActionExecutor struct {$/;"	s	package:antlr
LexerActionExecutorappend	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action_executor.go	/^func LexerActionExecutorappend(lexerActionExecutor *LexerActionExecutor, lexerAction LexerAction/;"	f	package:antlr	typeref:typename:*LexerActionExecutor
LexerActionTypeChannel	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	LexerActionTypeChannel  = 0 \/\/The type of a {@link LexerChannelAction} action.$/;"	c	package:antlr
LexerActionTypeCustom	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	LexerActionTypeCustom   = 1 \/\/The type of a {@link LexerCustomAction} action.$/;"	c	package:antlr
LexerActionTypeMode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	LexerActionTypeMode     = 2 \/\/The type of a {@link LexerModeAction} action.$/;"	c	package:antlr
LexerActionTypeMore	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	LexerActionTypeMore     = 3 \/\/The type of a {@link LexerMoreAction} action.$/;"	c	package:antlr
LexerActionTypePopMode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	LexerActionTypePopMode  = 4 \/\/The type of a {@link LexerPopModeAction} action.$/;"	c	package:antlr
LexerActionTypePushMode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	LexerActionTypePushMode = 5 \/\/The type of a {@link LexerPushModeAction} action.$/;"	c	package:antlr
LexerActionTypeSkip	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	LexerActionTypeSkip     = 6 \/\/The type of a {@link LexerSkipAction} action.$/;"	c	package:antlr
LexerActionTypeType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	LexerActionTypeType     = 7 \/\/The type of a {@link LexerTypeAction} action.$/;"	c	package:antlr
LexerChannelAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^type LexerChannelAction struct {$/;"	s	package:antlr
LexerCustomAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^type LexerCustomAction struct {$/;"	s	package:antlr
LexerDFASerializer	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_serializer.go	/^type LexerDFASerializer struct {$/;"	s	package:antlr
LexerDefaultMode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	LexerDefaultMode = 0$/;"	c	package:antlr
LexerDefaultTokenChannel	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	LexerDefaultTokenChannel = TokenDefaultChannel$/;"	c	package:antlr
LexerHidden	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	LexerHidden              = TokenHiddenChannel$/;"	c	package:antlr
LexerIndexedCustomAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^type LexerIndexedCustomAction struct {$/;"	s	package:antlr
LexerMaxCharValue	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	LexerMaxCharValue        = 0x10FFFF$/;"	c	package:antlr
LexerMinCharValue	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	LexerMinCharValue        = 0x0000$/;"	c	package:antlr
LexerModeAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^type LexerModeAction struct {$/;"	s	package:antlr
LexerMore	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	LexerMore        = -2$/;"	c	package:antlr
LexerMoreAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^type LexerMoreAction struct {$/;"	s	package:antlr
LexerMoreActionINSTANCE	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^var LexerMoreActionINSTANCE = NewLexerMoreAction()$/;"	v	package:antlr
LexerNoViableAltException	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^type LexerNoViableAltException struct {$/;"	s	package:antlr
LexerPopModeAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^type LexerPopModeAction struct {$/;"	s	package:antlr
LexerPopModeActionINSTANCE	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^var LexerPopModeActionINSTANCE = NewLexerPopModeAction()$/;"	v	package:antlr
LexerPushModeAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^type LexerPushModeAction struct {$/;"	s	package:antlr
LexerSkip	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	LexerSkip        = -3$/;"	c	package:antlr
LexerSkipAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^type LexerSkipAction struct {$/;"	s	package:antlr
LexerSkipActionINSTANCE	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^var LexerSkipActionINSTANCE = NewLexerSkipAction()$/;"	v	package:antlr
LexerTypeAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^type LexerTypeAction struct {$/;"	s	package:antlr
License	vendor/github.com/go-chi/chi/README.md	/^## License$/;"	s	chapter:<img alt="chi" src="https://cdn.rawgit.com/go-chi/chi/master/_examples/chi.svg" width="220" />
Limit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Limit_stmt() ILimit_stmtContext$/;"	n	interface:sqliteparser.ICompound_select_stmtContext	typeref:typename:ILimit_stmtContext
Limit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Limit_stmt() ILimit_stmtContext$/;"	n	interface:sqliteparser.IDelete_stmt_limitedContext	typeref:typename:ILimit_stmtContext
Limit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Limit_stmt() ILimit_stmtContext$/;"	n	interface:sqliteparser.ISelect_stmtContext	typeref:typename:ILimit_stmtContext
Limit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Limit_stmt() ILimit_stmtContext$/;"	n	interface:sqliteparser.ISimple_select_stmtContext	typeref:typename:ILimit_stmtContext
Limit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Limit_stmt() ILimit_stmtContext$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:ILimit_stmtContext
Limit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Limit_stmt() (localctx ILimit_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ILimit_stmtContext)
Limit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_select_stmtContext) Limit_stmt() ILimit_stmtContext {$/;"	f	struct:sqliteparser.Compound_select_stmtContext	typeref:typename:ILimit_stmtContext
Limit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmt_limitedContext) Limit_stmt() ILimit_stmtContext {$/;"	f	struct:sqliteparser.Delete_stmt_limitedContext	typeref:typename:ILimit_stmtContext
Limit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_stmtContext) Limit_stmt() ILimit_stmtContext {$/;"	f	struct:sqliteparser.Select_stmtContext	typeref:typename:ILimit_stmtContext
Limit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_select_stmtContext) Limit_stmt() ILimit_stmtContext {$/;"	f	struct:sqliteparser.Simple_select_stmtContext	typeref:typename:ILimit_stmtContext
Limit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) Limit_stmt() ILimit_stmtContext {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:ILimit_stmtContext
Limit_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Limit_stmtContext struct {$/;"	s	package:sqliteparser
Line	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	Line               int$/;"	m	struct:antlr.LexerATNSimulator	typeref:typename:int
LiteralNames	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^	LiteralNames    []string$/;"	m	struct:antlr.BaseRecognizer	typeref:typename:[]string
Literal_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Literal_value() ILiteral_valueContext$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:ILiteral_valueContext
Literal_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Literal_value() ILiteral_valueContext$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:ILiteral_valueContext
Literal_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Literal_value() (localctx ILiteral_valueContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ILiteral_valueContext)
Literal_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) Literal_value() ILiteral_valueContext {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:ILiteral_valueContext
Literal_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) Literal_value() ILiteral_valueContext {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:ILiteral_valueContext
Literal_valueContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Literal_valueContext struct {$/;"	s	package:sqliteparser
Load	vendor/github.com/joho/godotenv/godotenv.go	/^func Load(filenames ...string) (err error) {$/;"	f	package:godotenv	typeref:typename:(err error)
Load	vendor/nhooyr.io/websocket/internal/xsync/int64.go	/^func (v *Int64) Load() int64 {$/;"	f	struct:xsync.Int64	typeref:typename:int64
Local Development	README.md	/^## Local Development$/;"	s	chapter:just addin this for a lil bit of fun
LocalAddr	vendor/nhooyr.io/websocket/netconn.go	/^func (c *netConn) LocalAddr() net.Addr {$/;"	f	struct:websocket.netConn	typeref:typename:net.Addr
Log	vendor/github.com/go-chi/cors/cors.go	/^	Log Logger$/;"	m	struct:cors.Cors	typeref:typename:Logger
Logger	vendor/github.com/go-chi/cors/cors.go	/^type Logger interface {$/;"	i	package:cors
Look	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/ll1_analyzer.go	/^func (la *LL1Analyzer) Look(s, stopState ATNState, ctx RuleContext) *IntervalSet {$/;"	f	struct:antlr.LL1Analyzer	typeref:typename:*IntervalSet
LoopEndState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^type LoopEndState struct {$/;"	s	package:antlr
MATCH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	MATCH_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
MATCH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	MATCH_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
MATCH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	MATCH_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:antlr.TerminalNode
MATCH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) MATCH_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
MATCH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) MATCH_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.TerminalNode
MATCH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) MATCH_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
MINUS	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	MINUS() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
MINUS	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	MINUS() antlr.TerminalNode$/;"	n	interface:sqliteparser.ISigned_numberContext	typeref:typename:antlr.TerminalNode
MINUS	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	MINUS() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUnary_operatorContext	typeref:typename:antlr.TerminalNode
MINUS	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) MINUS() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
MINUS	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Signed_numberContext) MINUS() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Signed_numberContext	typeref:typename:antlr.TerminalNode
MINUS	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Unary_operatorContext) MINUS() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Unary_operatorContext	typeref:typename:antlr.TerminalNode
MOD	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	MOD() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
MOD	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) MOD() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
Mark	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) Mark() int {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:int
Mark	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/input_stream.go	/^func (is *InputStream) Mark() int {$/;"	f	struct:antlr.InputStream	typeref:typename:int
Mark	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/int_stream.go	/^	Mark() int$/;"	n	interface:antlr.IntStream	typeref:typename:int
Marshal	vendor/github.com/joho/godotenv/godotenv.go	/^func Marshal(envMap map[string]string) (string, error) {$/;"	f	package:godotenv	typeref:typename:(string, error)
MarshalBinary	vendor/github.com/google/uuid/marshal.go	/^func (uuid UUID) MarshalBinary() ([]byte, error) {$/;"	f	unknown:uuid.UUID	typeref:typename:([]byte, error)
MarshalBinary	vendor/github.com/google/uuid/null.go	/^func (nu NullUUID) MarshalBinary() ([]byte, error) {$/;"	f	struct:uuid.NullUUID	typeref:typename:([]byte, error)
MarshalJSON	vendor/github.com/google/uuid/null.go	/^func (nu NullUUID) MarshalJSON() ([]byte, error) {$/;"	f	struct:uuid.NullUUID	typeref:typename:([]byte, error)
MarshalJSON	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^func (p *Params) MarshalJSON() ([]byte, error) {$/;"	f	struct:shared.Params	typeref:typename:([]byte, error)
MarshalText	vendor/github.com/google/uuid/marshal.go	/^func (uuid UUID) MarshalText() ([]byte, error) {$/;"	f	unknown:uuid.UUID	typeref:typename:([]byte, error)
MarshalText	vendor/github.com/google/uuid/null.go	/^func (nu NullUUID) MarshalText() ([]byte, error) {$/;"	f	struct:uuid.NullUUID	typeref:typename:([]byte, error)
Match	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	Match(input CharStream, mode int) int$/;"	n	interface:antlr.ILexerATNSimulator	typeref:typename:int
Match	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) Match(input CharStream, mode int) int {$/;"	f	struct:antlr.LexerATNSimulator	typeref:typename:int
Match	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) Match(ttype int) Token {$/;"	f	struct:antlr.BaseParser	typeref:typename:Token
Match	vendor/github.com/go-chi/chi/chi.go	/^	Match(rctx *Context, method, path string) bool$/;"	n	interface:chi.Routes	typeref:typename:bool
Match	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) Match(rctx *Context, method, path string) bool {$/;"	f	struct:chi.Mux	typeref:typename:bool
MatchATN	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) MatchATN(input CharStream) int {$/;"	f	struct:antlr.LexerATNSimulator	typeref:typename:int
MatchCalls	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	MatchCalls         int$/;"	m	struct:antlr.LexerATNSimulator	typeref:typename:int
MatchWildcard	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) MatchWildcard() Token {$/;"	f	struct:antlr.BaseParser	typeref:typename:Token
Matches	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	Matches(int, int, int) bool$/;"	n	interface:antlr.Transition	typeref:typename:bool
Matches	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *ActionTransition) Matches(symbol, minVocabSymbol, maxVocabSymbol int) bool {$/;"	f	struct:antlr.ActionTransition	typeref:typename:bool
Matches	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *AtomTransition) Matches(symbol, minVocabSymbol, maxVocabSymbol int) bool {$/;"	f	struct:antlr.AtomTransition	typeref:typename:bool
Matches	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *BaseTransition) Matches(symbol, minVocabSymbol, maxVocabSymbol int) bool {$/;"	f	struct:antlr.BaseTransition	typeref:typename:bool
Matches	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *EpsilonTransition) Matches(symbol, minVocabSymbol, maxVocabSymbol int) bool {$/;"	f	struct:antlr.EpsilonTransition	typeref:typename:bool
Matches	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *NotSetTransition) Matches(symbol, minVocabSymbol, maxVocabSymbol int) bool {$/;"	f	struct:antlr.NotSetTransition	typeref:typename:bool
Matches	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *PrecedencePredicateTransition) Matches(symbol, minVocabSymbol, maxVocabSymbol int) bool/;"	f	struct:antlr.PrecedencePredicateTransition	typeref:typename:bool
Matches	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *PredicateTransition) Matches(symbol, minVocabSymbol, maxVocabSymbol int) bool {$/;"	f	struct:antlr.PredicateTransition	typeref:typename:bool
Matches	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *RangeTransition) Matches(symbol, minVocabSymbol, maxVocabSymbol int) bool {$/;"	f	struct:antlr.RangeTransition	typeref:typename:bool
Matches	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *RuleTransition) Matches(symbol, minVocabSymbol, maxVocabSymbol int) bool {$/;"	f	struct:antlr.RuleTransition	typeref:typename:bool
Matches	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *SetTransition) Matches(symbol, minVocabSymbol, maxVocabSymbol int) bool {$/;"	f	struct:antlr.SetTransition	typeref:typename:bool
Matches	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *WildcardTransition) Matches(symbol, minVocabSymbol, maxVocabSymbol int) bool {$/;"	f	struct:antlr.WildcardTransition	typeref:typename:bool
MaxAge	vendor/github.com/go-chi/cors/cors.go	/^	MaxAge int$/;"	m	struct:cors.Options	typeref:typename:int
Message	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_result.go	/^	Message string  `json:"message"`$/;"	m	struct:hrana.Error	typeref:typename:string
MessageBinary	vendor/nhooyr.io/websocket/conn.go	/^	MessageBinary$/;"	c	package:websocket
MessageEvent	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^type MessageEvent struct {$/;"	s	package:wsjs
MessageText	vendor/nhooyr.io/websocket/conn.go	/^	MessageText MessageType = iota + 1$/;"	c	package:websocket	typeref:type:MessageType
MessageType	vendor/nhooyr.io/websocket/conn.go	/^type MessageType int$/;"	t	package:websocket	typeref:typename:int
Method	vendor/github.com/go-chi/chi/chi.go	/^	Method(method, pattern string, h http.Handler)$/;"	n	interface:chi.Router
Method	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) Method(method, pattern string, handler http.Handler) {$/;"	f	struct:chi.Mux
MethodFunc	vendor/github.com/go-chi/chi/chi.go	/^	MethodFunc(method, pattern string, h http.HandlerFunc)$/;"	n	interface:chi.Router
MethodFunc	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) MethodFunc(method, pattern string, handlerFn http.HandlerFunc) {$/;"	f	struct:chi.Mux
MethodNotAllowed	vendor/github.com/go-chi/chi/chi.go	/^	MethodNotAllowed(h http.HandlerFunc)$/;"	n	interface:chi.Router
MethodNotAllowed	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) MethodNotAllowed(handlerFn http.HandlerFunc) {$/;"	f	struct:chi.Mux
MethodNotAllowedHandler	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) MethodNotAllowedHandler() http.HandlerFunc {$/;"	f	struct:chi.Mux	typeref:typename:http.HandlerFunc
Microsoft	vendor/github.com/google/uuid/uuid.go	/^	Microsoft                 \/\/ Reserved, Microsoft Corporation backward compatibility.$/;"	c	package:uuid
Middleware handlers	vendor/github.com/go-chi/chi/README.md	/^### Middleware handlers$/;"	S	section:<img alt="chi" src="https://cdn.rawgit.com/go-chi/chi/master/_examples/chi.svg" width="220" />""Router interface
Middlewares	vendor/github.com/go-chi/chi/README.md	/^## Middlewares$/;"	s	chapter:<img alt="chi" src="https://cdn.rawgit.com/go-chi/chi/master/_examples/chi.svg" width="220" />
Middlewares	vendor/github.com/go-chi/chi/chain.go	/^	Middlewares Middlewares$/;"	m	struct:chi.ChainHandler	typeref:typename:Middlewares
Middlewares	vendor/github.com/go-chi/chi/chi.go	/^	Middlewares() Middlewares$/;"	n	interface:chi.Routes	typeref:typename:Middlewares
Middlewares	vendor/github.com/go-chi/chi/chi.go	/^type Middlewares []func(http.Handler) http.Handler$/;"	t	package:chi	typeref:typename:[]func(http.Handler) http.Handler
Middlewares	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) Middlewares() Middlewares {$/;"	f	struct:chi.Mux	typeref:typename:Middlewares
Min_Token_Index	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	Min_Token_Index      = 0$/;"	c	package:antlr
Module_argument	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Module_argument(i int) IModule_argumentContext$/;"	n	interface:sqliteparser.ICreate_virtual_table_stmtContext	typeref:typename:IModule_argumentContext
Module_argument	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Module_argument() (localctx IModule_argumentContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IModule_argumentContext)
Module_argument	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) Module_argument(i int) IModule_argumentContext {$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:IModule_argumentContext
Module_argumentContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Module_argumentContext struct {$/;"	s	package:sqliteparser
Module_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Module_name() IModule_nameContext$/;"	n	interface:sqliteparser.ICreate_virtual_table_stmtContext	typeref:typename:IModule_nameContext
Module_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Module_name() (localctx IModule_nameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IModule_nameContext)
Module_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) Module_name() IModule_nameContext {$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:IModule_nameContext
Module_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Module_nameContext struct {$/;"	s	package:sqliteparser
More	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) More() {$/;"	f	struct:antlr.BaseLexer
More	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token_source.go	/^	More()$/;"	n	interface:antlr.TokenSource
Mount	vendor/github.com/go-chi/chi/chi.go	/^	Mount(pattern string, h http.Handler)$/;"	n	interface:chi.Router
Mount	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) Mount(pattern string, handler http.Handler) {$/;"	f	struct:chi.Mux
Must	vendor/github.com/google/uuid/uuid.go	/^func Must(uuid UUID, err error) UUID {$/;"	f	package:uuid	typeref:typename:UUID
MustParse	vendor/github.com/google/uuid/uuid.go	/^func MustParse(s string) UUID {$/;"	f	package:uuid	typeref:typename:UUID
Mutex	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^	sync.Mutex$/;"	M	struct:ws.idPool	typeref:typename:sync.Mutex
Mux	vendor/github.com/go-chi/chi/mux.go	/^type Mux struct {$/;"	s	package:chi
NATURAL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NATURAL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IJoin_operatorContext	typeref:typename:antlr.TerminalNode
NATURAL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NATURAL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
NATURAL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_operatorContext) NATURAL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Join_operatorContext	typeref:typename:antlr.TerminalNode
NATURAL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) NATURAL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
NOTHING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NOTHING_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:antlr.TerminalNode
NOTHING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) NOTHING_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:antlr.TerminalNode
NOTNULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NOTNULL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
NOTNULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NOTNULL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
NOTNULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) NOTNULL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
NOTNULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) NOTNULL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NOT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NOT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_index_stmtContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NOT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NOT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NOT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_view_stmtContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NOT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NOT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NOT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NOT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NOT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IQualified_table_nameContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NOT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ITable_or_subqueryContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NOT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUnary_operatorContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) NOT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) NOT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) NOT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) NOT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) NOT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_view_stmtContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) NOT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) NOT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) NOT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) NOT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Qualified_table_nameContext) NOT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Qualified_table_nameContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) NOT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:antlr.TerminalNode
NOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Unary_operatorContext) NOT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Unary_operatorContext	typeref:typename:antlr.TerminalNode
NOT_EQ1	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NOT_EQ1() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
NOT_EQ1	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) NOT_EQ1() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
NOT_EQ2	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NOT_EQ2() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
NOT_EQ2	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) NOT_EQ2() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
NO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NO_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_specContext	typeref:typename:antlr.TerminalNode
NO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NO_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
NO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NO_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:antlr.TerminalNode
NO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) NO_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.TerminalNode
NO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_specContext) NO_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_specContext	typeref:typename:antlr.TerminalNode
NO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) NO_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
NTH_VALUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NTH_VALUE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
NTH_VALUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NTH_VALUE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:antlr.TerminalNode
NTH_VALUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) NTH_VALUE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
NTH_VALUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) NTH_VALUE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:antlr.TerminalNode
NTILE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NTILE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
NTILE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NTILE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:antlr.TerminalNode
NTILE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) NTILE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
NTILE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) NTILE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:antlr.TerminalNode
NULLS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NULLS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
NULLS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NULLS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IOrdering_termContext	typeref:typename:antlr.TerminalNode
NULLS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) NULLS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
NULLS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Ordering_termContext) NULLS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Ordering_termContext	typeref:typename:antlr.TerminalNode
NULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NULL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:antlr.TerminalNode
NULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NULL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
NULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NULL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
NULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NULL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ILiteral_valueContext	typeref:typename:antlr.TerminalNode
NULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NULL_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:antlr.TerminalNode
NULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) NULL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:antlr.TerminalNode
NULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) NULL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
NULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) NULL_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.TerminalNode
NULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) NULL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
NULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Literal_valueContext) NULL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Literal_valueContext	typeref:typename:antlr.TerminalNode
NUMERIC_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NUMERIC_LITERAL() antlr.TerminalNode$/;"	n	interface:sqliteparser.ILiteral_valueContext	typeref:typename:antlr.TerminalNode
NUMERIC_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	NUMERIC_LITERAL() antlr.TerminalNode$/;"	n	interface:sqliteparser.ISigned_numberContext	typeref:typename:antlr.TerminalNode
NUMERIC_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Literal_valueContext) NUMERIC_LITERAL() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Literal_valueContext	typeref:typename:antlr.TerminalNode
NUMERIC_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Signed_numberContext) NUMERIC_LITERAL() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Signed_numberContext	typeref:typename:antlr.TerminalNode
Name	internal/database/models.go	/^	Name      string$/;"	m	struct:database.User	typeref:typename:string
Name	internal/database/users.sql.go	/^	Name      string$/;"	m	struct:database.CreateUserParams	typeref:typename:string
Name	models.go	/^	Name      string    `json:"name"`$/;"	m	struct:main.User	typeref:typename:string
Name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Name() INameContext$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:INameContext
Name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Name() INameContext$/;"	n	interface:sqliteparser.IPragma_valueContext	typeref:typename:INameContext
Name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Name() INameContext$/;"	n	interface:sqliteparser.ITable_constraintContext	typeref:typename:INameContext
Name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Name(i int) INameContext$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:INameContext
Name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Name(i int) INameContext$/;"	n	interface:sqliteparser.IType_nameContext	typeref:typename:INameContext
Name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Name() (localctx INameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx INameContext)
Name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) Name() INameContext {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:INameContext
Name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) Name(i int) INameContext {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:INameContext
Name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_valueContext) Name() INameContext {$/;"	f	struct:sqliteparser.Pragma_valueContext	typeref:typename:INameContext
Name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) Name() INameContext {$/;"	f	struct:sqliteparser.Table_constraintContext	typeref:typename:INameContext
Name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Type_nameContext) Name(i int) INameContext {$/;"	f	struct:sqliteparser.Type_nameContext	typeref:typename:INameContext
Name	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt.go	/^	Name  string `json:"name"`$/;"	m	struct:hrana.NamedArg	typeref:typename:string
Name	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt_result.go	/^	Name *string `json:"name"`$/;"	m	struct:hrana.Column	typeref:typename:*string
Name	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^	Name  string$/;"	m	struct:ws.namedParam	typeref:typename:string
NameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type NameContext struct {$/;"	s	package:sqliteparser
NameSpaceDNS	vendor/github.com/google/uuid/hash.go	/^	NameSpaceDNS  = Must(Parse("6ba7b810-9dad-11d1-80b4-00c04fd430c8"))$/;"	v	package:uuid
NameSpaceOID	vendor/github.com/google/uuid/hash.go	/^	NameSpaceOID  = Must(Parse("6ba7b812-9dad-11d1-80b4-00c04fd430c8"))$/;"	v	package:uuid
NameSpaceURL	vendor/github.com/google/uuid/hash.go	/^	NameSpaceURL  = Must(Parse("6ba7b811-9dad-11d1-80b4-00c04fd430c8"))$/;"	v	package:uuid
NameSpaceX500	vendor/github.com/google/uuid/hash.go	/^	NameSpaceX500 = Must(Parse("6ba7b814-9dad-11d1-80b4-00c04fd430c8"))$/;"	v	package:uuid
Named	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^func (p *Params) Named() map[string]any {$/;"	f	struct:shared.Params	typeref:typename:map[string]any
NamedArg	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt.go	/^type NamedArg struct {$/;"	s	package:hrana
NamedArgs	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt.go	/^	NamedArgs        []NamedArg `json:"named_args,omitempty"`$/;"	m	struct:hrana.Stmt	typeref:typename:[]NamedArg
NamedArgs	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^	NamedArgs     []namedParam$/;"	m	struct:ws.params	typeref:typename:[]namedParam
NamedParameters	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^	NamedParameters           []string$/;"	m	struct:shared.ParamsInfo	typeref:typename:[]string
NetConn	vendor/nhooyr.io/websocket/netconn.go	/^func NetConn(ctx context.Context, c *Conn, msgType MessageType) net.Conn {$/;"	f	package:websocket	typeref:typename:net.Conn
Network	vendor/nhooyr.io/websocket/netconn.go	/^func (a websocketAddr) Network() string {$/;"	f	struct:websocket.websocketAddr	typeref:typename:string
New	internal/database/db.go	/^func New(db DBTX) *Queries {$/;"	f	package:database	typeref:typename:*Queries
New	vendor/github.com/go-chi/cors/cors.go	/^func New(options Options) *Cors {$/;"	f	package:cors	typeref:typename:*Cors
New	vendor/github.com/google/uuid/version4.go	/^func New() UUID {$/;"	f	package:uuid	typeref:typename:UUID
New	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^func New(url string, protocols []string) (c WebSocket, err error) {$/;"	f	package:wsjs	typeref:typename:(c WebSocket, err error)
NewAND	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func NewAND(a, b SemanticContext) *AND {$/;"	f	package:antlr	typeref:typename:*AND
NewATN	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^func NewATN(grammarType int, maxTokenType int) *ATN {$/;"	f	package:antlr	typeref:typename:*ATN
NewATNDeserializationOptions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserialization_options.go	/^func NewATNDeserializationOptions(other *ATNDeserializationOptions) *ATNDeserializationOptions {$/;"	f	package:antlr	typeref:typename:*ATNDeserializationOptions
NewATNDeserializer	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func NewATNDeserializer(options *ATNDeserializationOptions) *ATNDeserializer {$/;"	f	package:antlr	typeref:typename:*ATNDeserializer
NewActionTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func NewActionTransition(target ATNState, ruleIndex, actionIndex int, isCtxDependent bool) *Acti/;"	f	package:antlr	typeref:typename:*ActionTransition
NewAggregate_funcContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewAggregate_funcContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState/;"	f	package:sqliteparser	typeref:typename:*Aggregate_funcContext
NewAggregate_function_invocationContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewAggregate_function_invocationContext(parser antlr.Parser, parent antlr.ParserRuleContext/;"	f	package:sqliteparser	typeref:typename:*Aggregate_function_invocationContext
NewAliasContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewAliasContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState int) *Al/;"	f	package:sqliteparser	typeref:typename:*AliasContext
NewAltDict	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func NewAltDict() *AltDict {$/;"	f	package:antlr	typeref:typename:*AltDict
NewAlter_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewAlter_table_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingSta/;"	f	package:sqliteparser	typeref:typename:*Alter_table_stmtContext
NewAnalyze_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewAnalyze_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState i/;"	f	package:sqliteparser	typeref:typename:*Analyze_stmtContext
NewAny_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewAny_nameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState int) /;"	f	package:sqliteparser	typeref:typename:*Any_nameContext
NewArrayPredictionContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func NewArrayPredictionContext(parents []PredictionContext, returnStates []int) *ArrayPrediction/;"	f	package:antlr	typeref:typename:*ArrayPredictionContext
NewAsc_descContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewAsc_descContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState int) /;"	f	package:sqliteparser	typeref:typename:*Asc_descContext
NewAtomTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func NewAtomTransition(target ATNState, intervalSet int) *AtomTransition {$/;"	f	package:antlr	typeref:typename:*AtomTransition
NewAttach_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewAttach_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*Attach_stmtContext
NewBailErrorStrategy	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func NewBailErrorStrategy() *BailErrorStrategy {$/;"	f	package:antlr	typeref:typename:*BailErrorStrategy
NewBaseATNConfig	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func NewBaseATNConfig(c ATNConfig, state ATNState, context PredictionContext, semanticContext Se/;"	f	package:antlr	typeref:typename:*BaseATNConfig
NewBaseATNConfig1	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func NewBaseATNConfig1(c ATNConfig, state ATNState, context PredictionContext) *BaseATNConfig {$/;"	f	package:antlr	typeref:typename:*BaseATNConfig
NewBaseATNConfig2	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func NewBaseATNConfig2(c ATNConfig, semanticContext SemanticContext) *BaseATNConfig {$/;"	f	package:antlr	typeref:typename:*BaseATNConfig
NewBaseATNConfig3	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func NewBaseATNConfig3(c ATNConfig, state ATNState, semanticContext SemanticContext) *BaseATNCon/;"	f	package:antlr	typeref:typename:*BaseATNConfig
NewBaseATNConfig4	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func NewBaseATNConfig4(c ATNConfig, state ATNState) *BaseATNConfig {$/;"	f	package:antlr	typeref:typename:*BaseATNConfig
NewBaseATNConfig5	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func NewBaseATNConfig5(state ATNState, alt int, context PredictionContext, semanticContext Seman/;"	f	package:antlr	typeref:typename:*BaseATNConfig
NewBaseATNConfig6	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func NewBaseATNConfig6(state ATNState, alt int, context PredictionContext) *BaseATNConfig {$/;"	f	package:antlr	typeref:typename:*BaseATNConfig
NewBaseATNConfig7	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func NewBaseATNConfig7(old *BaseATNConfig) ATNConfig { \/\/ TODO: Dup$/;"	f	package:antlr	typeref:typename:ATNConfig
NewBaseATNConfigSet	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func NewBaseATNConfigSet(fullCtx bool) *BaseATNConfigSet {$/;"	f	package:antlr	typeref:typename:*BaseATNConfigSet
NewBaseATNSimulator	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_simulator.go	/^func NewBaseATNSimulator(atn *ATN, sharedContextCache *PredictionContextCache) *BaseATNSimulator/;"	f	package:antlr	typeref:typename:*BaseATNSimulator
NewBaseATNState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func NewBaseATNState() *BaseATNState {$/;"	f	package:antlr	typeref:typename:*BaseATNState
NewBaseDecisionState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func NewBaseDecisionState() *BaseDecisionState {$/;"	f	package:antlr	typeref:typename:*BaseDecisionState
NewBaseInterpreterRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func NewBaseInterpreterRuleContext(parent BaseInterpreterRuleContext, invokingStateNumber, ruleI/;"	f	package:antlr	typeref:typename:*BaseInterpreterRuleContext
NewBaseLexer	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func NewBaseLexer(input CharStream) *BaseLexer {$/;"	f	package:antlr	typeref:typename:*BaseLexer
NewBaseLexerAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func NewBaseLexerAction(action int) *BaseLexerAction {$/;"	f	package:antlr	typeref:typename:*BaseLexerAction
NewBaseParser	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func NewBaseParser(input TokenStream) *BaseParser {$/;"	f	package:antlr	typeref:typename:*BaseParser
NewBaseParserRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func NewBaseParserRuleContext(parent ParserRuleContext, invokingStateNumber int) *BaseParserRule/;"	f	package:antlr	typeref:typename:*BaseParserRuleContext
NewBasePredicateTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func NewBasePredicateTransition(target ATNState) *BaseAbstractPredicateTransition {$/;"	f	package:antlr	typeref:typename:*BaseAbstractPredicateTransition
NewBasePredictionContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func NewBasePredictionContext(cachedHash int) *BasePredictionContext {$/;"	f	package:antlr	typeref:typename:*BasePredictionContext
NewBaseRecognitionException	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^func NewBaseRecognitionException(message string, recognizer Recognizer, input IntStream, ctx Rul/;"	f	package:antlr	typeref:typename:*BaseRecognitionException
NewBaseRecognizer	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^func NewBaseRecognizer() *BaseRecognizer {$/;"	f	package:antlr	typeref:typename:*BaseRecognizer
NewBaseRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^func NewBaseRuleContext(parent RuleContext, invokingState int) *BaseRuleContext {$/;"	f	package:antlr	typeref:typename:*BaseRuleContext
NewBaseSingletonPredictionContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func NewBaseSingletonPredictionContext(parent PredictionContext, returnState int) *BaseSingleton/;"	f	package:antlr	typeref:typename:*BaseSingletonPredictionContext
NewBaseTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func NewBaseTransition(target ATNState) *BaseTransition {$/;"	f	package:antlr	typeref:typename:*BaseTransition
NewBase_window_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewBase_window_nameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingSta/;"	f	package:sqliteparser	typeref:typename:*Base_window_nameContext
NewBasicBlockStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func NewBasicBlockStartState() *BasicBlockStartState {$/;"	f	package:antlr	typeref:typename:*BasicBlockStartState
NewBasicState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func NewBasicState() *BasicState {$/;"	f	package:antlr	typeref:typename:*BasicState
NewBegin_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewBegin_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState int/;"	f	package:sqliteparser	typeref:typename:*Begin_stmtContext
NewBitSet	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func NewBitSet() *BitSet {$/;"	f	package:antlr	typeref:typename:*BitSet
NewBlockEndState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func NewBlockEndState() *BlockEndState {$/;"	f	package:antlr	typeref:typename:*BlockEndState
NewBlockStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func NewBlockStartState() *BaseBlockStartState {$/;"	f	package:antlr	typeref:typename:*BaseBlockStartState
NewCollation_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewCollation_nameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState/;"	f	package:sqliteparser	typeref:typename:*Collation_nameContext
NewColumn_aliasContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewColumn_aliasContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState i/;"	f	package:sqliteparser	typeref:typename:*Column_aliasContext
NewColumn_constraintContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewColumn_constraintContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingSt/;"	f	package:sqliteparser	typeref:typename:*Column_constraintContext
NewColumn_defContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewColumn_defContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState int/;"	f	package:sqliteparser	typeref:typename:*Column_defContext
NewColumn_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewColumn_nameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*Column_nameContext
NewColumn_name_listContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewColumn_name_listContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingSta/;"	f	package:sqliteparser	typeref:typename:*Column_name_listContext
NewCommit_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewCommit_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*Commit_stmtContext
NewCommonToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^func NewCommonToken(source *TokenSourceCharStreamPair, tokenType, channel, start, stop int) *Com/;"	f	package:antlr	typeref:typename:*CommonToken
NewCommonTokenFactory	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_factory.go	/^func NewCommonTokenFactory(copyText bool) *CommonTokenFactory {$/;"	f	package:antlr	typeref:typename:*CommonTokenFactory
NewCommonTokenStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func NewCommonTokenStream(lexer Lexer, channel int) *CommonTokenStream {$/;"	f	package:antlr	typeref:typename:*CommonTokenStream
NewCommon_table_expressionContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewCommon_table_expressionContext(parser antlr.Parser, parent antlr.ParserRuleContext, invo/;"	f	package:sqliteparser	typeref:typename:*Common_table_expressionContext
NewCommon_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewCommon_table_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingSt/;"	f	package:sqliteparser	typeref:typename:*Common_table_stmtContext
NewCompound_operatorContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewCompound_operatorContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingSt/;"	f	package:sqliteparser	typeref:typename:*Compound_operatorContext
NewCompound_select_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewCompound_select_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokin/;"	f	package:sqliteparser	typeref:typename:*Compound_select_stmtContext
NewConflict_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewConflict_clauseContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingStat/;"	f	package:sqliteparser	typeref:typename:*Conflict_clauseContext
NewConnector	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^func NewConnector(dbPath string, opts ...Option) (driver.Connector, error) {$/;"	f	package:libsql	typeref:typename:(driver.Connector, error)
NewConsoleErrorListener	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^func NewConsoleErrorListener() *ConsoleErrorListener {$/;"	f	package:antlr	typeref:typename:*ConsoleErrorListener
NewCreate_index_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewCreate_index_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingSt/;"	f	package:sqliteparser	typeref:typename:*Create_index_stmtContext
NewCreate_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewCreate_table_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingSt/;"	f	package:sqliteparser	typeref:typename:*Create_table_stmtContext
NewCreate_trigger_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewCreate_trigger_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invoking/;"	f	package:sqliteparser	typeref:typename:*Create_trigger_stmtContext
NewCreate_view_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewCreate_view_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingSta/;"	f	package:sqliteparser	typeref:typename:*Create_view_stmtContext
NewCreate_virtual_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewCreate_virtual_table_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, in/;"	f	package:sqliteparser	typeref:typename:*Create_virtual_table_stmtContext
NewCte_table_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewCte_table_nameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState/;"	f	package:sqliteparser	typeref:typename:*Cte_table_nameContext
NewDCEGroup	vendor/github.com/google/uuid/dce.go	/^func NewDCEGroup() (UUID, error) {$/;"	f	package:uuid	typeref:typename:(UUID, error)
NewDCEPerson	vendor/github.com/google/uuid/dce.go	/^func NewDCEPerson() (UUID, error) {$/;"	f	package:uuid	typeref:typename:(UUID, error)
NewDCESecurity	vendor/github.com/google/uuid/dce.go	/^func NewDCESecurity(domain Domain, id uint32) (UUID, error) {$/;"	f	package:uuid	typeref:typename:(UUID, error)
NewDFA	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa.go	/^func NewDFA(atnStartState DecisionState, decision int) *DFA {$/;"	f	package:antlr	typeref:typename:*DFA
NewDFASerializer	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_serializer.go	/^func NewDFASerializer(dfa *DFA, literalNames, symbolicNames []string) *DFASerializer {$/;"	f	package:antlr	typeref:typename:*DFASerializer
NewDFAState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^func NewDFAState(stateNumber int, configs ATNConfigSet) *DFAState {$/;"	f	package:antlr	typeref:typename:*DFAState
NewDefaultErrorListener	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^func NewDefaultErrorListener() *DefaultErrorListener {$/;"	f	package:antlr	typeref:typename:*DefaultErrorListener
NewDefaultErrorStrategy	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func NewDefaultErrorStrategy() *DefaultErrorStrategy {$/;"	f	package:antlr	typeref:typename:*DefaultErrorStrategy
NewDefault_valueContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewDefault_valueContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState /;"	f	package:sqliteparser	typeref:typename:*Default_valueContext
NewDelete_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewDelete_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*Delete_stmtContext
NewDelete_stmt_limitedContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewDelete_stmt_limitedContext(parser antlr.Parser, parent antlr.ParserRuleContext, invoking/;"	f	package:sqliteparser	typeref:typename:*Delete_stmt_limitedContext
NewDetach_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewDetach_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*Detach_stmtContext
NewDiagnosticErrorListener	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/diagnostic_error_listener.go	/^func NewDiagnosticErrorListener(exactOnly bool) *DiagnosticErrorListener {$/;"	f	package:antlr	typeref:typename:*DiagnosticErrorListener
NewDoubleDict	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func NewDoubleDict() *DoubleDict {$/;"	f	package:antlr	typeref:typename:*DoubleDict
NewDrop_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewDrop_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState int)/;"	f	package:sqliteparser	typeref:typename:*Drop_stmtContext
NewEmptyAggregate_funcContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyAggregate_funcContext() *Aggregate_funcContext {$/;"	f	package:sqliteparser	typeref:typename:*Aggregate_funcContext
NewEmptyAggregate_function_invocationContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyAggregate_function_invocationContext() *Aggregate_function_invocationContext {$/;"	f	package:sqliteparser	typeref:typename:*Aggregate_function_invocationContext
NewEmptyAliasContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyAliasContext() *AliasContext {$/;"	f	package:sqliteparser	typeref:typename:*AliasContext
NewEmptyAlter_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyAlter_table_stmtContext() *Alter_table_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Alter_table_stmtContext
NewEmptyAnalyze_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyAnalyze_stmtContext() *Analyze_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Analyze_stmtContext
NewEmptyAny_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyAny_nameContext() *Any_nameContext {$/;"	f	package:sqliteparser	typeref:typename:*Any_nameContext
NewEmptyAsc_descContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyAsc_descContext() *Asc_descContext {$/;"	f	package:sqliteparser	typeref:typename:*Asc_descContext
NewEmptyAttach_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyAttach_stmtContext() *Attach_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Attach_stmtContext
NewEmptyBase_window_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyBase_window_nameContext() *Base_window_nameContext {$/;"	f	package:sqliteparser	typeref:typename:*Base_window_nameContext
NewEmptyBegin_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyBegin_stmtContext() *Begin_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Begin_stmtContext
NewEmptyCollation_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyCollation_nameContext() *Collation_nameContext {$/;"	f	package:sqliteparser	typeref:typename:*Collation_nameContext
NewEmptyColumn_aliasContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyColumn_aliasContext() *Column_aliasContext {$/;"	f	package:sqliteparser	typeref:typename:*Column_aliasContext
NewEmptyColumn_constraintContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyColumn_constraintContext() *Column_constraintContext {$/;"	f	package:sqliteparser	typeref:typename:*Column_constraintContext
NewEmptyColumn_defContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyColumn_defContext() *Column_defContext {$/;"	f	package:sqliteparser	typeref:typename:*Column_defContext
NewEmptyColumn_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyColumn_nameContext() *Column_nameContext {$/;"	f	package:sqliteparser	typeref:typename:*Column_nameContext
NewEmptyColumn_name_listContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyColumn_name_listContext() *Column_name_listContext {$/;"	f	package:sqliteparser	typeref:typename:*Column_name_listContext
NewEmptyCommit_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyCommit_stmtContext() *Commit_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Commit_stmtContext
NewEmptyCommon_table_expressionContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyCommon_table_expressionContext() *Common_table_expressionContext {$/;"	f	package:sqliteparser	typeref:typename:*Common_table_expressionContext
NewEmptyCommon_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyCommon_table_stmtContext() *Common_table_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Common_table_stmtContext
NewEmptyCompound_operatorContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyCompound_operatorContext() *Compound_operatorContext {$/;"	f	package:sqliteparser	typeref:typename:*Compound_operatorContext
NewEmptyCompound_select_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyCompound_select_stmtContext() *Compound_select_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Compound_select_stmtContext
NewEmptyConflict_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyConflict_clauseContext() *Conflict_clauseContext {$/;"	f	package:sqliteparser	typeref:typename:*Conflict_clauseContext
NewEmptyCreate_index_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyCreate_index_stmtContext() *Create_index_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Create_index_stmtContext
NewEmptyCreate_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyCreate_table_stmtContext() *Create_table_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Create_table_stmtContext
NewEmptyCreate_trigger_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyCreate_trigger_stmtContext() *Create_trigger_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Create_trigger_stmtContext
NewEmptyCreate_view_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyCreate_view_stmtContext() *Create_view_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Create_view_stmtContext
NewEmptyCreate_virtual_table_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyCreate_virtual_table_stmtContext() *Create_virtual_table_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Create_virtual_table_stmtContext
NewEmptyCte_table_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyCte_table_nameContext() *Cte_table_nameContext {$/;"	f	package:sqliteparser	typeref:typename:*Cte_table_nameContext
NewEmptyDefault_valueContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyDefault_valueContext() *Default_valueContext {$/;"	f	package:sqliteparser	typeref:typename:*Default_valueContext
NewEmptyDelete_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyDelete_stmtContext() *Delete_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Delete_stmtContext
NewEmptyDelete_stmt_limitedContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyDelete_stmt_limitedContext() *Delete_stmt_limitedContext {$/;"	f	package:sqliteparser	typeref:typename:*Delete_stmt_limitedContext
NewEmptyDetach_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyDetach_stmtContext() *Detach_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Detach_stmtContext
NewEmptyDrop_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyDrop_stmtContext() *Drop_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Drop_stmtContext
NewEmptyError_messageContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyError_messageContext() *Error_messageContext {$/;"	f	package:sqliteparser	typeref:typename:*Error_messageContext
NewEmptyExprContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyExprContext() *ExprContext {$/;"	f	package:sqliteparser	typeref:typename:*ExprContext
NewEmptyExpr_asc_descContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyExpr_asc_descContext() *Expr_asc_descContext {$/;"	f	package:sqliteparser	typeref:typename:*Expr_asc_descContext
NewEmptyFactored_select_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyFactored_select_stmtContext() *Factored_select_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Factored_select_stmtContext
NewEmptyFilenameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyFilenameContext() *FilenameContext {$/;"	f	package:sqliteparser	typeref:typename:*FilenameContext
NewEmptyFilter_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyFilter_clauseContext() *Filter_clauseContext {$/;"	f	package:sqliteparser	typeref:typename:*Filter_clauseContext
NewEmptyForeign_key_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyForeign_key_clauseContext() *Foreign_key_clauseContext {$/;"	f	package:sqliteparser	typeref:typename:*Foreign_key_clauseContext
NewEmptyForeign_tableContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyForeign_tableContext() *Foreign_tableContext {$/;"	f	package:sqliteparser	typeref:typename:*Foreign_tableContext
NewEmptyFrame_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyFrame_clauseContext() *Frame_clauseContext {$/;"	f	package:sqliteparser	typeref:typename:*Frame_clauseContext
NewEmptyFrame_leftContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyFrame_leftContext() *Frame_leftContext {$/;"	f	package:sqliteparser	typeref:typename:*Frame_leftContext
NewEmptyFrame_rightContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyFrame_rightContext() *Frame_rightContext {$/;"	f	package:sqliteparser	typeref:typename:*Frame_rightContext
NewEmptyFrame_singleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyFrame_singleContext() *Frame_singleContext {$/;"	f	package:sqliteparser	typeref:typename:*Frame_singleContext
NewEmptyFrame_specContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyFrame_specContext() *Frame_specContext {$/;"	f	package:sqliteparser	typeref:typename:*Frame_specContext
NewEmptyFunction_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyFunction_nameContext() *Function_nameContext {$/;"	f	package:sqliteparser	typeref:typename:*Function_nameContext
NewEmptyIndex_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyIndex_nameContext() *Index_nameContext {$/;"	f	package:sqliteparser	typeref:typename:*Index_nameContext
NewEmptyIndexed_columnContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyIndexed_columnContext() *Indexed_columnContext {$/;"	f	package:sqliteparser	typeref:typename:*Indexed_columnContext
NewEmptyInitial_selectContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyInitial_selectContext() *Initial_selectContext {$/;"	f	package:sqliteparser	typeref:typename:*Initial_selectContext
NewEmptyInsert_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyInsert_stmtContext() *Insert_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Insert_stmtContext
NewEmptyJoin_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyJoin_clauseContext() *Join_clauseContext {$/;"	f	package:sqliteparser	typeref:typename:*Join_clauseContext
NewEmptyJoin_constraintContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyJoin_constraintContext() *Join_constraintContext {$/;"	f	package:sqliteparser	typeref:typename:*Join_constraintContext
NewEmptyJoin_operatorContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyJoin_operatorContext() *Join_operatorContext {$/;"	f	package:sqliteparser	typeref:typename:*Join_operatorContext
NewEmptyKeywordContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyKeywordContext() *KeywordContext {$/;"	f	package:sqliteparser	typeref:typename:*KeywordContext
NewEmptyLimit_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyLimit_stmtContext() *Limit_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Limit_stmtContext
NewEmptyLiteral_valueContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyLiteral_valueContext() *Literal_valueContext {$/;"	f	package:sqliteparser	typeref:typename:*Literal_valueContext
NewEmptyModule_argumentContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyModule_argumentContext() *Module_argumentContext {$/;"	f	package:sqliteparser	typeref:typename:*Module_argumentContext
NewEmptyModule_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyModule_nameContext() *Module_nameContext {$/;"	f	package:sqliteparser	typeref:typename:*Module_nameContext
NewEmptyNameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyNameContext() *NameContext {$/;"	f	package:sqliteparser	typeref:typename:*NameContext
NewEmptyOffsetContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyOffsetContext() *OffsetContext {$/;"	f	package:sqliteparser	typeref:typename:*OffsetContext
NewEmptyOrder_by_exprContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyOrder_by_exprContext() *Order_by_exprContext {$/;"	f	package:sqliteparser	typeref:typename:*Order_by_exprContext
NewEmptyOrder_by_expr_asc_descContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyOrder_by_expr_asc_descContext() *Order_by_expr_asc_descContext {$/;"	f	package:sqliteparser	typeref:typename:*Order_by_expr_asc_descContext
NewEmptyOrder_by_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyOrder_by_stmtContext() *Order_by_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Order_by_stmtContext
NewEmptyOrdering_termContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyOrdering_termContext() *Ordering_termContext {$/;"	f	package:sqliteparser	typeref:typename:*Ordering_termContext
NewEmptyOver_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyOver_clauseContext() *Over_clauseContext {$/;"	f	package:sqliteparser	typeref:typename:*Over_clauseContext
NewEmptyParseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyParseContext() *ParseContext {$/;"	f	package:sqliteparser	typeref:typename:*ParseContext
NewEmptyPartition_byContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyPartition_byContext() *Partition_byContext {$/;"	f	package:sqliteparser	typeref:typename:*Partition_byContext
NewEmptyPragma_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyPragma_nameContext() *Pragma_nameContext {$/;"	f	package:sqliteparser	typeref:typename:*Pragma_nameContext
NewEmptyPragma_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyPragma_stmtContext() *Pragma_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Pragma_stmtContext
NewEmptyPragma_valueContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyPragma_valueContext() *Pragma_valueContext {$/;"	f	package:sqliteparser	typeref:typename:*Pragma_valueContext
NewEmptyPredictionContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func NewEmptyPredictionContext() *EmptyPredictionContext {$/;"	f	package:antlr	typeref:typename:*EmptyPredictionContext
NewEmptyQualified_table_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyQualified_table_nameContext() *Qualified_table_nameContext {$/;"	f	package:sqliteparser	typeref:typename:*Qualified_table_nameContext
NewEmptyRaise_functionContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyRaise_functionContext() *Raise_functionContext {$/;"	f	package:sqliteparser	typeref:typename:*Raise_functionContext
NewEmptyRecursive_cteContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyRecursive_cteContext() *Recursive_cteContext {$/;"	f	package:sqliteparser	typeref:typename:*Recursive_cteContext
NewEmptyRecursive_selectContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyRecursive_selectContext() *Recursive_selectContext {$/;"	f	package:sqliteparser	typeref:typename:*Recursive_selectContext
NewEmptyReindex_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyReindex_stmtContext() *Reindex_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Reindex_stmtContext
NewEmptyRelease_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyRelease_stmtContext() *Release_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Release_stmtContext
NewEmptyResult_columnContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyResult_columnContext() *Result_columnContext {$/;"	f	package:sqliteparser	typeref:typename:*Result_columnContext
NewEmptyReturning_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyReturning_clauseContext() *Returning_clauseContext {$/;"	f	package:sqliteparser	typeref:typename:*Returning_clauseContext
NewEmptyRollback_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyRollback_stmtContext() *Rollback_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Rollback_stmtContext
NewEmptySavepoint_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptySavepoint_nameContext() *Savepoint_nameContext {$/;"	f	package:sqliteparser	typeref:typename:*Savepoint_nameContext
NewEmptySavepoint_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptySavepoint_stmtContext() *Savepoint_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Savepoint_stmtContext
NewEmptySchema_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptySchema_nameContext() *Schema_nameContext {$/;"	f	package:sqliteparser	typeref:typename:*Schema_nameContext
NewEmptySelect_coreContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptySelect_coreContext() *Select_coreContext {$/;"	f	package:sqliteparser	typeref:typename:*Select_coreContext
NewEmptySelect_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptySelect_stmtContext() *Select_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Select_stmtContext
NewEmptySigned_numberContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptySigned_numberContext() *Signed_numberContext {$/;"	f	package:sqliteparser	typeref:typename:*Signed_numberContext
NewEmptySimple_funcContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptySimple_funcContext() *Simple_funcContext {$/;"	f	package:sqliteparser	typeref:typename:*Simple_funcContext
NewEmptySimple_function_invocationContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptySimple_function_invocationContext() *Simple_function_invocationContext {$/;"	f	package:sqliteparser	typeref:typename:*Simple_function_invocationContext
NewEmptySimple_select_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptySimple_select_stmtContext() *Simple_select_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Simple_select_stmtContext
NewEmptySql_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptySql_stmtContext() *Sql_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Sql_stmtContext
NewEmptySql_stmt_listContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptySql_stmt_listContext() *Sql_stmt_listContext {$/;"	f	package:sqliteparser	typeref:typename:*Sql_stmt_listContext
NewEmptyTable_aliasContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyTable_aliasContext() *Table_aliasContext {$/;"	f	package:sqliteparser	typeref:typename:*Table_aliasContext
NewEmptyTable_constraintContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyTable_constraintContext() *Table_constraintContext {$/;"	f	package:sqliteparser	typeref:typename:*Table_constraintContext
NewEmptyTable_function_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyTable_function_nameContext() *Table_function_nameContext {$/;"	f	package:sqliteparser	typeref:typename:*Table_function_nameContext
NewEmptyTable_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyTable_nameContext() *Table_nameContext {$/;"	f	package:sqliteparser	typeref:typename:*Table_nameContext
NewEmptyTable_or_index_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyTable_or_index_nameContext() *Table_or_index_nameContext {$/;"	f	package:sqliteparser	typeref:typename:*Table_or_index_nameContext
NewEmptyTable_or_subqueryContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyTable_or_subqueryContext() *Table_or_subqueryContext {$/;"	f	package:sqliteparser	typeref:typename:*Table_or_subqueryContext
NewEmptyTransaction_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyTransaction_nameContext() *Transaction_nameContext {$/;"	f	package:sqliteparser	typeref:typename:*Transaction_nameContext
NewEmptyTrigger_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyTrigger_nameContext() *Trigger_nameContext {$/;"	f	package:sqliteparser	typeref:typename:*Trigger_nameContext
NewEmptyType_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyType_nameContext() *Type_nameContext {$/;"	f	package:sqliteparser	typeref:typename:*Type_nameContext
NewEmptyUnary_operatorContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyUnary_operatorContext() *Unary_operatorContext {$/;"	f	package:sqliteparser	typeref:typename:*Unary_operatorContext
NewEmptyUpdate_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyUpdate_stmtContext() *Update_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Update_stmtContext
NewEmptyUpdate_stmt_limitedContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyUpdate_stmt_limitedContext() *Update_stmt_limitedContext {$/;"	f	package:sqliteparser	typeref:typename:*Update_stmt_limitedContext
NewEmptyUpsert_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyUpsert_clauseContext() *Upsert_clauseContext {$/;"	f	package:sqliteparser	typeref:typename:*Upsert_clauseContext
NewEmptyVacuum_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyVacuum_stmtContext() *Vacuum_stmtContext {$/;"	f	package:sqliteparser	typeref:typename:*Vacuum_stmtContext
NewEmptyValue_rowContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyValue_rowContext() *Value_rowContext {$/;"	f	package:sqliteparser	typeref:typename:*Value_rowContext
NewEmptyValues_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyValues_clauseContext() *Values_clauseContext {$/;"	f	package:sqliteparser	typeref:typename:*Values_clauseContext
NewEmptyView_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyView_nameContext() *View_nameContext {$/;"	f	package:sqliteparser	typeref:typename:*View_nameContext
NewEmptyWindow_defnContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyWindow_defnContext() *Window_defnContext {$/;"	f	package:sqliteparser	typeref:typename:*Window_defnContext
NewEmptyWindow_functionContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyWindow_functionContext() *Window_functionContext {$/;"	f	package:sqliteparser	typeref:typename:*Window_functionContext
NewEmptyWindow_function_invocationContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyWindow_function_invocationContext() *Window_function_invocationContext {$/;"	f	package:sqliteparser	typeref:typename:*Window_function_invocationContext
NewEmptyWindow_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyWindow_nameContext() *Window_nameContext {$/;"	f	package:sqliteparser	typeref:typename:*Window_nameContext
NewEmptyWith_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewEmptyWith_clauseContext() *With_clauseContext {$/;"	f	package:sqliteparser	typeref:typename:*With_clauseContext
NewEpsilonTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func NewEpsilonTransition(target ATNState, outermostPrecedenceReturn int) *EpsilonTransition {$/;"	f	package:antlr	typeref:typename:*EpsilonTransition
NewErrorNodeImpl	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func NewErrorNodeImpl(token Token) *ErrorNodeImpl {$/;"	f	package:antlr	typeref:typename:*ErrorNodeImpl
NewError_messageContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewError_messageContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState /;"	f	package:sqliteparser	typeref:typename:*Error_messageContext
NewExprContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewExprContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState int) *Exp/;"	f	package:sqliteparser	typeref:typename:*ExprContext
NewExpr_asc_descContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewExpr_asc_descContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState /;"	f	package:sqliteparser	typeref:typename:*Expr_asc_descContext
NewFactored_select_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewFactored_select_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokin/;"	f	package:sqliteparser	typeref:typename:*Factored_select_stmtContext
NewFailedPredicateException	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^func NewFailedPredicateException(recognizer Parser, predicate string, message string) *FailedPre/;"	f	package:antlr	typeref:typename:*FailedPredicateException
NewFileStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/file_stream.go	/^func NewFileStream(fileName string) (*FileStream, error) {$/;"	f	package:antlr	typeref:typename:(*FileStream, error)
NewFilenameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewFilenameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState int) /;"	f	package:sqliteparser	typeref:typename:*FilenameContext
NewFilter_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewFilter_clauseContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState /;"	f	package:sqliteparser	typeref:typename:*Filter_clauseContext
NewForeign_key_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewForeign_key_clauseContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingS/;"	f	package:sqliteparser	typeref:typename:*Foreign_key_clauseContext
NewForeign_tableContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewForeign_tableContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState /;"	f	package:sqliteparser	typeref:typename:*Foreign_tableContext
NewFrame_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewFrame_clauseContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState i/;"	f	package:sqliteparser	typeref:typename:*Frame_clauseContext
NewFrame_leftContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewFrame_leftContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState int/;"	f	package:sqliteparser	typeref:typename:*Frame_leftContext
NewFrame_rightContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewFrame_rightContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*Frame_rightContext
NewFrame_singleContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewFrame_singleContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState i/;"	f	package:sqliteparser	typeref:typename:*Frame_singleContext
NewFrame_specContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewFrame_specContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState int/;"	f	package:sqliteparser	typeref:typename:*Frame_specContext
NewFunction_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewFunction_nameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState /;"	f	package:sqliteparser	typeref:typename:*Function_nameContext
NewHash	vendor/github.com/google/uuid/hash.go	/^func NewHash(h hash.Hash, space UUID, data []byte, version int) UUID {$/;"	f	package:uuid	typeref:typename:UUID
NewIndex_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewIndex_nameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState int/;"	f	package:sqliteparser	typeref:typename:*Index_nameContext
NewIndexed_columnContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewIndexed_columnContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState/;"	f	package:sqliteparser	typeref:typename:*Indexed_columnContext
NewInitial_selectContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewInitial_selectContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState/;"	f	package:sqliteparser	typeref:typename:*Initial_selectContext
NewInputMisMatchException	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^func NewInputMisMatchException(recognizer Parser) *InputMisMatchException {$/;"	f	package:antlr	typeref:typename:*InputMisMatchException
NewInputStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/input_stream.go	/^func NewInputStream(data string) *InputStream {$/;"	f	package:antlr	typeref:typename:*InputStream
NewInsertAfterOp	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func NewInsertAfterOp(index int, text string, stream TokenStream) *InsertAfterOp {$/;"	f	package:antlr	typeref:typename:*InsertAfterOp
NewInsertBeforeOp	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func NewInsertBeforeOp(index int, text string, stream TokenStream) *InsertBeforeOp {$/;"	f	package:antlr	typeref:typename:*InsertBeforeOp
NewInsert_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewInsert_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*Insert_stmtContext
NewInterval	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func NewInterval(start, stop int) *Interval {$/;"	f	package:antlr	typeref:typename:*Interval
NewIntervalSet	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func NewIntervalSet() *IntervalSet {$/;"	f	package:antlr	typeref:typename:*IntervalSet
NewJMap	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/jcollect.go	/^func NewJMap[K, V any, C Comparator[K]](comparator Comparator[K]) *JMap[K, V, C] {$/;"	f	package:antlr	typeref:typename:(comparator Comparator[K]) *
NewJStore	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/jcollect.go	/^func NewJStore[T any, C Comparator[T]](comparator Comparator[T]) *JStore[T, C] {$/;"	f	package:antlr	typeref:typename:(comparator Comparator[T]) *
NewJoin_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewJoin_clauseContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*Join_clauseContext
NewJoin_constraintContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewJoin_constraintContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingStat/;"	f	package:sqliteparser	typeref:typename:*Join_constraintContext
NewJoin_operatorContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewJoin_operatorContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState /;"	f	package:sqliteparser	typeref:typename:*Join_operatorContext
NewKeywordContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewKeywordContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState int) */;"	f	package:sqliteparser	typeref:typename:*KeywordContext
NewLL1Analyzer	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/ll1_analyzer.go	/^func NewLL1Analyzer(atn *ATN) *LL1Analyzer {$/;"	f	package:antlr	typeref:typename:*LL1Analyzer
NewLexerATNConfig1	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func NewLexerATNConfig1(state ATNState, alt int, context PredictionContext) *LexerATNConfig {$/;"	f	package:antlr	typeref:typename:*LexerATNConfig
NewLexerATNConfig2	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func NewLexerATNConfig2(c *LexerATNConfig, state ATNState, context PredictionContext) *LexerATNC/;"	f	package:antlr	typeref:typename:*LexerATNConfig
NewLexerATNConfig3	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func NewLexerATNConfig3(c *LexerATNConfig, state ATNState, lexerActionExecutor *LexerActionExecu/;"	f	package:antlr	typeref:typename:*LexerATNConfig
NewLexerATNConfig4	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func NewLexerATNConfig4(c *LexerATNConfig, state ATNState) *LexerATNConfig {$/;"	f	package:antlr	typeref:typename:*LexerATNConfig
NewLexerATNConfig5	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func NewLexerATNConfig5(state ATNState, alt int, context PredictionContext, lexerActionExecutor /;"	f	package:antlr	typeref:typename:*LexerATNConfig
NewLexerATNConfig6	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func NewLexerATNConfig6(state ATNState, alt int, context PredictionContext) *LexerATNConfig {$/;"	f	package:antlr	typeref:typename:*LexerATNConfig
NewLexerATNSimulator	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func NewLexerATNSimulator(recog Lexer, atn *ATN, decisionToDFA []*DFA, sharedContextCache *Predi/;"	f	package:antlr	typeref:typename:*LexerATNSimulator
NewLexerActionExecutor	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action_executor.go	/^func NewLexerActionExecutor(lexerActions []LexerAction) *LexerActionExecutor {$/;"	f	package:antlr	typeref:typename:*LexerActionExecutor
NewLexerChannelAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func NewLexerChannelAction(channel int) *LexerChannelAction {$/;"	f	package:antlr	typeref:typename:*LexerChannelAction
NewLexerCustomAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func NewLexerCustomAction(ruleIndex, actionIndex int) *LexerCustomAction {$/;"	f	package:antlr	typeref:typename:*LexerCustomAction
NewLexerDFASerializer	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_serializer.go	/^func NewLexerDFASerializer(dfa *DFA) *LexerDFASerializer {$/;"	f	package:antlr	typeref:typename:*LexerDFASerializer
NewLexerIndexedCustomAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func NewLexerIndexedCustomAction(offset int, lexerAction LexerAction) *LexerIndexedCustomAction /;"	f	package:antlr	typeref:typename:*LexerIndexedCustomAction
NewLexerModeAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func NewLexerModeAction(mode int) *LexerModeAction {$/;"	f	package:antlr	typeref:typename:*LexerModeAction
NewLexerMoreAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func NewLexerMoreAction() *LexerMoreAction {$/;"	f	package:antlr	typeref:typename:*LexerMoreAction
NewLexerNoViableAltException	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^func NewLexerNoViableAltException(lexer Lexer, input CharStream, startIndex int, deadEndConfigs /;"	f	package:antlr	typeref:typename:*LexerNoViableAltException
NewLexerPopModeAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func NewLexerPopModeAction() *LexerPopModeAction {$/;"	f	package:antlr	typeref:typename:*LexerPopModeAction
NewLexerPushModeAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func NewLexerPushModeAction(mode int) *LexerPushModeAction {$/;"	f	package:antlr	typeref:typename:*LexerPushModeAction
NewLexerSkipAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func NewLexerSkipAction() *LexerSkipAction {$/;"	f	package:antlr	typeref:typename:*LexerSkipAction
NewLexerTypeAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func NewLexerTypeAction(thetype int) *LexerTypeAction {$/;"	f	package:antlr	typeref:typename:*LexerTypeAction
NewLimit_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewLimit_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState int/;"	f	package:sqliteparser	typeref:typename:*Limit_stmtContext
NewLiteral_valueContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewLiteral_valueContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState /;"	f	package:sqliteparser	typeref:typename:*Literal_valueContext
NewLoopEndState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func NewLoopEndState() *LoopEndState {$/;"	f	package:antlr	typeref:typename:*LoopEndState
NewMD5	vendor/github.com/google/uuid/hash.go	/^func NewMD5(space UUID, data []byte) UUID {$/;"	f	package:uuid	typeref:typename:UUID
NewModule_argumentContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewModule_argumentContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingStat/;"	f	package:sqliteparser	typeref:typename:*Module_argumentContext
NewModule_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewModule_nameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*Module_nameContext
NewMux	vendor/github.com/go-chi/chi/mux.go	/^func NewMux() *Mux {$/;"	f	package:chi	typeref:typename:*Mux
NewNameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewNameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState int) *Nam/;"	f	package:sqliteparser	typeref:typename:*NameContext
NewNoViableAltException	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^func NewNoViableAltException(recognizer Parser, input TokenStream, startToken Token, offendingTo/;"	f	package:antlr	typeref:typename:*NoViableAltException
NewNotSetTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func NewNotSetTransition(target ATNState, set *IntervalSet) *NotSetTransition {$/;"	f	package:antlr	typeref:typename:*NotSetTransition
NewOR	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func NewOR(a, b SemanticContext) *OR {$/;"	f	package:antlr	typeref:typename:*OR
NewOffsetContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewOffsetContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState int) *O/;"	f	package:sqliteparser	typeref:typename:*OffsetContext
NewOrder_by_exprContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewOrder_by_exprContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState /;"	f	package:sqliteparser	typeref:typename:*Order_by_exprContext
NewOrder_by_expr_asc_descContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewOrder_by_expr_asc_descContext(parser antlr.Parser, parent antlr.ParserRuleContext, invok/;"	f	package:sqliteparser	typeref:typename:*Order_by_expr_asc_descContext
NewOrder_by_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewOrder_by_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState /;"	f	package:sqliteparser	typeref:typename:*Order_by_stmtContext
NewOrderedATNConfigSet	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func NewOrderedATNConfigSet() *OrderedATNConfigSet {$/;"	f	package:antlr	typeref:typename:*OrderedATNConfigSet
NewOrdering_termContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewOrdering_termContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState /;"	f	package:sqliteparser	typeref:typename:*Ordering_termContext
NewOver_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewOver_clauseContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*Over_clauseContext
NewParams	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^func NewParams(t paramsType) Params {$/;"	f	package:shared	typeref:typename:Params
NewParseCancellationException	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^func NewParseCancellationException() *ParseCancellationException {$/;"	f	package:antlr	typeref:typename:*ParseCancellationException
NewParseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewParseContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState int) *Pa/;"	f	package:sqliteparser	typeref:typename:*ParseContext
NewParseTreeWalker	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func NewParseTreeWalker() *ParseTreeWalker {$/;"	f	package:antlr	typeref:typename:*ParseTreeWalker
NewParserATNSimulator	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func NewParserATNSimulator(parser Parser, atn *ATN, decisionToDFA []*DFA, sharedContextCache *Pr/;"	f	package:antlr	typeref:typename:*ParserATNSimulator
NewPartition_byContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewPartition_byContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState i/;"	f	package:sqliteparser	typeref:typename:*Partition_byContext
NewPlusBlockStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func NewPlusBlockStartState() *PlusBlockStartState {$/;"	f	package:antlr	typeref:typename:*PlusBlockStartState
NewPlusLoopbackState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func NewPlusLoopbackState() *PlusLoopbackState {$/;"	f	package:antlr	typeref:typename:*PlusLoopbackState
NewPragma_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewPragma_nameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*Pragma_nameContext
NewPragma_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewPragma_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*Pragma_stmtContext
NewPragma_valueContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewPragma_valueContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState i/;"	f	package:sqliteparser	typeref:typename:*Pragma_valueContext
NewPrecedencePredicate	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func NewPrecedencePredicate(precedence int) *PrecedencePredicate {$/;"	f	package:antlr	typeref:typename:*PrecedencePredicate
NewPrecedencePredicateTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func NewPrecedencePredicateTransition(target ATNState, precedence int) *PrecedencePredicateTrans/;"	f	package:antlr	typeref:typename:*PrecedencePredicateTransition
NewPredPrediction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^func NewPredPrediction(pred SemanticContext, alt int) *PredPrediction {$/;"	f	package:antlr	typeref:typename:*PredPrediction
NewPredicate	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func NewPredicate(ruleIndex, predIndex int, isCtxDependent bool) *Predicate {$/;"	f	package:antlr	typeref:typename:*Predicate
NewPredicateTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func NewPredicateTransition(target ATNState, ruleIndex, predIndex int, isCtxDependent bool) *Pre/;"	f	package:antlr	typeref:typename:*PredicateTransition
NewPredictionContextCache	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func NewPredictionContextCache() *PredictionContextCache {$/;"	f	package:antlr	typeref:typename:*PredictionContextCache
NewProxyErrorListener	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^func NewProxyErrorListener(delegates []ErrorListener) *ProxyErrorListener {$/;"	f	package:antlr	typeref:typename:*ProxyErrorListener
NewQualified_table_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewQualified_table_nameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokin/;"	f	package:sqliteparser	typeref:typename:*Qualified_table_nameContext
NewRaise_functionContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewRaise_functionContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState/;"	f	package:sqliteparser	typeref:typename:*Raise_functionContext
NewRandom	vendor/github.com/google/uuid/version4.go	/^func NewRandom() (UUID, error) {$/;"	f	package:uuid	typeref:typename:(UUID, error)
NewRandomFromReader	vendor/github.com/google/uuid/version4.go	/^func NewRandomFromReader(r io.Reader) (UUID, error) {$/;"	f	package:uuid	typeref:typename:(UUID, error)
NewRangeTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func NewRangeTransition(target ATNState, start, stop int) *RangeTransition {$/;"	f	package:antlr	typeref:typename:*RangeTransition
NewReader	vendor/github.com/klauspost/compress/flate/inflate.go	/^func NewReader(r io.Reader) io.ReadCloser {$/;"	f	package:flate	typeref:typename:io.ReadCloser
NewReaderDict	vendor/github.com/klauspost/compress/flate/inflate.go	/^func NewReaderDict(r io.Reader, dict []byte) io.ReadCloser {$/;"	f	package:flate	typeref:typename:io.ReadCloser
NewRecursive_cteContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewRecursive_cteContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState /;"	f	package:sqliteparser	typeref:typename:*Recursive_cteContext
NewRecursive_selectContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewRecursive_selectContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingSta/;"	f	package:sqliteparser	typeref:typename:*Recursive_selectContext
NewReindex_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewReindex_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState i/;"	f	package:sqliteparser	typeref:typename:*Reindex_stmtContext
NewRelease_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewRelease_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState i/;"	f	package:sqliteparser	typeref:typename:*Release_stmtContext
NewReplaceOp	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func NewReplaceOp(from, to int, text string, stream TokenStream) *ReplaceOp {$/;"	f	package:antlr	typeref:typename:*ReplaceOp
NewResult	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/result.go	/^func NewResult(id, changes int64) *result {$/;"	f	package:shared	typeref:typename:*result
NewResult_columnContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewResult_columnContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState /;"	f	package:sqliteparser	typeref:typename:*Result_columnContext
NewReturning_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewReturning_clauseContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingSta/;"	f	package:sqliteparser	typeref:typename:*Returning_clauseContext
NewRollback_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewRollback_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState /;"	f	package:sqliteparser	typeref:typename:*Rollback_stmtContext
NewRouteContext	vendor/github.com/go-chi/chi/context.go	/^func NewRouteContext() *Context {$/;"	f	package:chi	typeref:typename:*Context
NewRouter	vendor/github.com/go-chi/chi/chi.go	/^func NewRouter() *Mux {$/;"	f	package:chi	typeref:typename:*Mux
NewRows	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/rows.go	/^func NewRows(result rowsProvider) driver.Rows {$/;"	f	package:shared	typeref:typename:driver.Rows
NewRuleStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func NewRuleStartState() *RuleStartState {$/;"	f	package:antlr	typeref:typename:*RuleStartState
NewRuleStopState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func NewRuleStopState() *RuleStopState {$/;"	f	package:antlr	typeref:typename:*RuleStopState
NewRuleTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func NewRuleTransition(ruleStart ATNState, ruleIndex, precedence int, followState ATNState) *Rul/;"	f	package:antlr	typeref:typename:*RuleTransition
NewSHA1	vendor/github.com/google/uuid/hash.go	/^func NewSHA1(space UUID, data []byte) UUID {$/;"	f	package:uuid	typeref:typename:UUID
NewSQLiteLexer	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^func NewSQLiteLexer(input antlr.CharStream) *SQLiteLexer {$/;"	f	package:sqliteparser	typeref:typename:*SQLiteLexer
NewSQLiteParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewSQLiteParser(input antlr.TokenStream) *SQLiteParser {$/;"	f	package:sqliteparser	typeref:typename:*SQLiteParser
NewSavepoint_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewSavepoint_nameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState/;"	f	package:sqliteparser	typeref:typename:*Savepoint_nameContext
NewSavepoint_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewSavepoint_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState/;"	f	package:sqliteparser	typeref:typename:*Savepoint_stmtContext
NewSchema_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewSchema_nameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*Schema_nameContext
NewSelect_coreContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewSelect_coreContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*Select_coreContext
NewSelect_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewSelect_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*Select_stmtContext
NewSetTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func NewSetTransition(target ATNState, set *IntervalSet) *SetTransition {$/;"	f	package:antlr	typeref:typename:*SetTransition
NewSigned_numberContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewSigned_numberContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState /;"	f	package:sqliteparser	typeref:typename:*Signed_numberContext
NewSimState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func NewSimState() *SimState {$/;"	f	package:antlr	typeref:typename:*SimState
NewSimple_funcContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewSimple_funcContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*Simple_funcContext
NewSimple_function_invocationContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewSimple_function_invocationContext(parser antlr.Parser, parent antlr.ParserRuleContext, i/;"	f	package:sqliteparser	typeref:typename:*Simple_function_invocationContext
NewSimple_select_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewSimple_select_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingS/;"	f	package:sqliteparser	typeref:typename:*Simple_select_stmtContext
NewSql_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewSql_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState int) /;"	f	package:sqliteparser	typeref:typename:*Sql_stmtContext
NewSql_stmt_listContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewSql_stmt_listContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState /;"	f	package:sqliteparser	typeref:typename:*Sql_stmt_listContext
NewStarBlockStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func NewStarBlockStartState() *StarBlockStartState {$/;"	f	package:antlr	typeref:typename:*StarBlockStartState
NewStarLoopEntryState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func NewStarLoopEntryState() *StarLoopEntryState {$/;"	f	package:antlr	typeref:typename:*StarLoopEntryState
NewStarLoopbackState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func NewStarLoopbackState() *StarLoopbackState {$/;"	f	package:antlr	typeref:typename:*StarLoopbackState
NewStatelessWriter	vendor/github.com/klauspost/compress/flate/stateless.go	/^func NewStatelessWriter(dst io.Writer) io.WriteCloser {$/;"	f	package:flate	typeref:typename:io.WriteCloser
NewString	vendor/github.com/google/uuid/version4.go	/^func NewString() string {$/;"	f	package:uuid	typeref:typename:string
NewTable_aliasContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewTable_aliasContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*Table_aliasContext
NewTable_constraintContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewTable_constraintContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingSta/;"	f	package:sqliteparser	typeref:typename:*Table_constraintContext
NewTable_function_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewTable_function_nameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invoking/;"	f	package:sqliteparser	typeref:typename:*Table_function_nameContext
NewTable_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewTable_nameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState int/;"	f	package:sqliteparser	typeref:typename:*Table_nameContext
NewTable_or_index_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewTable_or_index_nameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invoking/;"	f	package:sqliteparser	typeref:typename:*Table_or_index_nameContext
NewTable_or_subqueryContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewTable_or_subqueryContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingSt/;"	f	package:sqliteparser	typeref:typename:*Table_or_subqueryContext
NewTerminalNodeImpl	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func NewTerminalNodeImpl(symbol Token) *TerminalNodeImpl {$/;"	f	package:antlr	typeref:typename:*TerminalNodeImpl
NewTokenStreamRewriter	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func NewTokenStreamRewriter(tokens TokenStream) *TokenStreamRewriter {$/;"	f	package:antlr	typeref:typename:*TokenStreamRewriter
NewTokensStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func NewTokensStartState() *TokensStartState {$/;"	f	package:antlr	typeref:typename:*TokensStartState
NewTraceListener	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/trace_listener.go	/^func NewTraceListener(parser *BaseParser) *TraceListener {$/;"	f	package:antlr	typeref:typename:*TraceListener
NewTransaction_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewTransaction_nameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingSta/;"	f	package:sqliteparser	typeref:typename:*Transaction_nameContext
NewTrigger_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewTrigger_nameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState i/;"	f	package:sqliteparser	typeref:typename:*Trigger_nameContext
NewType_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewType_nameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState int)/;"	f	package:sqliteparser	typeref:typename:*Type_nameContext
NewUUID	vendor/github.com/google/uuid/version1.go	/^func NewUUID() (UUID, error) {$/;"	f	package:uuid	typeref:typename:(UUID, error)
NewUnary_operatorContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewUnary_operatorContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState/;"	f	package:sqliteparser	typeref:typename:*Unary_operatorContext
NewUpdate_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewUpdate_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*Update_stmtContext
NewUpdate_stmt_limitedContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewUpdate_stmt_limitedContext(parser antlr.Parser, parent antlr.ParserRuleContext, invoking/;"	f	package:sqliteparser	typeref:typename:*Update_stmt_limitedContext
NewUpsert_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewUpsert_clauseContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState /;"	f	package:sqliteparser	typeref:typename:*Upsert_clauseContext
NewVacuum_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewVacuum_stmtContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*Vacuum_stmtContext
NewValue_rowContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewValue_rowContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState int)/;"	f	package:sqliteparser	typeref:typename:*Value_rowContext
NewValues_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewValues_clauseContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState /;"	f	package:sqliteparser	typeref:typename:*Values_clauseContext
NewView_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewView_nameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState int)/;"	f	package:sqliteparser	typeref:typename:*View_nameContext
NewWildcardTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func NewWildcardTransition(target ATNState) *WildcardTransition {$/;"	f	package:antlr	typeref:typename:*WildcardTransition
NewWindow_defnContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewWindow_defnContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*Window_defnContext
NewWindow_functionContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewWindow_functionContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingStat/;"	f	package:sqliteparser	typeref:typename:*Window_functionContext
NewWindow_function_invocationContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewWindow_function_invocationContext(parser antlr.Parser, parent antlr.ParserRuleContext, i/;"	f	package:sqliteparser	typeref:typename:*Window_function_invocationContext
NewWindow_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewWindow_nameContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*Window_nameContext
NewWith_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func NewWith_clauseContext(parser antlr.Parser, parent antlr.ParserRuleContext, invokingState in/;"	f	package:sqliteparser	typeref:typename:*With_clauseContext
NewWriter	vendor/github.com/klauspost/compress/flate/deflate.go	/^func NewWriter(w io.Writer, level int) (*Writer, error) {$/;"	f	package:flate	typeref:typename:(*Writer, error)
NewWriterDict	vendor/github.com/klauspost/compress/flate/deflate.go	/^func NewWriterDict(w io.Writer, level int, dict []byte) (*Writer, error) {$/;"	f	package:flate	typeref:typename:(*Writer, error)
Next	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/rows.go	/^func (r *rows) Next(dest []driver.Value) error {$/;"	f	struct:shared.rows	typeref:typename:error
Next	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (r *rows) Next(dest []driver.Value) error {$/;"	f	struct:ws.rows	typeref:typename:error
Next	vendor/golang.org/x/exp/slices/sort.go	/^func (r *xorshift) Next() uint64 {$/;"	f	type:slices.xorshift	typeref:typename:uint64
NextResultSet	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/rows.go	/^func (r *rows) NextResultSet() error {$/;"	f	struct:shared.rows	typeref:typename:error
NextToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) NextToken() Token {$/;"	f	struct:antlr.BaseLexer	typeref:typename:Token
NextToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token_source.go	/^	NextToken() Token$/;"	n	interface:antlr.TokenSource	typeref:typename:Token
NextTokenOnChannel	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) NextTokenOnChannel(i, channel int) int {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:int
NextTokenWithinRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	NextTokenWithinRule *IntervalSet$/;"	m	struct:antlr.BaseATNState	typeref:typename:*IntervalSet
NextTokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^func (a *ATN) NextTokens(s ATNState, ctx RuleContext) *IntervalSet {$/;"	f	struct:antlr.ATN	typeref:typename:*IntervalSet
NextTokensInContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^func (a *ATN) NextTokensInContext(s ATNState, ctx RuleContext) *IntervalSet {$/;"	f	struct:antlr.ATN	typeref:typename:*IntervalSet
NextTokensNoContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^func (a *ATN) NextTokensNoContext(s ATNState) *IntervalSet {$/;"	f	struct:antlr.ATN	typeref:typename:*IntervalSet
Nil	vendor/github.com/google/uuid/hash.go	/^	Nil           UUID \/\/ empty UUID, all zeros$/;"	v	package:uuid	typeref:typename:UUID
NoCompression	vendor/github.com/klauspost/compress/flate/deflate.go	/^	NoCompression      = 0$/;"	c	package:flate
NoViableAltException	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^type NoViableAltException struct {$/;"	s	package:antlr
NodeID	vendor/github.com/google/uuid/node.go	/^func (uuid UUID) NodeID() []byte {$/;"	f	unknown:uuid.UUID	typeref:typename:[]byte
NodeID	vendor/github.com/google/uuid/node.go	/^func NodeID() []byte {$/;"	f	package:uuid	typeref:typename:[]byte
NodeInterface	vendor/github.com/google/uuid/node.go	/^func NodeInterface() string {$/;"	f	package:uuid	typeref:typename:string
NotFound	vendor/github.com/go-chi/chi/chi.go	/^	NotFound(h http.HandlerFunc)$/;"	n	interface:chi.Router
NotFound	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) NotFound(handlerFn http.HandlerFunc) {$/;"	f	struct:chi.Mux
NotFoundHandler	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) NotFoundHandler() http.HandlerFunc {$/;"	f	struct:chi.Mux	typeref:typename:http.HandlerFunc
NotSetTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^type NotSetTransition struct {$/;"	s	package:antlr
Note	internal/database/models.go	/^	Note      string$/;"	m	struct:database.Note	typeref:typename:string
Note	internal/database/models.go	/^type Note struct {$/;"	s	package:database
Note	internal/database/notes.sql.go	/^	Note      string$/;"	m	struct:database.CreateNoteParams	typeref:typename:string
Note	models.go	/^	Note      string    `json:"note"`$/;"	m	struct:main.Note	typeref:typename:string
Note	models.go	/^type Note struct {$/;"	s	package:main
Notely	static/index.html	/^    <h1>Notely<\/h1>$/;"	h
Notely	static/index.html	/^    <title>Notely<\/title>$/;"	j
NotifyErrorListeners	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	NotifyErrorListeners(string, Token, RecognitionException)$/;"	n	interface:antlr.Parser
NotifyErrorListeners	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) NotifyErrorListeners(msg string, offendingToken Token, err RecognitionExcep/;"	f	struct:antlr.BaseParser
NullUUID	vendor/github.com/google/uuid/null.go	/^type NullUUID struct {$/;"	s	package:uuid
NumInput	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (s *hranaV2Stmt) NumInput() int {$/;"	f	struct:hranaV2.hranaV2Stmt	typeref:typename:int
NumInput	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (s stmt) NumInput() int {$/;"	f	struct:ws.stmt	typeref:typename:int
OFFSET_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OFFSET_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
OFFSET_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OFFSET_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ILimit_stmtContext	typeref:typename:antlr.TerminalNode
OFFSET_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) OFFSET_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
OFFSET_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Limit_stmtContext) OFFSET_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Limit_stmtContext	typeref:typename:antlr.TerminalNode
OF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OF_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
OF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OF_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
OF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) OF_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
OF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) OF_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
ON_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ON_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IConflict_clauseContext	typeref:typename:antlr.TerminalNode
ON_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ON_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_index_stmtContext	typeref:typename:antlr.TerminalNode
ON_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ON_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
ON_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ON_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IJoin_constraintContext	typeref:typename:antlr.TerminalNode
ON_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ON_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
ON_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ON_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:antlr.TerminalNode
ON_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ON_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:antlr.TerminalNode
ON_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Conflict_clauseContext) ON_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Conflict_clauseContext	typeref:typename:antlr.TerminalNode
ON_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) ON_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:antlr.TerminalNode
ON_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) ON_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
ON_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) ON_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.TerminalNode
ON_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_constraintContext) ON_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Join_constraintContext	typeref:typename:antlr.TerminalNode
ON_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) ON_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
ON_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) ON_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAggregate_function_invocationContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAny_nameContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_name_listContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_index_stmtContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_view_stmtContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICte_table_nameContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFilter_clauseContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IJoin_constraintContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IOver_clauseContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IPragma_stmtContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IRaise_functionContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IRecursive_cteContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.ISimple_function_invocationContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.ITable_constraintContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.ITable_or_subqueryContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IType_nameContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IValue_rowContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_defnContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_function_invocationContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ICommon_table_expressionContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OPEN_PAR(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IWith_clauseContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Aggregate_function_invocationContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Aggregate_function_invocationContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Any_nameContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Any_nameContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_name_listContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_name_listContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_expressionContext) OPEN_PAR(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Common_table_expressionContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_view_stmtContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Cte_table_nameContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Cte_table_nameContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Filter_clauseContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Filter_clauseContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_constraintContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Join_constraintContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Over_clauseContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Over_clauseContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_stmtContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Pragma_stmtContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Raise_functionContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Raise_functionContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Recursive_cteContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Recursive_cteContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_function_invocationContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Simple_function_invocationContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Table_constraintContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Type_nameContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Type_nameContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Value_rowContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Value_rowContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_defnContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_defnContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) OPEN_PAR(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_function_invocationContext) OPEN_PAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_function_invocationContext	typeref:typename:antlr.TerminalNode
OPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *With_clauseContext) OPEN_PAR(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.With_clauseContext	typeref:typename:antlr.TerminalNode
OR	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^type OR struct {$/;"	s	package:antlr
ORDER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ORDER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
ORDER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ORDER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IOrder_by_exprContext	typeref:typename:antlr.TerminalNode
ORDER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ORDER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IOrder_by_expr_asc_descContext	typeref:typename:antlr.TerminalNode
ORDER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ORDER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IOrder_by_stmtContext	typeref:typename:antlr.TerminalNode
ORDER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ORDER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IOver_clauseContext	typeref:typename:antlr.TerminalNode
ORDER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ORDER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_defnContext	typeref:typename:antlr.TerminalNode
ORDER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) ORDER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
ORDER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_exprContext) ORDER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Order_by_exprContext	typeref:typename:antlr.TerminalNode
ORDER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_expr_asc_descContext) ORDER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Order_by_expr_asc_descContext	typeref:typename:antlr.TerminalNode
ORDER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_stmtContext) ORDER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Order_by_stmtContext	typeref:typename:antlr.TerminalNode
ORDER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Over_clauseContext) ORDER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Over_clauseContext	typeref:typename:antlr.TerminalNode
ORDER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_defnContext) ORDER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_defnContext	typeref:typename:antlr.TerminalNode
OR_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OR_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
OR_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OR_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:antlr.TerminalNode
OR_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OR_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
OR_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OR_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:antlr.TerminalNode
OR_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OR_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:antlr.TerminalNode
OR_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) OR_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
OR_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) OR_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:antlr.TerminalNode
OR_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) OR_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
OR_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) OR_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:antlr.TerminalNode
OR_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) OR_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:antlr.TerminalNode
OTHERS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OTHERS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_specContext	typeref:typename:antlr.TerminalNode
OTHERS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_specContext) OTHERS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_specContext	typeref:typename:antlr.TerminalNode
OUTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OUTER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IJoin_operatorContext	typeref:typename:antlr.TerminalNode
OUTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OUTER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
OUTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_operatorContext) OUTER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Join_operatorContext	typeref:typename:antlr.TerminalNode
OUTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) OUTER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
OVER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OVER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
OVER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OVER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IOver_clauseContext	typeref:typename:antlr.TerminalNode
OVER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OVER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:antlr.TerminalNode
OVER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	OVER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_function_invocationContext	typeref:typename:antlr.TerminalNode
OVER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) OVER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
OVER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Over_clauseContext) OVER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Over_clauseContext	typeref:typename:antlr.TerminalNode
OVER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) OVER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:antlr.TerminalNode
OVER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_function_invocationContext) OVER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_function_invocationContext	typeref:typename:antlr.TerminalNode
ObjEqComparator	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/comparators.go	/^type ObjEqComparator[T Collectable[T]] struct{}$/;"	t	package:antlr	typeref:typename:[T Collectable[T]] struct{}
Offset	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Offset() IOffsetContext$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:IOffsetContext
Offset	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Offset() (localctx IOffsetContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IOffsetContext)
Offset	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) Offset() IOffsetContext {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:IOffsetContext
OffsetContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type OffsetContext struct {$/;"	s	package:sqliteparser
OnClose	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^func (c WebSocket) OnClose(fn func(CloseEvent)) (remove func()) {$/;"	f	struct:wsjs.WebSocket	typeref:typename:(remove func())
OnError	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^func (c WebSocket) OnError(fn func(e js.Value)) (remove func()) {$/;"	f	struct:wsjs.WebSocket	typeref:typename:(remove func())
OnMessage	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^func (c WebSocket) OnMessage(fn func(m MessageEvent)) (remove func()) {$/;"	f	struct:wsjs.WebSocket	typeref:typename:(remove func())
OnOpen	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^func (c WebSocket) OnOpen(fn func(e js.Value)) (remove func()) {$/;"	f	struct:wsjs.WebSocket	typeref:typename:(remove func())
Open	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^func (d Driver) Open(dbUrl string) (driver.Conn, error) {$/;"	f	struct:libsql.Driver	typeref:typename:(driver.Conn, error)
OptimizeConfigs	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	OptimizeConfigs(interpreter *BaseATNSimulator)$/;"	n	interface:antlr.ATNConfigSet
OptimizeConfigs	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) OptimizeConfigs(interpreter *BaseATNSimulator) {$/;"	f	struct:antlr.BaseATNConfigSet
Option	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^type Option interface {$/;"	i	package:libsql
Options	vendor/github.com/go-chi/chi/chi.go	/^	Options(pattern string, h http.HandlerFunc)$/;"	n	interface:chi.Router
Options	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) Options(pattern string, handlerFn http.HandlerFunc) {$/;"	f	struct:chi.Mux
Options	vendor/github.com/go-chi/cors/cors.go	/^type Options struct {$/;"	s	package:cors
OptionsPassthrough	vendor/github.com/go-chi/cors/cors.go	/^	OptionsPassthrough bool$/;"	m	struct:cors.Options	typeref:typename:bool
Order_by_expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Order_by_expr() IOrder_by_exprContext$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:IOrder_by_exprContext
Order_by_expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Order_by_expr() (localctx IOrder_by_exprContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IOrder_by_exprContext)
Order_by_expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) Order_by_expr() IOrder_by_exprContext {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:IOrder_by_exprContext
Order_by_exprContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Order_by_exprContext struct {$/;"	s	package:sqliteparser
Order_by_expr_asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Order_by_expr_asc_desc() IOrder_by_expr_asc_descContext$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:IOrder_by_expr_asc_descContext
Order_by_expr_asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Order_by_expr_asc_desc() (localctx IOrder_by_expr_asc_descContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IOrder_by_expr_asc_descContext)
Order_by_expr_asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) Order_by_expr_asc_desc() IOrder_by_expr_asc_descContext {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:IOrder_by_expr_asc_descContext
Order_by_expr_asc_descContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Order_by_expr_asc_descContext struct {$/;"	s	package:sqliteparser
Order_by_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Order_by_stmt() IOrder_by_stmtContext$/;"	n	interface:sqliteparser.ICompound_select_stmtContext	typeref:typename:IOrder_by_stmtContext
Order_by_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Order_by_stmt() IOrder_by_stmtContext$/;"	n	interface:sqliteparser.IDelete_stmt_limitedContext	typeref:typename:IOrder_by_stmtContext
Order_by_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Order_by_stmt() IOrder_by_stmtContext$/;"	n	interface:sqliteparser.ISelect_stmtContext	typeref:typename:IOrder_by_stmtContext
Order_by_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Order_by_stmt() IOrder_by_stmtContext$/;"	n	interface:sqliteparser.ISimple_select_stmtContext	typeref:typename:IOrder_by_stmtContext
Order_by_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Order_by_stmt() IOrder_by_stmtContext$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:IOrder_by_stmtContext
Order_by_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Order_by_stmt() (localctx IOrder_by_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IOrder_by_stmtContext)
Order_by_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_select_stmtContext) Order_by_stmt() IOrder_by_stmtContext {$/;"	f	struct:sqliteparser.Compound_select_stmtContext	typeref:typename:IOrder_by_stmtContext
Order_by_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmt_limitedContext) Order_by_stmt() IOrder_by_stmtContext {$/;"	f	struct:sqliteparser.Delete_stmt_limitedContext	typeref:typename:IOrder_by_stmtContext
Order_by_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_stmtContext) Order_by_stmt() IOrder_by_stmtContext {$/;"	f	struct:sqliteparser.Select_stmtContext	typeref:typename:IOrder_by_stmtContext
Order_by_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_select_stmtContext) Order_by_stmt() IOrder_by_stmtContext {$/;"	f	struct:sqliteparser.Simple_select_stmtContext	typeref:typename:IOrder_by_stmtContext
Order_by_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) Order_by_stmt() IOrder_by_stmtContext {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:IOrder_by_stmtContext
Order_by_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Order_by_stmtContext struct {$/;"	s	package:sqliteparser
Ordered	vendor/golang.org/x/exp/constraints/constraints.go	/^type Ordered interface {$/;"	i	package:constraints
OrderedATNConfigSet	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^type OrderedATNConfigSet struct {$/;"	s	package:antlr
Ordering_term	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Ordering_term(i int) IOrdering_termContext$/;"	n	interface:sqliteparser.IOrder_by_stmtContext	typeref:typename:IOrdering_termContext
Ordering_term	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Ordering_term(i int) IOrdering_termContext$/;"	n	interface:sqliteparser.IOver_clauseContext	typeref:typename:IOrdering_termContext
Ordering_term	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Ordering_term(i int) IOrdering_termContext$/;"	n	interface:sqliteparser.IWindow_defnContext	typeref:typename:IOrdering_termContext
Ordering_term	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Ordering_term() (localctx IOrdering_termContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IOrdering_termContext)
Ordering_term	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_stmtContext) Ordering_term(i int) IOrdering_termContext {$/;"	f	struct:sqliteparser.Order_by_stmtContext	typeref:typename:IOrdering_termContext
Ordering_term	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Over_clauseContext) Ordering_term(i int) IOrdering_termContext {$/;"	f	struct:sqliteparser.Over_clauseContext	typeref:typename:IOrdering_termContext
Ordering_term	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_defnContext) Ordering_term(i int) IOrdering_termContext {$/;"	f	struct:sqliteparser.Window_defnContext	typeref:typename:IOrdering_termContext
Ordering_termContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Ordering_termContext struct {$/;"	s	package:sqliteparser
Org	vendor/github.com/google/uuid/dce.go	/^	Org    = Domain(2)$/;"	c	package:uuid
OriginPatterns	vendor/nhooyr.io/websocket/accept.go	/^	OriginPatterns []string$/;"	m	struct:websocket.AcceptOptions	typeref:typename:[]string
OriginPatterns	vendor/nhooyr.io/websocket/accept_js.go	/^	OriginPatterns       []string$/;"	m	struct:websocket.AcceptOptions	typeref:typename:[]string
Over_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Over_clause() IOver_clauseContext$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:IOver_clauseContext
Over_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Over_clause() (localctx IOver_clauseContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IOver_clauseContext)
Over_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) Over_clause() IOver_clauseContext {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:IOver_clauseContext
Over_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Over_clauseContext struct {$/;"	s	package:sqliteparser
Overload	vendor/github.com/joho/godotenv/godotenv.go	/^func Overload(filenames ...string) (err error) {$/;"	f	package:godotenv	typeref:typename:(err error)
PARTITION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PARTITION_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
PARTITION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PARTITION_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IOver_clauseContext	typeref:typename:antlr.TerminalNode
PARTITION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PARTITION_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IPartition_byContext	typeref:typename:antlr.TerminalNode
PARTITION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PARTITION_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_defnContext	typeref:typename:antlr.TerminalNode
PARTITION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) PARTITION_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
PARTITION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Over_clauseContext) PARTITION_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Over_clauseContext	typeref:typename:antlr.TerminalNode
PARTITION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Partition_byContext) PARTITION_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Partition_byContext	typeref:typename:antlr.TerminalNode
PARTITION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_defnContext) PARTITION_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_defnContext	typeref:typename:antlr.TerminalNode
PERCENT_RANK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PERCENT_RANK_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
PERCENT_RANK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PERCENT_RANK_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:antlr.TerminalNode
PERCENT_RANK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) PERCENT_RANK_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
PERCENT_RANK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) PERCENT_RANK_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:antlr.TerminalNode
PIPE	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PIPE() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
PIPE	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) PIPE() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
PIPE2	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PIPE2() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
PIPE2	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) PIPE2() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
PLAN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PLAN_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
PLAN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PLAN_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:antlr.TerminalNode
PLAN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) PLAN_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
PLAN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) PLAN_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:antlr.TerminalNode
PLUS	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PLUS() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
PLUS	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PLUS() antlr.TerminalNode$/;"	n	interface:sqliteparser.ISigned_numberContext	typeref:typename:antlr.TerminalNode
PLUS	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PLUS() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUnary_operatorContext	typeref:typename:antlr.TerminalNode
PLUS	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) PLUS() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
PLUS	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Signed_numberContext) PLUS() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Signed_numberContext	typeref:typename:antlr.TerminalNode
PLUS	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Unary_operatorContext) PLUS() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Unary_operatorContext	typeref:typename:antlr.TerminalNode
PRAGMA_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PRAGMA_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
PRAGMA_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PRAGMA_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IPragma_stmtContext	typeref:typename:antlr.TerminalNode
PRAGMA_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) PRAGMA_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
PRAGMA_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_stmtContext) PRAGMA_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Pragma_stmtContext	typeref:typename:antlr.TerminalNode
PRECEDING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PRECEDING_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_leftContext	typeref:typename:antlr.TerminalNode
PRECEDING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PRECEDING_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_rightContext	typeref:typename:antlr.TerminalNode
PRECEDING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PRECEDING_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_singleContext	typeref:typename:antlr.TerminalNode
PRECEDING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PRECEDING_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
PRECEDING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_leftContext) PRECEDING_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_leftContext	typeref:typename:antlr.TerminalNode
PRECEDING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_rightContext) PRECEDING_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_rightContext	typeref:typename:antlr.TerminalNode
PRECEDING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_singleContext) PRECEDING_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_singleContext	typeref:typename:antlr.TerminalNode
PRECEDING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) PRECEDING_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
PRIMARY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PRIMARY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:antlr.TerminalNode
PRIMARY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PRIMARY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
PRIMARY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	PRIMARY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ITable_constraintContext	typeref:typename:antlr.TerminalNode
PRIMARY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) PRIMARY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:antlr.TerminalNode
PRIMARY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) PRIMARY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
PRIMARY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) PRIMARY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Table_constraintContext	typeref:typename:antlr.TerminalNode
Params	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^type Params struct {$/;"	s	package:shared
ParamsInfo	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^type ParamsInfo struct {$/;"	s	package:shared
Parse	vendor/github.com/google/uuid/uuid.go	/^func Parse(s string) (UUID, error) {$/;"	f	package:uuid	typeref:typename:(UUID, error)
Parse	vendor/github.com/joho/godotenv/godotenv.go	/^func Parse(r io.Reader) (map[string]string, error) {$/;"	f	package:godotenv	typeref:typename:(map[string]string, error)
Parse	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Parse() (localctx IParseContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IParseContext)
ParseBytes	vendor/github.com/google/uuid/uuid.go	/^func ParseBytes(b []byte) (UUID, error) {$/;"	f	package:uuid	typeref:typename:(UUID, error)
ParseCancellationException	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^type ParseCancellationException struct {$/;"	s	package:antlr
ParseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type ParseContext struct {$/;"	s	package:sqliteparser
ParseStatement	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^func ParseStatement(sql string) ([]string, []ParamsInfo, error) {$/;"	f	package:shared	typeref:typename:([]string, []ParamsInfo, error)
ParseStatementAndArgs	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^func ParseStatementAndArgs(sql string, args []driver.NamedValue) ([]string, []Params, error) {$/;"	f	package:shared	typeref:typename:([]string, []Params, error)
ParseTree	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^type ParseTree interface {$/;"	i	package:antlr
ParseTreeListener	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^type ParseTreeListener interface {$/;"	i	package:antlr
ParseTreeVisitor	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^type ParseTreeVisitor interface {$/;"	i	package:antlr
ParseTreeWalker	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^type ParseTreeWalker struct {$/;"	s	package:antlr
ParseTreeWalkerDefault	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^var ParseTreeWalkerDefault = NewParseTreeWalker()$/;"	v	package:antlr
Parser	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^type Parser interface {$/;"	i	package:antlr
ParserATNSimulator	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^type ParserATNSimulator struct {$/;"	s	package:antlr
ParserATNSimulatorDFADebug	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^	ParserATNSimulatorDFADebug    = false$/;"	v	package:antlr
ParserATNSimulatorDebug	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^	ParserATNSimulatorDebug       = false$/;"	v	package:antlr
ParserATNSimulatorRetryDebug	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^	ParserATNSimulatorRetryDebug  = false$/;"	v	package:antlr
ParserATNSimulatorTraceATNSim	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^	ParserATNSimulatorTraceATNSim = false$/;"	v	package:antlr
ParserRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^type ParserRuleContext interface {$/;"	i	package:antlr
ParserRuleContextEmpty	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^var ParserRuleContextEmpty = NewBaseParserRuleContext(nil, -1)$/;"	v	package:antlr
Partition_by	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Partition_by() IPartition_byContext$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:IPartition_byContext
Partition_by	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Partition_by() (localctx IPartition_byContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IPartition_byContext)
Partition_by	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) Partition_by() IPartition_byContext {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:IPartition_byContext
Partition_byContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Partition_byContext struct {$/;"	s	package:sqliteparser
Patch	vendor/github.com/go-chi/chi/chi.go	/^	Patch(pattern string, h http.HandlerFunc)$/;"	n	interface:chi.Router
Patch	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) Patch(pattern string, handlerFn http.HandlerFunc) {$/;"	f	struct:chi.Mux
Pattern	vendor/github.com/go-chi/chi/tree.go	/^	Pattern   string$/;"	m	struct:chi.Route	typeref:typename:string
Person	vendor/github.com/google/uuid/dce.go	/^	Person = Domain(0)$/;"	c	package:uuid
Ping	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (h *hranaV2Conn) Ping() error {$/;"	f	struct:hranaV2.hranaV2Conn	typeref:typename:error
Ping	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (c *conn) Ping() error {$/;"	f	struct:ws.conn	typeref:typename:error
Ping	vendor/nhooyr.io/websocket/conn_notjs.go	/^func (c *Conn) Ping(ctx context.Context) error {$/;"	f	struct:websocket.Conn	typeref:typename:error
Ping	vendor/nhooyr.io/websocket/ws_js.go	/^func (c *Conn) Ping(ctx context.Context) error {$/;"	f	struct:websocket.Conn	typeref:typename:error
PingContext	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (h *hranaV2Conn) PingContext(ctx context.Context) error {$/;"	f	struct:hranaV2.hranaV2Conn	typeref:typename:error
PingContext	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (c *conn) PingContext(ctx context.Context) error {$/;"	f	struct:ws.conn	typeref:typename:error
PipelineRequest	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/pipeline_request.go	/^type PipelineRequest struct {$/;"	s	package:hrana
PipelineResponse	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/pipeline_response.go	/^type PipelineResponse struct {$/;"	s	package:hrana
PlusBlockStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^type PlusBlockStartState struct {$/;"	s	package:antlr
PlusLoopbackState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^type PlusLoopbackState struct {$/;"	s	package:antlr
Pop	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func (s *IntStack) Pop() (int, error) {$/;"	f	type:antlr.IntStack	typeref:typename:(int, error)
PopMode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	PopMode() int$/;"	n	interface:antlr.Lexer	typeref:typename:int
PopMode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) PopMode() int {$/;"	f	struct:antlr.BaseLexer	typeref:typename:int
PositinalArgs	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^	PositinalArgs []any$/;"	m	struct:ws.params	typeref:typename:[]any
Positional	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^func (p *Params) Positional() []any {$/;"	f	struct:shared.Params	typeref:typename:[]any
PositionalParametersCount	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^	PositionalParametersCount int$/;"	m	struct:shared.ParamsInfo	typeref:typename:int
Post	vendor/github.com/go-chi/chi/chi.go	/^	Post(pattern string, h http.HandlerFunc)$/;"	n	interface:chi.Router
Post	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) Post(pattern string, handlerFn http.HandlerFunc) {$/;"	f	struct:chi.Mux
Pragma_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Pragma_name() IPragma_nameContext$/;"	n	interface:sqliteparser.IPragma_stmtContext	typeref:typename:IPragma_nameContext
Pragma_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Pragma_name() (localctx IPragma_nameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IPragma_nameContext)
Pragma_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_stmtContext) Pragma_name() IPragma_nameContext {$/;"	f	struct:sqliteparser.Pragma_stmtContext	typeref:typename:IPragma_nameContext
Pragma_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Pragma_nameContext struct {$/;"	s	package:sqliteparser
Pragma_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Pragma_stmt() IPragma_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:IPragma_stmtContext
Pragma_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Pragma_stmt() (localctx IPragma_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IPragma_stmtContext)
Pragma_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Pragma_stmt() IPragma_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:IPragma_stmtContext
Pragma_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Pragma_stmtContext struct {$/;"	s	package:sqliteparser
Pragma_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Pragma_value() IPragma_valueContext$/;"	n	interface:sqliteparser.IPragma_stmtContext	typeref:typename:IPragma_valueContext
Pragma_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Pragma_value() (localctx IPragma_valueContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IPragma_valueContext)
Pragma_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_stmtContext) Pragma_value() IPragma_valueContext {$/;"	f	struct:sqliteparser.Pragma_stmtContext	typeref:typename:IPragma_valueContext
Pragma_valueContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Pragma_valueContext struct {$/;"	s	package:sqliteparser
Precedence & Conventions	vendor/github.com/joho/godotenv/README.md	/^### Precedence & Conventions$/;"	S	section:GoDotEnv ![CI](https://github.com/joho/godotenv/workflows/CI/badge.svg) [![Go Report Card](https://goreportcard.com/badge/github.com/joho/godotenv)](https://goreportcard.com/report/github.com/joho/godotenv)""Usage
PrecedencePredicate	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^type PrecedencePredicate struct {$/;"	s	package:antlr
PrecedencePredicateTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^type PrecedencePredicateTransition struct {$/;"	s	package:antlr
PrecedencePredicatefilterPrecedencePredicates	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func PrecedencePredicatefilterPrecedencePredicates(set *JStore[SemanticContext, Comparator[Seman/;"	f	package:antlr	typeref:typename:[]*PrecedencePredicate
Precpred	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) Precpred(localctx RuleContext, precedence int) bool {$/;"	f	struct:antlr.BaseParser	typeref:typename:bool
Precpred	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^	Precpred(RuleContext, int) bool$/;"	n	interface:antlr.Recognizer	typeref:typename:bool
Precpred	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^func (b *BaseRecognizer) Precpred(localctx RuleContext, precedence int) bool {$/;"	f	struct:antlr.BaseRecognizer	typeref:typename:bool
PredPrediction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^type PredPrediction struct {$/;"	s	package:antlr
Predicate	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^type Predicate struct {$/;"	s	package:antlr
PredicateTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^type PredicateTransition struct {$/;"	s	package:antlr
PredictionContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^type PredictionContext interface {$/;"	i	package:antlr
PredictionContextCache	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^type PredictionContextCache struct {$/;"	s	package:antlr
PredictionModeGetAlts	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_mode.go	/^func PredictionModeGetAlts(altsets []*BitSet) *BitSet {$/;"	f	package:antlr	typeref:typename:*BitSet
PredictionModeGetStateToAltMap	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_mode.go	/^func PredictionModeGetStateToAltMap(configs ATNConfigSet) *AltDict {$/;"	f	package:antlr	typeref:typename:*AltDict
PredictionModeLL	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_mode.go	/^	PredictionModeLL = 1$/;"	c	package:antlr
PredictionModeLLExactAmbigDetection	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_mode.go	/^	PredictionModeLLExactAmbigDetection = 2$/;"	c	package:antlr
PredictionModeSLL	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_mode.go	/^	PredictionModeSLL = 0$/;"	c	package:antlr
PredictionModeallConfigsInRuleStopStates	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_mode.go	/^func PredictionModeallConfigsInRuleStopStates(configs ATNConfigSet) bool {$/;"	f	package:antlr	typeref:typename:bool
PredictionModeallSubsetsConflict	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_mode.go	/^func PredictionModeallSubsetsConflict(altsets []*BitSet) bool {$/;"	f	package:antlr	typeref:typename:bool
PredictionModeallSubsetsEqual	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_mode.go	/^func PredictionModeallSubsetsEqual(altsets []*BitSet) bool {$/;"	f	package:antlr	typeref:typename:bool
PredictionModegetConflictingAltSubsets	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_mode.go	/^func PredictionModegetConflictingAltSubsets(configs ATNConfigSet) []*BitSet {$/;"	f	package:antlr	typeref:typename:[]*BitSet
PredictionModegetSingleViableAlt	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_mode.go	/^func PredictionModegetSingleViableAlt(altsets []*BitSet) int {$/;"	f	package:antlr	typeref:typename:int
PredictionModegetUniqueAlt	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_mode.go	/^func PredictionModegetUniqueAlt(altsets []*BitSet) int {$/;"	f	package:antlr	typeref:typename:int
PredictionModehasConfigInRuleStopState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_mode.go	/^func PredictionModehasConfigInRuleStopState(configs ATNConfigSet) bool {$/;"	f	package:antlr	typeref:typename:bool
PredictionModehasConflictingAltSet	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_mode.go	/^func PredictionModehasConflictingAltSet(altsets []*BitSet) bool {$/;"	f	package:antlr	typeref:typename:bool
PredictionModehasNonConflictingAltSet	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_mode.go	/^func PredictionModehasNonConflictingAltSet(altsets []*BitSet) bool {$/;"	f	package:antlr	typeref:typename:bool
PredictionModehasSLLConflictTerminatingPrediction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_mode.go	/^func PredictionModehasSLLConflictTerminatingPrediction(mode int, configs ATNConfigSet) bool {$/;"	f	package:antlr	typeref:typename:bool
PredictionModehasStateAssociatedWithOneAlt	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_mode.go	/^func PredictionModehasStateAssociatedWithOneAlt(configs ATNConfigSet) bool {$/;"	f	package:antlr	typeref:typename:bool
PredictionModeresolvesToJustOneViableAlt	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_mode.go	/^func PredictionModeresolvesToJustOneViableAlt(altsets []*BitSet) int {$/;"	f	package:antlr	typeref:typename:int
Prepare	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (h *hranaV2Conn) Prepare(query string) (driver.Stmt, error) {$/;"	f	struct:hranaV2.hranaV2Conn	typeref:typename:(driver.Stmt, error)
Prepare	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (c *conn) Prepare(query string) (driver.Stmt, error) {$/;"	f	struct:ws.conn	typeref:typename:(driver.Stmt, error)
PrepareContext	internal/database/db.go	/^	PrepareContext(context.Context, string) (*sql.Stmt, error)$/;"	n	interface:database.DBTX	typeref:typename:(*sql.Stmt, error)
PrepareContext	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (h *hranaV2Conn) PrepareContext(ctx context.Context, query string) (driver.Stmt, error) {$/;"	f	struct:hranaV2.hranaV2Conn	typeref:typename:(driver.Stmt, error)
PrepareContext	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (c *conn) PrepareContext(_ context.Context, query string) (driver.Stmt, error) {$/;"	f	struct:ws.conn	typeref:typename:(driver.Stmt, error)
Prerequisites	vendor/github.com/go-chi/chi/CONTRIBUTING.md	/^## Prerequisites$/;"	s	chapter:Contributing
Prev	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	Prev tableEntry$/;"	m	struct:flate.tableEntryPrev	typeref:typename:tableEntry
PrintArrayJavaStyle	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func PrintArrayJavaStyle(sa []string) string {$/;"	f	package:antlr	typeref:typename:string
Printf	vendor/github.com/go-chi/cors/cors.go	/^	Printf(string, ...interface{})$/;"	n	interface:cors.Logger
Program_Init_Size	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	Program_Init_Size    = 100$/;"	c	package:antlr
ProxyErrorListener	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^type ProxyErrorListener struct {$/;"	s	package:antlr
Push	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func (s *IntStack) Push(e int) {$/;"	f	type:antlr.IntStack
PushMode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	PushMode(int)$/;"	n	interface:antlr.Lexer
PushMode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) PushMode(m int) {$/;"	f	struct:antlr.BaseLexer
PushNewRecursionContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) PushNewRecursionContext(localctx ParserRuleContext, state, ruleIndex int) {$/;"	f	struct:antlr.BaseParser
Put	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/jcollect.go	/^func (m *JMap[K, V, C]) Put(key K, val V) {$/;"	f	unknown:antlr.C
Put	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/jcollect.go	/^func (s *JStore[T, C]) Put(value T) (v T, exists bool) { \/\/nolint:ireturn$/;"	f	unknown:antlr.C	typeref:typename:(v T, exists bool)
Put	vendor/github.com/go-chi/chi/chi.go	/^	Put(pattern string, h http.HandlerFunc)$/;"	n	interface:chi.Router
Put	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) Put(pattern string, handlerFn http.HandlerFunc) {$/;"	f	struct:chi.Mux
Put	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^func (pool *idPool) Put(id uint32) {$/;"	f	struct:ws.idPool
Put	vendor/nhooyr.io/websocket/internal/bpool/bpool.go	/^func Put(b *bytes.Buffer) {$/;"	f	package:bpool
QUERY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	QUERY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
QUERY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	QUERY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:antlr.TerminalNode
QUERY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) QUERY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
QUERY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) QUERY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:antlr.TerminalNode
Qualified_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Qualified_table_name() IQualified_table_nameContext$/;"	n	interface:sqliteparser.IDelete_stmtContext	typeref:typename:IQualified_table_nameContext
Qualified_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Qualified_table_name() IQualified_table_nameContext$/;"	n	interface:sqliteparser.IDelete_stmt_limitedContext	typeref:typename:IQualified_table_nameContext
Qualified_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Qualified_table_name() IQualified_table_nameContext$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:IQualified_table_nameContext
Qualified_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Qualified_table_name() IQualified_table_nameContext$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:IQualified_table_nameContext
Qualified_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Qualified_table_name() (localctx IQualified_table_nameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IQualified_table_nameContext)
Qualified_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmtContext) Qualified_table_name() IQualified_table_nameContext {$/;"	f	struct:sqliteparser.Delete_stmtContext	typeref:typename:IQualified_table_nameContext
Qualified_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmt_limitedContext) Qualified_table_name() IQualified_table_nameContext {$/;"	f	struct:sqliteparser.Delete_stmt_limitedContext	typeref:typename:IQualified_table_nameContext
Qualified_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) Qualified_table_name() IQualified_table_nameContext {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:IQualified_table_nameContext
Qualified_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) Qualified_table_name() IQualified_table_nameContext {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:IQualified_table_nameContext
Qualified_table_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Qualified_table_nameContext struct {$/;"	s	package:sqliteparser
Queries	internal/database/db.go	/^type Queries struct {$/;"	s	package:database
Query	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (s *hranaV2Stmt) Query(args []driver.Value) (driver.Rows, error) {$/;"	f	struct:hranaV2.hranaV2Stmt	typeref:typename:(driver.Rows, error)
Query	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (s stmt) Query(args []driver.Value) (driver.Rows, error) {$/;"	f	struct:ws.stmt	typeref:typename:(driver.Rows, error)
QueryContext	internal/database/db.go	/^	QueryContext(context.Context, string, ...interface{}) (*sql.Rows, error)$/;"	n	interface:database.DBTX	typeref:typename:(*sql.Rows, error)
QueryContext	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (h *hranaV2Conn) QueryContext(ctx context.Context, query string, args []driver.NamedValue) /;"	f	struct:hranaV2.hranaV2Conn	typeref:typename:(driver.Rows, error)
QueryContext	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (s *hranaV2Stmt) QueryContext(ctx context.Context, args []driver.NamedValue) (driver.Rows, /;"	f	struct:hranaV2.hranaV2Stmt	typeref:typename:(driver.Rows, error)
QueryContext	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (c *conn) QueryContext(ctx context.Context, query string, args []driver.NamedValue) (driver/;"	f	struct:ws.conn	typeref:typename:(driver.Rows, error)
QueryContext	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (s stmt) QueryContext(ctx context.Context, args []driver.NamedValue) (driver.Rows, error) {$/;"	f	struct:ws.stmt	typeref:typename:(driver.Rows, error)
QueryRowContext	internal/database/db.go	/^	QueryRowContext(context.Context, string, ...interface{}) *sql.Row$/;"	n	interface:database.DBTX	typeref:typename:*sql.Row
RAISE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	RAISE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
RAISE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	RAISE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IRaise_functionContext	typeref:typename:antlr.TerminalNode
RAISE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) RAISE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
RAISE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Raise_functionContext) RAISE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Raise_functionContext	typeref:typename:antlr.TerminalNode
RANGE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	RANGE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_clauseContext	typeref:typename:antlr.TerminalNode
RANGE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	RANGE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
RANGE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_clauseContext) RANGE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_clauseContext	typeref:typename:antlr.TerminalNode
RANGE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) RANGE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
RANK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	RANK_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
RANK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	RANK_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:antlr.TerminalNode
RANK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) RANK_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
RANK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) RANK_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:antlr.TerminalNode
RECURSIVE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	RECURSIVE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICommon_table_stmtContext	typeref:typename:antlr.TerminalNode
RECURSIVE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	RECURSIVE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
RECURSIVE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	RECURSIVE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWith_clauseContext	typeref:typename:antlr.TerminalNode
RECURSIVE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_stmtContext) RECURSIVE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Common_table_stmtContext	typeref:typename:antlr.TerminalNode
RECURSIVE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) RECURSIVE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
RECURSIVE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *With_clauseContext) RECURSIVE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.With_clauseContext	typeref:typename:antlr.TerminalNode
REFERENCES_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	REFERENCES_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:antlr.TerminalNode
REFERENCES_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	REFERENCES_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
REFERENCES_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) REFERENCES_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.TerminalNode
REFERENCES_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) REFERENCES_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
REGEXP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	REGEXP_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
REGEXP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	REGEXP_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
REGEXP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) REGEXP_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
REGEXP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) REGEXP_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
REINDEX_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	REINDEX_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
REINDEX_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	REINDEX_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IReindex_stmtContext	typeref:typename:antlr.TerminalNode
REINDEX_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) REINDEX_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
REINDEX_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Reindex_stmtContext) REINDEX_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Reindex_stmtContext	typeref:typename:antlr.TerminalNode
RELEASE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	RELEASE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
RELEASE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	RELEASE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IRelease_stmtContext	typeref:typename:antlr.TerminalNode
RELEASE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) RELEASE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
RELEASE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Release_stmtContext) RELEASE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Release_stmtContext	typeref:typename:antlr.TerminalNode
RENAME_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	RENAME_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAlter_table_stmtContext	typeref:typename:antlr.TerminalNode
RENAME_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	RENAME_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
RENAME_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) RENAME_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:antlr.TerminalNode
RENAME_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) RENAME_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
REPLACE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	REPLACE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IConflict_clauseContext	typeref:typename:antlr.TerminalNode
REPLACE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	REPLACE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:antlr.TerminalNode
REPLACE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	REPLACE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
REPLACE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	REPLACE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:antlr.TerminalNode
REPLACE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	REPLACE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:antlr.TerminalNode
REPLACE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Conflict_clauseContext) REPLACE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Conflict_clauseContext	typeref:typename:antlr.TerminalNode
REPLACE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) REPLACE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:antlr.TerminalNode
REPLACE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) REPLACE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
REPLACE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) REPLACE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:antlr.TerminalNode
REPLACE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) REPLACE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:antlr.TerminalNode
RESTRICT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	RESTRICT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
RESTRICT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	RESTRICT_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:antlr.TerminalNode
RESTRICT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) RESTRICT_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.TerminalNode
RESTRICT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) RESTRICT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
RETURNING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	RETURNING_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IReturning_clauseContext	typeref:typename:antlr.TerminalNode
RETURNING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Returning_clauseContext) RETURNING_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Returning_clauseContext	typeref:typename:antlr.TerminalNode
RFC4122	vendor/github.com/google/uuid/uuid.go	/^	RFC4122                   \/\/ The variant specified in RFC4122$/;"	c	package:uuid
RIGHT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	RIGHT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
RIGHT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) RIGHT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
ROLLBACK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ROLLBACK_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IConflict_clauseContext	typeref:typename:antlr.TerminalNode
ROLLBACK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ROLLBACK_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:antlr.TerminalNode
ROLLBACK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ROLLBACK_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
ROLLBACK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ROLLBACK_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IRaise_functionContext	typeref:typename:antlr.TerminalNode
ROLLBACK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ROLLBACK_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IRollback_stmtContext	typeref:typename:antlr.TerminalNode
ROLLBACK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ROLLBACK_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:antlr.TerminalNode
ROLLBACK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ROLLBACK_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:antlr.TerminalNode
ROLLBACK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Conflict_clauseContext) ROLLBACK_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Conflict_clauseContext	typeref:typename:antlr.TerminalNode
ROLLBACK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) ROLLBACK_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:antlr.TerminalNode
ROLLBACK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) ROLLBACK_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
ROLLBACK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Raise_functionContext) ROLLBACK_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Raise_functionContext	typeref:typename:antlr.TerminalNode
ROLLBACK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Rollback_stmtContext) ROLLBACK_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Rollback_stmtContext	typeref:typename:antlr.TerminalNode
ROLLBACK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) ROLLBACK_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:antlr.TerminalNode
ROLLBACK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) ROLLBACK_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:antlr.TerminalNode
ROWS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ROWS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_clauseContext	typeref:typename:antlr.TerminalNode
ROWS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ROWS_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
ROWS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_clauseContext) ROWS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_clauseContext	typeref:typename:antlr.TerminalNode
ROWS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) ROWS_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
ROW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ROW_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
ROW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ROW_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_leftContext	typeref:typename:antlr.TerminalNode
ROW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ROW_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_rightContext	typeref:typename:antlr.TerminalNode
ROW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ROW_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_singleContext	typeref:typename:antlr.TerminalNode
ROW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ROW_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_specContext	typeref:typename:antlr.TerminalNode
ROW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ROW_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
ROW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) ROW_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
ROW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_leftContext) ROW_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_leftContext	typeref:typename:antlr.TerminalNode
ROW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_rightContext) ROW_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_rightContext	typeref:typename:antlr.TerminalNode
ROW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_singleContext) ROW_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_singleContext	typeref:typename:antlr.TerminalNode
ROW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_specContext) ROW_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_specContext	typeref:typename:antlr.TerminalNode
ROW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) ROW_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
ROW_NUMBER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ROW_NUMBER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
ROW_NUMBER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	ROW_NUMBER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:antlr.TerminalNode
ROW_NUMBER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) ROW_NUMBER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
ROW_NUMBER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) ROW_NUMBER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:antlr.TerminalNode
Raise_function	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Raise_function() IRaise_functionContext$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:IRaise_functionContext
Raise_function	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Raise_function() (localctx IRaise_functionContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IRaise_functionContext)
Raise_function	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) Raise_function() IRaise_functionContext {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:IRaise_functionContext
Raise_functionContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Raise_functionContext struct {$/;"	s	package:sqliteparser
RangeTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^type RangeTransition struct {$/;"	s	package:antlr
Read	vendor/github.com/joho/godotenv/godotenv.go	/^func Read(filenames ...string) (envMap map[string]string, err error) {$/;"	f	package:godotenv	typeref:typename:(envMap map[string]string, err error)
Read	vendor/github.com/klauspost/compress/flate/inflate.go	/^func (f *decompressor) Read(b []byte) (int, error) {$/;"	f	struct:flate.decompressor	typeref:typename:(int, error)
Read	vendor/nhooyr.io/websocket/netconn.go	/^func (c *netConn) Read(p []byte) (int, error) {$/;"	f	struct:websocket.netConn	typeref:typename:(int, error)
Read	vendor/nhooyr.io/websocket/read.go	/^func (c *Conn) Read(ctx context.Context) (MessageType, []byte, error) {$/;"	f	unknown:websocket.Conn	typeref:typename:(MessageType, []byte, error)
Read	vendor/nhooyr.io/websocket/read.go	/^func (f readerFunc) Read(p []byte) (int, error) {$/;"	f	type:websocket.readerFunc	typeref:typename:(int, error)
Read	vendor/nhooyr.io/websocket/read.go	/^func (lr *limitReader) Read(p []byte) (int, error) {$/;"	f	struct:websocket.limitReader	typeref:typename:(int, error)
Read	vendor/nhooyr.io/websocket/read.go	/^func (mr *msgReader) Read(p []byte) (n int, err error) {$/;"	f	struct:websocket.msgReader	typeref:typename:(n int, err error)
Read	vendor/nhooyr.io/websocket/ws_js.go	/^func (c *Conn) Read(ctx context.Context) (MessageType, []byte, error) {$/;"	f	struct:websocket.Conn	typeref:typename:(MessageType, []byte, error)
Read	vendor/nhooyr.io/websocket/wsjson/wsjson.go	/^func Read(ctx context.Context, c *websocket.Conn, v interface{}) error {$/;"	f	package:wsjson	typeref:typename:error
ReadError	vendor/github.com/klauspost/compress/flate/inflate.go	/^type ReadError = flate.ReadError$/;"	a	package:flate	typeref:typename:flate.ReadError
ReadOnly	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	ReadOnly() bool$/;"	n	interface:antlr.ATNConfigSet	typeref:typename:bool
ReadOnly	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) ReadOnly() bool {$/;"	f	struct:antlr.BaseATNConfigSet	typeref:typename:bool
ReadOnly	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserialization_options.go	/^func (opts *ATNDeserializationOptions) ReadOnly() bool {$/;"	f	struct:antlr.ATNDeserializationOptions	typeref:typename:bool
Reader	vendor/github.com/klauspost/compress/flate/inflate.go	/^type Reader interface {$/;"	i	package:flate
Reader	vendor/nhooyr.io/websocket/read.go	/^func (c *Conn) Reader(ctx context.Context) (MessageType, io.Reader, error) {$/;"	f	unknown:websocket.Conn	typeref:typename:(MessageType, io.Reader, error)
Reader	vendor/nhooyr.io/websocket/ws_js.go	/^func (c *Conn) Reader(ctx context.Context) (MessageType, io.Reader, error) {$/;"	f	struct:websocket.Conn	typeref:typename:(MessageType, io.Reader, error)
Reason	vendor/nhooyr.io/websocket/close.go	/^	Reason string$/;"	m	struct:websocket.CloseError	typeref:typename:string
Reason	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^	Reason   string$/;"	m	struct:wsjs.CloseEvent	typeref:typename:string
RecognitionException	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^type RecognitionException interface {$/;"	i	package:antlr
Recognizer	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^type Recognizer interface {$/;"	i	package:antlr
Recover	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^	Recover(Parser, RecognitionException)$/;"	n	interface:antlr.ErrorStrategy
Recover	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (b *BailErrorStrategy) Recover(recognizer Parser, e RecognitionException) {$/;"	f	struct:antlr.BailErrorStrategy
Recover	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (d *DefaultErrorStrategy) Recover(recognizer Parser, e RecognitionException) {$/;"	f	struct:antlr.DefaultErrorStrategy
Recover	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) Recover(re RecognitionException) {$/;"	f	struct:antlr.BaseLexer
RecoverInline	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^	RecoverInline(Parser) Token$/;"	n	interface:antlr.ErrorStrategy	typeref:typename:Token
RecoverInline	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (b *BailErrorStrategy) RecoverInline(recognizer Parser) Token {$/;"	f	struct:antlr.BailErrorStrategy	typeref:typename:Token
RecoverInline	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (d *DefaultErrorStrategy) RecoverInline(recognizer Parser) Token {$/;"	f	struct:antlr.DefaultErrorStrategy	typeref:typename:Token
Recursive_cte	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Recursive_cte() (localctx IRecursive_cteContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IRecursive_cteContext)
Recursive_cteContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Recursive_cteContext struct {$/;"	s	package:sqliteparser
Recursive_select	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Recursive_select() IRecursive_selectContext$/;"	n	interface:sqliteparser.IRecursive_cteContext	typeref:typename:IRecursive_selectContext
Recursive_select	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Recursive_select() (localctx IRecursive_selectContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IRecursive_selectContext)
Recursive_select	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Recursive_cteContext) Recursive_select() IRecursive_selectContext {$/;"	f	struct:sqliteparser.Recursive_cteContext	typeref:typename:IRecursive_selectContext
Recursive_selectContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Recursive_selectContext struct {$/;"	s	package:sqliteparser
RegisterMethod	vendor/github.com/go-chi/chi/tree.go	/^func RegisterMethod(method string) {$/;"	f	package:chi
Reindex_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Reindex_stmt() IReindex_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:IReindex_stmtContext
Reindex_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Reindex_stmt() (localctx IReindex_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IReindex_stmtContext)
Reindex_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Reindex_stmt() IReindex_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:IReindex_stmtContext
Reindex_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Reindex_stmtContext struct {$/;"	s	package:sqliteparser
Release	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) Release(marker int) {}$/;"	f	struct:antlr.CommonTokenStream
Release	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/input_stream.go	/^func (is *InputStream) Release(marker int) {$/;"	f	struct:antlr.InputStream
Release	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/int_stream.go	/^	Release(marker int)$/;"	n	interface:antlr.IntStream
Release_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Release_stmt() IRelease_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:IRelease_stmtContext
Release_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Release_stmt() (localctx IRelease_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IRelease_stmtContext)
Release_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Release_stmt() IRelease_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:IRelease_stmtContext
Release_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Release_stmtContext struct {$/;"	s	package:sqliteparser
Releases	vendor/github.com/joho/godotenv/README.md	/^## Releases$/;"	s	chapter:GoDotEnv ![CI](https://github.com/joho/godotenv/workflows/CI/badge.svg) [![Go Report Card](https://goreportcard.com/badge/github.com/joho/godotenv)](https://goreportcard.com/report/github.com/joho/godotenv)
RemoteAddr	vendor/nhooyr.io/websocket/netconn.go	/^func (c *netConn) RemoteAddr() net.Addr {$/;"	f	struct:websocket.netConn	typeref:typename:net.Addr
RemoveErrorListeners	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^	RemoveErrorListeners()$/;"	n	interface:antlr.Recognizer
RemoveErrorListeners	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^func (b *BaseRecognizer) RemoveErrorListeners() {$/;"	f	struct:antlr.BaseRecognizer
RemoveLastChild	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^	RemoveLastChild()$/;"	n	interface:antlr.ParserRuleContext
RemoveLastChild	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) RemoveLastChild() {$/;"	f	struct:antlr.BaseParserRuleContext
RemoveParseListener	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) RemoveParseListener(listener ParseTreeListener) {$/;"	f	struct:antlr.BaseParser
Replace	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) Replace(program_name string, from, to int, text string) {$/;"	f	struct:antlr.TokenStreamRewriter
ReplaceDefault	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) ReplaceDefault(from, to int, text string) {$/;"	f	struct:antlr.TokenStreamRewriter
ReplaceDefaultPos	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) ReplaceDefaultPos(index int, text string) {$/;"	f	struct:antlr.TokenStreamRewriter
ReplaceOp	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^type ReplaceOp struct {$/;"	s	package:antlr
ReplaceToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) ReplaceToken(program_name string, from, to Token, text string) {$/;"	f	struct:antlr.TokenStreamRewriter
ReplaceTokenDefault	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) ReplaceTokenDefault(from, to Token, text string) {$/;"	f	struct:antlr.TokenStreamRewriter
ReplaceTokenDefaultPos	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) ReplaceTokenDefaultPos(index Token, text string) {$/;"	f	struct:antlr.TokenStreamRewriter
ReplicationIndex	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/batch.go	/^	ReplicationIndex *uint64     `json:"replication_index,omitempty"`$/;"	m	struct:hrana.Batch	typeref:typename:*uint64
ReplicationIndex	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/batch_result.go	/^	ReplicationIndex *uint64       `json:"replication_index"`$/;"	m	struct:hrana.BatchResult	typeref:typename:*uint64
ReplicationIndex	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt.go	/^	ReplicationIndex *uint64    `json:"replication_index,omitempty"`$/;"	m	struct:hrana.Stmt	typeref:typename:*uint64
ReplicationIndex	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt_result.go	/^	ReplicationIndex *uint64   `json:"replication_index"`$/;"	m	struct:hrana.StmtResult	typeref:typename:*uint64
ReportAmbiguity	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/diagnostic_error_listener.go	/^func (d *DiagnosticErrorListener) ReportAmbiguity(recognizer Parser, dfa *DFA, startIndex, stopI/;"	f	struct:antlr.DiagnosticErrorListener
ReportAmbiguity	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^	ReportAmbiguity(recognizer Parser, dfa *DFA, startIndex, stopIndex int, exact bool, ambigAlts */;"	n	interface:antlr.ErrorListener
ReportAmbiguity	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^func (d *DefaultErrorListener) ReportAmbiguity(recognizer Parser, dfa *DFA, startIndex, stopInde/;"	f	struct:antlr.DefaultErrorListener
ReportAmbiguity	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^func (p *ProxyErrorListener) ReportAmbiguity(recognizer Parser, dfa *DFA, startIndex, stopIndex /;"	f	struct:antlr.ProxyErrorListener
ReportAmbiguity	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) ReportAmbiguity(dfa *DFA, D *DFAState, startIndex, stopIndex int,$/;"	f	struct:antlr.ParserATNSimulator
ReportAttemptingFullContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/diagnostic_error_listener.go	/^func (d *DiagnosticErrorListener) ReportAttemptingFullContext(recognizer Parser, dfa *DFA, start/;"	f	struct:antlr.DiagnosticErrorListener
ReportAttemptingFullContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^	ReportAttemptingFullContext(recognizer Parser, dfa *DFA, startIndex, stopIndex int, conflicting/;"	n	interface:antlr.ErrorListener
ReportAttemptingFullContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^func (d *DefaultErrorListener) ReportAttemptingFullContext(recognizer Parser, dfa *DFA, startInd/;"	f	struct:antlr.DefaultErrorListener
ReportAttemptingFullContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^func (p *ProxyErrorListener) ReportAttemptingFullContext(recognizer Parser, dfa *DFA, startIndex/;"	f	struct:antlr.ProxyErrorListener
ReportAttemptingFullContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) ReportAttemptingFullContext(dfa *DFA, conflictingAlts *BitSet, conf/;"	f	struct:antlr.ParserATNSimulator
ReportContextSensitivity	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/diagnostic_error_listener.go	/^func (d *DiagnosticErrorListener) ReportContextSensitivity(recognizer Parser, dfa *DFA, startInd/;"	f	struct:antlr.DiagnosticErrorListener
ReportContextSensitivity	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^	ReportContextSensitivity(recognizer Parser, dfa *DFA, startIndex, stopIndex, prediction int, co/;"	n	interface:antlr.ErrorListener
ReportContextSensitivity	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^func (d *DefaultErrorListener) ReportContextSensitivity(recognizer Parser, dfa *DFA, startIndex,/;"	f	struct:antlr.DefaultErrorListener
ReportContextSensitivity	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^func (p *ProxyErrorListener) ReportContextSensitivity(recognizer Parser, dfa *DFA, startIndex, s/;"	f	struct:antlr.ProxyErrorListener
ReportContextSensitivity	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) ReportContextSensitivity(dfa *DFA, prediction int, configs ATNConfi/;"	f	struct:antlr.ParserATNSimulator
ReportError	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^	ReportError(Parser, RecognitionException)$/;"	n	interface:antlr.ErrorStrategy
ReportError	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (d *DefaultErrorStrategy) ReportError(recognizer Parser, e RecognitionException) {$/;"	f	struct:antlr.DefaultErrorStrategy
ReportFailedPredicate	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (d *DefaultErrorStrategy) ReportFailedPredicate(recognizer Parser, e *FailedPredicateExcept/;"	f	struct:antlr.DefaultErrorStrategy
ReportInputMisMatch	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (this *DefaultErrorStrategy) ReportInputMisMatch(recognizer Parser, e *InputMisMatchExcepti/;"	f	struct:antlr.DefaultErrorStrategy
ReportMatch	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^	ReportMatch(Parser)$/;"	n	interface:antlr.ErrorStrategy
ReportMatch	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (d *DefaultErrorStrategy) ReportMatch(recognizer Parser) {$/;"	f	struct:antlr.DefaultErrorStrategy
ReportMissingToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (d *DefaultErrorStrategy) ReportMissingToken(recognizer Parser) {$/;"	f	struct:antlr.DefaultErrorStrategy
ReportNoViableAlternative	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (d *DefaultErrorStrategy) ReportNoViableAlternative(recognizer Parser, e *NoViableAltExcept/;"	f	struct:antlr.DefaultErrorStrategy
ReportUnwantedToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (d *DefaultErrorStrategy) ReportUnwantedToken(recognizer Parser) {$/;"	f	struct:antlr.DefaultErrorStrategy
Request handlers	vendor/github.com/go-chi/chi/README.md	/^### Request handlers$/;"	S	section:<img alt="chi" src="https://cdn.rawgit.com/go-chi/chi/master/_examples/chi.svg" width="220" />""Router interface
Requests	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/pipeline_request.go	/^	Requests []StreamRequest `json:"requests"`$/;"	m	struct:hrana.PipelineRequest	typeref:typename:[]StreamRequest
Reserved	vendor/github.com/google/uuid/uuid.go	/^	Reserved                  \/\/ Reserved, NCS backward compatibility.$/;"	c	package:uuid
Reset	vendor/github.com/go-chi/chi/context.go	/^func (x *Context) Reset() {$/;"	f	struct:chi.Context
Reset	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (w *Writer) Reset(dst io.Writer) {$/;"	f	struct:flate.Writer
Reset	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	Reset()$/;"	n	interface:flate.fastEnc
Reset	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^func (e *fastGen) Reset() {$/;"	f	struct:flate.fastGen
Reset	vendor/github.com/klauspost/compress/flate/inflate.go	/^	Reset(r io.Reader, dict []byte) error$/;"	n	interface:flate.Resetter	typeref:typename:error
Reset	vendor/github.com/klauspost/compress/flate/inflate.go	/^func (f *decompressor) Reset(r io.Reader, dict []byte) error {$/;"	f	struct:flate.decompressor	typeref:typename:error
Reset	vendor/github.com/klauspost/compress/flate/stateless.go	/^func (s *statelessWriter) Reset(w io.Writer) {$/;"	f	struct:flate.statelessWriter
Reset	vendor/github.com/klauspost/compress/flate/token.go	/^func (t *tokens) Reset() {$/;"	f	struct:flate.tokens
ResetDict	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (w *Writer) ResetDict(dst io.Writer, dict []byte) {$/;"	f	struct:flate.Writer
ResetSession	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (h *hranaV2Conn) ResetSession(ctx context.Context) error {$/;"	f	struct:hranaV2.hranaV2Conn	typeref:typename:error
Resetter	vendor/github.com/klauspost/compress/flate/inflate.go	/^type Resetter interface {$/;"	i	package:flate
Response	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_result.go	/^	Response *StreamResponse `json:"response,omitempty"`$/;"	m	struct:hrana.StreamResult	typeref:typename:*StreamResponse
Result	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_result.go	/^	Result json.RawMessage `json:"result,omitempty"`$/;"	m	struct:hrana.StreamResponse	typeref:typename:json.RawMessage
Result_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Result_column(i int) IResult_columnContext$/;"	n	interface:sqliteparser.IReturning_clauseContext	typeref:typename:IResult_columnContext
Result_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Result_column(i int) IResult_columnContext$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:IResult_columnContext
Result_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Result_column() (localctx IResult_columnContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IResult_columnContext)
Result_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Returning_clauseContext) Result_column(i int) IResult_columnContext {$/;"	f	struct:sqliteparser.Returning_clauseContext	typeref:typename:IResult_columnContext
Result_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) Result_column(i int) IResult_columnContext {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:IResult_columnContext
Result_columnContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Result_columnContext struct {$/;"	s	package:sqliteparser
Results	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/pipeline_response.go	/^	Results []StreamResult `json:"results"`$/;"	m	struct:hrana.PipelineResponse	typeref:typename:[]StreamResult
Returning_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Returning_clause() IReturning_clauseContext$/;"	n	interface:sqliteparser.IDelete_stmtContext	typeref:typename:IReturning_clauseContext
Returning_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Returning_clause() IReturning_clauseContext$/;"	n	interface:sqliteparser.IDelete_stmt_limitedContext	typeref:typename:IReturning_clauseContext
Returning_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Returning_clause() IReturning_clauseContext$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:IReturning_clauseContext
Returning_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Returning_clause() IReturning_clauseContext$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:IReturning_clauseContext
Returning_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Returning_clause() IReturning_clauseContext$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:IReturning_clauseContext
Returning_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Returning_clause() (localctx IReturning_clauseContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IReturning_clauseContext)
Returning_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmtContext) Returning_clause() IReturning_clauseContext {$/;"	f	struct:sqliteparser.Delete_stmtContext	typeref:typename:IReturning_clauseContext
Returning_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmt_limitedContext) Returning_clause() IReturning_clauseContext {$/;"	f	struct:sqliteparser.Delete_stmt_limitedContext	typeref:typename:IReturning_clauseContext
Returning_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) Returning_clause() IReturning_clauseContext {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:IReturning_clauseContext
Returning_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) Returning_clause() IReturning_clauseContext {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:IReturning_clauseContext
Returning_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) Returning_clause() IReturning_clauseContext {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:IReturning_clauseContext
Returning_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Returning_clauseContext struct {$/;"	s	package:sqliteparser
RewriteOperation	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^type RewriteOperation interface {$/;"	i	package:antlr
Roadmap	vendor/nhooyr.io/websocket/README.md	/^## Roadmap$/;"	s	chapter:websocket
Rollback	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) Rollback(program_name string, instruction_index int) {$/;"	f	struct:antlr.TokenStreamRewriter
Rollback	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (h hranaV2Tx) Rollback() error {$/;"	f	struct:hranaV2.hranaV2Tx	typeref:typename:error
Rollback	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (t tx) Rollback() error {$/;"	f	struct:ws.tx	typeref:typename:error
RollbackDefault	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) RollbackDefault(instruction_index int) {$/;"	f	struct:antlr.TokenStreamRewriter
Rollback_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Rollback_stmt() IRollback_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:IRollback_stmtContext
Rollback_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Rollback_stmt() (localctx IRollback_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IRollback_stmtContext)
Rollback_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Rollback_stmt() IRollback_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:IRollback_stmtContext
Rollback_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Rollback_stmtContext struct {$/;"	s	package:sqliteparser
Route	vendor/github.com/go-chi/chi/chi.go	/^	Route(pattern string, fn func(r Router)) Router$/;"	n	interface:chi.Router	typeref:typename:Router
Route	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) Route(pattern string, fn func(r Router)) Router {$/;"	f	struct:chi.Mux	typeref:typename:Router
Route	vendor/github.com/go-chi/chi/tree.go	/^type Route struct {$/;"	s	package:chi
RouteContext	vendor/github.com/go-chi/chi/context.go	/^func RouteContext(ctx context.Context) *Context {$/;"	f	package:chi	typeref:typename:*Context
RouteCtxKey	vendor/github.com/go-chi/chi/context.go	/^	RouteCtxKey = &contextKey{"RouteContext"}$/;"	v	package:chi
RouteMethod	vendor/github.com/go-chi/chi/context.go	/^	RouteMethod string$/;"	m	struct:chi.Context	typeref:typename:string
RouteParams	vendor/github.com/go-chi/chi/context.go	/^type RouteParams struct {$/;"	s	package:chi
RoutePath	vendor/github.com/go-chi/chi/context.go	/^	RoutePath   string$/;"	m	struct:chi.Context	typeref:typename:string
RoutePattern	vendor/github.com/go-chi/chi/context.go	/^func (x *Context) RoutePattern() string {$/;"	f	struct:chi.Context	typeref:typename:string
RoutePatterns	vendor/github.com/go-chi/chi/context.go	/^	RoutePatterns []string$/;"	m	struct:chi.Context	typeref:typename:[]string
Router	vendor/github.com/go-chi/chi/chi.go	/^type Router interface {$/;"	i	package:chi
Router interface	vendor/github.com/go-chi/chi/README.md	/^## Router interface$/;"	s	chapter:<img alt="chi" src="https://cdn.rawgit.com/go-chi/chi/master/_examples/chi.svg" width="220" />
Routes	vendor/github.com/go-chi/chi/chi.go	/^	Routes() []Route$/;"	n	interface:chi.Routes	typeref:typename:[]Route
Routes	vendor/github.com/go-chi/chi/chi.go	/^type Routes interface {$/;"	i	package:chi
Routes	vendor/github.com/go-chi/chi/context.go	/^	Routes Routes$/;"	m	struct:chi.Context	typeref:typename:Routes
Routes	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) Routes() []Route {$/;"	f	struct:chi.Mux	typeref:typename:[]Route
Rows	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt_result.go	/^	Rows             [][]Value `json:"rows"`$/;"	m	struct:hrana.StmtResult	typeref:typename:[][]Value
RowsAffected	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/result.go	/^func (r *result) RowsAffected() (int64, error) {$/;"	f	struct:shared.result	typeref:typename:(int64, error)
RowsAffected	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func (r *result) RowsAffected() (int64, error) {$/;"	f	struct:ws.result	typeref:typename:(int64, error)
RowsCount	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (p *BatchResultRowsProvider) RowsCount(setIdx int) int {$/;"	f	struct:hranaV2.BatchResultRowsProvider	typeref:typename:int
RowsCount	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (p *StmtResultRowsProvider) RowsCount(setIdx int) int {$/;"	f	struct:hranaV2.StmtResultRowsProvider	typeref:typename:int
RowsCount	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/rows.go	/^	RowsCount(setIdx int) int$/;"	n	interface:shared.rowsProvider	typeref:typename:int
RuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^type RuleContext interface {$/;"	i	package:antlr
RuleIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^	RuleIndex     int$/;"	m	struct:antlr.BaseRuleContext	typeref:typename:int
RuleNames	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^	RuleNames       []string$/;"	m	struct:antlr.BaseRecognizer	typeref:typename:[]string
RuleNode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^type RuleNode interface {$/;"	i	package:antlr
RuleStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^type RuleStartState struct {$/;"	s	package:antlr
RuleStopState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^type RuleStopState struct {$/;"	s	package:antlr
RuleTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^type RuleTransition struct {$/;"	s	package:antlr
SAVEPOINT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SAVEPOINT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
SAVEPOINT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SAVEPOINT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IRelease_stmtContext	typeref:typename:antlr.TerminalNode
SAVEPOINT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SAVEPOINT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IRollback_stmtContext	typeref:typename:antlr.TerminalNode
SAVEPOINT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SAVEPOINT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ISavepoint_stmtContext	typeref:typename:antlr.TerminalNode
SAVEPOINT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) SAVEPOINT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
SAVEPOINT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Release_stmtContext) SAVEPOINT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Release_stmtContext	typeref:typename:antlr.TerminalNode
SAVEPOINT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Rollback_stmtContext) SAVEPOINT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Rollback_stmtContext	typeref:typename:antlr.TerminalNode
SAVEPOINT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Savepoint_stmtContext) SAVEPOINT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Savepoint_stmtContext	typeref:typename:antlr.TerminalNode
SCOL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SCOL(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
SCOL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SCOL(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ISql_stmt_listContext	typeref:typename:antlr.TerminalNode
SCOL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) SCOL(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
SCOL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmt_listContext) SCOL(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Sql_stmt_listContext	typeref:typename:antlr.TerminalNode
SELECT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SELECT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
SELECT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SELECT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:antlr.TerminalNode
SELECT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) SELECT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
SELECT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) SELECT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:antlr.TerminalNode
SET_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SET_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
SET_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SET_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:antlr.TerminalNode
SET_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SET_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:antlr.TerminalNode
SET_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SET_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:antlr.TerminalNode
SET_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SET_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:antlr.TerminalNode
SET_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) SET_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.TerminalNode
SET_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) SET_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
SET_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) SET_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:antlr.TerminalNode
SET_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) SET_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:antlr.TerminalNode
SET_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) SET_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:antlr.TerminalNode
SQLiteLexer	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^type SQLiteLexer struct {$/;"	s	package:sqliteparser
SQLiteLexerABORT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerABORT_              = 25$/;"	c	package:sqliteparser
SQLiteLexerACTION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerACTION_             = 26$/;"	c	package:sqliteparser
SQLiteLexerADD_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerADD_                = 27$/;"	c	package:sqliteparser
SQLiteLexerAFTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerAFTER_              = 28$/;"	c	package:sqliteparser
SQLiteLexerALL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerALL_                = 29$/;"	c	package:sqliteparser
SQLiteLexerALTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerALTER_              = 30$/;"	c	package:sqliteparser
SQLiteLexerALWAYS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerALWAYS_             = 170$/;"	c	package:sqliteparser
SQLiteLexerAMP	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerAMP                 = 16$/;"	c	package:sqliteparser
SQLiteLexerANALYZE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerANALYZE_            = 31$/;"	c	package:sqliteparser
SQLiteLexerAND_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerAND_                = 32$/;"	c	package:sqliteparser
SQLiteLexerASC_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerASC_                = 34$/;"	c	package:sqliteparser
SQLiteLexerASSIGN	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerASSIGN              = 6$/;"	c	package:sqliteparser
SQLiteLexerAS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerAS_                 = 33$/;"	c	package:sqliteparser
SQLiteLexerATTACH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerATTACH_             = 35$/;"	c	package:sqliteparser
SQLiteLexerAUTOINCREMENT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerAUTOINCREMENT_      = 36$/;"	c	package:sqliteparser
SQLiteLexerBEFORE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerBEFORE_             = 37$/;"	c	package:sqliteparser
SQLiteLexerBEGIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerBEGIN_              = 38$/;"	c	package:sqliteparser
SQLiteLexerBETWEEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerBETWEEN_            = 39$/;"	c	package:sqliteparser
SQLiteLexerBIND_PARAMETER	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerBIND_PARAMETER      = 187$/;"	c	package:sqliteparser
SQLiteLexerBLOB_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerBLOB_LITERAL        = 189$/;"	c	package:sqliteparser
SQLiteLexerBY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerBY_                 = 40$/;"	c	package:sqliteparser
SQLiteLexerCASCADE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerCASCADE_            = 41$/;"	c	package:sqliteparser
SQLiteLexerCASE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerCASE_               = 42$/;"	c	package:sqliteparser
SQLiteLexerCAST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerCAST_               = 43$/;"	c	package:sqliteparser
SQLiteLexerCHECK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerCHECK_              = 44$/;"	c	package:sqliteparser
SQLiteLexerCLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerCLOSE_PAR           = 4$/;"	c	package:sqliteparser
SQLiteLexerCOLLATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerCOLLATE_            = 45$/;"	c	package:sqliteparser
SQLiteLexerCOLUMN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerCOLUMN_             = 46$/;"	c	package:sqliteparser
SQLiteLexerCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerCOMMA               = 5$/;"	c	package:sqliteparser
SQLiteLexerCOMMIT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerCOMMIT_             = 47$/;"	c	package:sqliteparser
SQLiteLexerCONFLICT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerCONFLICT_           = 48$/;"	c	package:sqliteparser
SQLiteLexerCONSTRAINT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerCONSTRAINT_         = 49$/;"	c	package:sqliteparser
SQLiteLexerCREATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerCREATE_             = 50$/;"	c	package:sqliteparser
SQLiteLexerCROSS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerCROSS_              = 51$/;"	c	package:sqliteparser
SQLiteLexerCUME_DIST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerCUME_DIST_          = 159$/;"	c	package:sqliteparser
SQLiteLexerCURRENT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerCURRENT_            = 157$/;"	c	package:sqliteparser
SQLiteLexerCURRENT_DATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerCURRENT_DATE_       = 52$/;"	c	package:sqliteparser
SQLiteLexerCURRENT_TIMESTAMP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerCURRENT_TIMESTAMP_  = 54$/;"	c	package:sqliteparser
SQLiteLexerCURRENT_TIME_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerCURRENT_TIME_       = 53$/;"	c	package:sqliteparser
SQLiteLexerDATABASE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerDATABASE_           = 55$/;"	c	package:sqliteparser
SQLiteLexerDEFAULT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerDEFAULT_            = 56$/;"	c	package:sqliteparser
SQLiteLexerDEFERRABLE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerDEFERRABLE_         = 57$/;"	c	package:sqliteparser
SQLiteLexerDEFERRED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerDEFERRED_           = 58$/;"	c	package:sqliteparser
SQLiteLexerDELETE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerDELETE_             = 59$/;"	c	package:sqliteparser
SQLiteLexerDENSE_RANK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerDENSE_RANK_         = 160$/;"	c	package:sqliteparser
SQLiteLexerDESC_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerDESC_               = 60$/;"	c	package:sqliteparser
SQLiteLexerDETACH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerDETACH_             = 61$/;"	c	package:sqliteparser
SQLiteLexerDISTINCT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerDISTINCT_           = 62$/;"	c	package:sqliteparser
SQLiteLexerDIV	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerDIV                 = 12$/;"	c	package:sqliteparser
SQLiteLexerDOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerDOT                 = 2$/;"	c	package:sqliteparser
SQLiteLexerDO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerDO_                 = 183$/;"	c	package:sqliteparser
SQLiteLexerDROP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerDROP_               = 63$/;"	c	package:sqliteparser
SQLiteLexerEACH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerEACH_               = 64$/;"	c	package:sqliteparser
SQLiteLexerELSE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerELSE_               = 65$/;"	c	package:sqliteparser
SQLiteLexerEND_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerEND_                = 66$/;"	c	package:sqliteparser
SQLiteLexerEQ	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerEQ                  = 22$/;"	c	package:sqliteparser
SQLiteLexerESCAPE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerESCAPE_             = 67$/;"	c	package:sqliteparser
SQLiteLexerEXCEPT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerEXCEPT_             = 68$/;"	c	package:sqliteparser
SQLiteLexerEXCLUDE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerEXCLUDE_            = 180$/;"	c	package:sqliteparser
SQLiteLexerEXCLUSIVE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerEXCLUSIVE_          = 69$/;"	c	package:sqliteparser
SQLiteLexerEXISTS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerEXISTS_             = 70$/;"	c	package:sqliteparser
SQLiteLexerEXPLAIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerEXPLAIN_            = 71$/;"	c	package:sqliteparser
SQLiteLexerFAIL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerFAIL_               = 72$/;"	c	package:sqliteparser
SQLiteLexerFALSE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerFALSE_              = 173$/;"	c	package:sqliteparser
SQLiteLexerFILTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerFILTER_             = 178$/;"	c	package:sqliteparser
SQLiteLexerFIRST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerFIRST_              = 176$/;"	c	package:sqliteparser
SQLiteLexerFIRST_VALUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerFIRST_VALUE_        = 151$/;"	c	package:sqliteparser
SQLiteLexerFOLLOWING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerFOLLOWING_          = 158$/;"	c	package:sqliteparser
SQLiteLexerFOREIGN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerFOREIGN_            = 74$/;"	c	package:sqliteparser
SQLiteLexerFOR_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerFOR_                = 73$/;"	c	package:sqliteparser
SQLiteLexerFROM_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerFROM_               = 75$/;"	c	package:sqliteparser
SQLiteLexerFULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerFULL_               = 76$/;"	c	package:sqliteparser
SQLiteLexerGENERATED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerGENERATED_          = 169$/;"	c	package:sqliteparser
SQLiteLexerGLOB_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerGLOB_               = 77$/;"	c	package:sqliteparser
SQLiteLexerGROUPS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerGROUPS_             = 179$/;"	c	package:sqliteparser
SQLiteLexerGROUP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerGROUP_              = 78$/;"	c	package:sqliteparser
SQLiteLexerGT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerGT                  = 20$/;"	c	package:sqliteparser
SQLiteLexerGT2	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerGT2                 = 15$/;"	c	package:sqliteparser
SQLiteLexerGT_EQ	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerGT_EQ               = 21$/;"	c	package:sqliteparser
SQLiteLexerHAVING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerHAVING_             = 79$/;"	c	package:sqliteparser
SQLiteLexerIDENTIFIER	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerIDENTIFIER          = 185$/;"	c	package:sqliteparser
SQLiteLexerIF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerIF_                 = 80$/;"	c	package:sqliteparser
SQLiteLexerIGNORE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerIGNORE_             = 81$/;"	c	package:sqliteparser
SQLiteLexerIMMEDIATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerIMMEDIATE_          = 82$/;"	c	package:sqliteparser
SQLiteLexerINDEXED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerINDEXED_            = 85$/;"	c	package:sqliteparser
SQLiteLexerINDEX_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerINDEX_              = 84$/;"	c	package:sqliteparser
SQLiteLexerINITIALLY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerINITIALLY_          = 86$/;"	c	package:sqliteparser
SQLiteLexerINNER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerINNER_              = 87$/;"	c	package:sqliteparser
SQLiteLexerINSERT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerINSERT_             = 88$/;"	c	package:sqliteparser
SQLiteLexerINSTEAD_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerINSTEAD_            = 89$/;"	c	package:sqliteparser
SQLiteLexerINTERSECT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerINTERSECT_          = 90$/;"	c	package:sqliteparser
SQLiteLexerINTO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerINTO_               = 91$/;"	c	package:sqliteparser
SQLiteLexerIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerIN_                 = 83$/;"	c	package:sqliteparser
SQLiteLexerISNULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerISNULL_             = 93$/;"	c	package:sqliteparser
SQLiteLexerIS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerIS_                 = 92$/;"	c	package:sqliteparser
SQLiteLexerInit	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^func SQLiteLexerInit() {$/;"	f	package:sqliteparser
SQLiteLexerJOIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerJOIN_               = 94$/;"	c	package:sqliteparser
SQLiteLexerKEY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerKEY_                = 95$/;"	c	package:sqliteparser
SQLiteLexerLAG_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerLAG_                = 161$/;"	c	package:sqliteparser
SQLiteLexerLAST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerLAST_               = 177$/;"	c	package:sqliteparser
SQLiteLexerLAST_VALUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerLAST_VALUE_         = 162$/;"	c	package:sqliteparser
SQLiteLexerLEAD_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerLEAD_               = 163$/;"	c	package:sqliteparser
SQLiteLexerLEFT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerLEFT_               = 96$/;"	c	package:sqliteparser
SQLiteLexerLIKE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerLIKE_               = 97$/;"	c	package:sqliteparser
SQLiteLexerLIMIT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerLIMIT_              = 98$/;"	c	package:sqliteparser
SQLiteLexerLT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerLT                  = 18$/;"	c	package:sqliteparser
SQLiteLexerLT2	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerLT2                 = 14$/;"	c	package:sqliteparser
SQLiteLexerLT_EQ	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerLT_EQ               = 19$/;"	c	package:sqliteparser
SQLiteLexerMATCH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerMATCH_              = 99$/;"	c	package:sqliteparser
SQLiteLexerMINUS	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerMINUS               = 9$/;"	c	package:sqliteparser
SQLiteLexerMOD	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerMOD                 = 13$/;"	c	package:sqliteparser
SQLiteLexerMULTILINE_COMMENT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerMULTILINE_COMMENT   = 191$/;"	c	package:sqliteparser
SQLiteLexerNATURAL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerNATURAL_            = 100$/;"	c	package:sqliteparser
SQLiteLexerNOTHING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerNOTHING_            = 184$/;"	c	package:sqliteparser
SQLiteLexerNOTNULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerNOTNULL_            = 103$/;"	c	package:sqliteparser
SQLiteLexerNOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerNOT_                = 102$/;"	c	package:sqliteparser
SQLiteLexerNOT_EQ1	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerNOT_EQ1             = 23$/;"	c	package:sqliteparser
SQLiteLexerNOT_EQ2	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerNOT_EQ2             = 24$/;"	c	package:sqliteparser
SQLiteLexerNO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerNO_                 = 101$/;"	c	package:sqliteparser
SQLiteLexerNTH_VALUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerNTH_VALUE_          = 164$/;"	c	package:sqliteparser
SQLiteLexerNTILE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerNTILE_              = 165$/;"	c	package:sqliteparser
SQLiteLexerNULLS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerNULLS_              = 175$/;"	c	package:sqliteparser
SQLiteLexerNULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerNULL_               = 104$/;"	c	package:sqliteparser
SQLiteLexerNUMERIC_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerNUMERIC_LITERAL     = 186$/;"	c	package:sqliteparser
SQLiteLexerOFFSET_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerOFFSET_             = 106$/;"	c	package:sqliteparser
SQLiteLexerOF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerOF_                 = 105$/;"	c	package:sqliteparser
SQLiteLexerON_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerON_                 = 107$/;"	c	package:sqliteparser
SQLiteLexerOPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerOPEN_PAR            = 3$/;"	c	package:sqliteparser
SQLiteLexerORDER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerORDER_              = 109$/;"	c	package:sqliteparser
SQLiteLexerOR_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerOR_                 = 108$/;"	c	package:sqliteparser
SQLiteLexerOTHERS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerOTHERS_             = 182$/;"	c	package:sqliteparser
SQLiteLexerOUTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerOUTER_              = 110$/;"	c	package:sqliteparser
SQLiteLexerOVER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerOVER_               = 152$/;"	c	package:sqliteparser
SQLiteLexerPARTITION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerPARTITION_          = 153$/;"	c	package:sqliteparser
SQLiteLexerPERCENT_RANK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerPERCENT_RANK_       = 166$/;"	c	package:sqliteparser
SQLiteLexerPIPE	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerPIPE                = 17$/;"	c	package:sqliteparser
SQLiteLexerPIPE2	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerPIPE2               = 11$/;"	c	package:sqliteparser
SQLiteLexerPLAN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerPLAN_               = 111$/;"	c	package:sqliteparser
SQLiteLexerPLUS	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerPLUS                = 8$/;"	c	package:sqliteparser
SQLiteLexerPRAGMA_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerPRAGMA_             = 112$/;"	c	package:sqliteparser
SQLiteLexerPRECEDING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerPRECEDING_          = 155$/;"	c	package:sqliteparser
SQLiteLexerPRIMARY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerPRIMARY_            = 113$/;"	c	package:sqliteparser
SQLiteLexerQUERY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerQUERY_              = 114$/;"	c	package:sqliteparser
SQLiteLexerRAISE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerRAISE_              = 115$/;"	c	package:sqliteparser
SQLiteLexerRANGE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerRANGE_              = 154$/;"	c	package:sqliteparser
SQLiteLexerRANK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerRANK_               = 167$/;"	c	package:sqliteparser
SQLiteLexerRECURSIVE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerRECURSIVE_          = 116$/;"	c	package:sqliteparser
SQLiteLexerREFERENCES_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerREFERENCES_         = 117$/;"	c	package:sqliteparser
SQLiteLexerREGEXP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerREGEXP_             = 118$/;"	c	package:sqliteparser
SQLiteLexerREINDEX_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerREINDEX_            = 119$/;"	c	package:sqliteparser
SQLiteLexerRELEASE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerRELEASE_            = 120$/;"	c	package:sqliteparser
SQLiteLexerRENAME_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerRENAME_             = 121$/;"	c	package:sqliteparser
SQLiteLexerREPLACE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerREPLACE_            = 122$/;"	c	package:sqliteparser
SQLiteLexerRESTRICT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerRESTRICT_           = 123$/;"	c	package:sqliteparser
SQLiteLexerRETURNING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerRETURNING_          = 124$/;"	c	package:sqliteparser
SQLiteLexerRIGHT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerRIGHT_              = 125$/;"	c	package:sqliteparser
SQLiteLexerROLLBACK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerROLLBACK_           = 126$/;"	c	package:sqliteparser
SQLiteLexerROWS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerROWS_               = 128$/;"	c	package:sqliteparser
SQLiteLexerROW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerROW_                = 127$/;"	c	package:sqliteparser
SQLiteLexerROW_NUMBER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerROW_NUMBER_         = 168$/;"	c	package:sqliteparser
SQLiteLexerSAVEPOINT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerSAVEPOINT_          = 129$/;"	c	package:sqliteparser
SQLiteLexerSCOL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerSCOL                = 1$/;"	c	package:sqliteparser
SQLiteLexerSELECT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerSELECT_             = 130$/;"	c	package:sqliteparser
SQLiteLexerSET_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerSET_                = 131$/;"	c	package:sqliteparser
SQLiteLexerSINGLE_LINE_COMMENT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerSINGLE_LINE_COMMENT = 190$/;"	c	package:sqliteparser
SQLiteLexerSPACES	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerSPACES              = 192$/;"	c	package:sqliteparser
SQLiteLexerSTAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerSTAR                = 7$/;"	c	package:sqliteparser
SQLiteLexerSTORED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerSTORED_             = 171$/;"	c	package:sqliteparser
SQLiteLexerSTRING_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerSTRING_LITERAL      = 188$/;"	c	package:sqliteparser
SQLiteLexerTABLE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerTABLE_              = 132$/;"	c	package:sqliteparser
SQLiteLexerTEMPORARY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerTEMPORARY_          = 134$/;"	c	package:sqliteparser
SQLiteLexerTEMP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerTEMP_               = 133$/;"	c	package:sqliteparser
SQLiteLexerTHEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerTHEN_               = 135$/;"	c	package:sqliteparser
SQLiteLexerTIES_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerTIES_               = 181$/;"	c	package:sqliteparser
SQLiteLexerTILDE	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerTILDE               = 10$/;"	c	package:sqliteparser
SQLiteLexerTO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerTO_                 = 136$/;"	c	package:sqliteparser
SQLiteLexerTRANSACTION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerTRANSACTION_        = 137$/;"	c	package:sqliteparser
SQLiteLexerTRIGGER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerTRIGGER_            = 138$/;"	c	package:sqliteparser
SQLiteLexerTRUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerTRUE_               = 172$/;"	c	package:sqliteparser
SQLiteLexerUNBOUNDED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerUNBOUNDED_          = 156$/;"	c	package:sqliteparser
SQLiteLexerUNEXPECTED_CHAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerUNEXPECTED_CHAR     = 193$/;"	c	package:sqliteparser
SQLiteLexerUNION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerUNION_              = 139$/;"	c	package:sqliteparser
SQLiteLexerUNIQUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerUNIQUE_             = 140$/;"	c	package:sqliteparser
SQLiteLexerUPDATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerUPDATE_             = 141$/;"	c	package:sqliteparser
SQLiteLexerUSING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerUSING_              = 142$/;"	c	package:sqliteparser
SQLiteLexerVACUUM_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerVACUUM_             = 143$/;"	c	package:sqliteparser
SQLiteLexerVALUES_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerVALUES_             = 144$/;"	c	package:sqliteparser
SQLiteLexerVIEW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerVIEW_               = 145$/;"	c	package:sqliteparser
SQLiteLexerVIRTUAL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerVIRTUAL_            = 146$/;"	c	package:sqliteparser
SQLiteLexerWHEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerWHEN_               = 147$/;"	c	package:sqliteparser
SQLiteLexerWHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerWHERE_              = 148$/;"	c	package:sqliteparser
SQLiteLexerWINDOW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerWINDOW_             = 174$/;"	c	package:sqliteparser
SQLiteLexerWITHOUT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerWITHOUT_            = 150$/;"	c	package:sqliteparser
SQLiteLexerWITH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	SQLiteLexerWITH_               = 149$/;"	c	package:sqliteparser
SQLiteParser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type SQLiteParser struct {$/;"	s	package:sqliteparser
SQLiteParserABORT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserABORT_              = 25$/;"	c	package:sqliteparser
SQLiteParserACTION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserACTION_             = 26$/;"	c	package:sqliteparser
SQLiteParserADD_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserADD_                = 27$/;"	c	package:sqliteparser
SQLiteParserAFTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserAFTER_              = 28$/;"	c	package:sqliteparser
SQLiteParserALL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserALL_                = 29$/;"	c	package:sqliteparser
SQLiteParserALTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserALTER_              = 30$/;"	c	package:sqliteparser
SQLiteParserALWAYS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserALWAYS_             = 170$/;"	c	package:sqliteparser
SQLiteParserAMP	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserAMP                 = 16$/;"	c	package:sqliteparser
SQLiteParserANALYZE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserANALYZE_            = 31$/;"	c	package:sqliteparser
SQLiteParserAND_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserAND_                = 32$/;"	c	package:sqliteparser
SQLiteParserASC_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserASC_                = 34$/;"	c	package:sqliteparser
SQLiteParserASSIGN	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserASSIGN              = 6$/;"	c	package:sqliteparser
SQLiteParserAS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserAS_                 = 33$/;"	c	package:sqliteparser
SQLiteParserATTACH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserATTACH_             = 35$/;"	c	package:sqliteparser
SQLiteParserAUTOINCREMENT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserAUTOINCREMENT_      = 36$/;"	c	package:sqliteparser
SQLiteParserBEFORE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserBEFORE_             = 37$/;"	c	package:sqliteparser
SQLiteParserBEGIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserBEGIN_              = 38$/;"	c	package:sqliteparser
SQLiteParserBETWEEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserBETWEEN_            = 39$/;"	c	package:sqliteparser
SQLiteParserBIND_PARAMETER	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserBIND_PARAMETER      = 187$/;"	c	package:sqliteparser
SQLiteParserBLOB_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserBLOB_LITERAL        = 189$/;"	c	package:sqliteparser
SQLiteParserBY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserBY_                 = 40$/;"	c	package:sqliteparser
SQLiteParserCASCADE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserCASCADE_            = 41$/;"	c	package:sqliteparser
SQLiteParserCASE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserCASE_               = 42$/;"	c	package:sqliteparser
SQLiteParserCAST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserCAST_               = 43$/;"	c	package:sqliteparser
SQLiteParserCHECK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserCHECK_              = 44$/;"	c	package:sqliteparser
SQLiteParserCLOSE_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserCLOSE_PAR           = 4$/;"	c	package:sqliteparser
SQLiteParserCOLLATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserCOLLATE_            = 45$/;"	c	package:sqliteparser
SQLiteParserCOLUMN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserCOLUMN_             = 46$/;"	c	package:sqliteparser
SQLiteParserCOMMA	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserCOMMA               = 5$/;"	c	package:sqliteparser
SQLiteParserCOMMIT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserCOMMIT_             = 47$/;"	c	package:sqliteparser
SQLiteParserCONFLICT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserCONFLICT_           = 48$/;"	c	package:sqliteparser
SQLiteParserCONSTRAINT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserCONSTRAINT_         = 49$/;"	c	package:sqliteparser
SQLiteParserCREATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserCREATE_             = 50$/;"	c	package:sqliteparser
SQLiteParserCROSS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserCROSS_              = 51$/;"	c	package:sqliteparser
SQLiteParserCUME_DIST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserCUME_DIST_          = 159$/;"	c	package:sqliteparser
SQLiteParserCURRENT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserCURRENT_            = 157$/;"	c	package:sqliteparser
SQLiteParserCURRENT_DATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserCURRENT_DATE_       = 52$/;"	c	package:sqliteparser
SQLiteParserCURRENT_TIMESTAMP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserCURRENT_TIMESTAMP_  = 54$/;"	c	package:sqliteparser
SQLiteParserCURRENT_TIME_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserCURRENT_TIME_       = 53$/;"	c	package:sqliteparser
SQLiteParserDATABASE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserDATABASE_           = 55$/;"	c	package:sqliteparser
SQLiteParserDEFAULT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserDEFAULT_            = 56$/;"	c	package:sqliteparser
SQLiteParserDEFERRABLE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserDEFERRABLE_         = 57$/;"	c	package:sqliteparser
SQLiteParserDEFERRED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserDEFERRED_           = 58$/;"	c	package:sqliteparser
SQLiteParserDELETE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserDELETE_             = 59$/;"	c	package:sqliteparser
SQLiteParserDENSE_RANK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserDENSE_RANK_         = 160$/;"	c	package:sqliteparser
SQLiteParserDESC_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserDESC_               = 60$/;"	c	package:sqliteparser
SQLiteParserDETACH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserDETACH_             = 61$/;"	c	package:sqliteparser
SQLiteParserDISTINCT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserDISTINCT_           = 62$/;"	c	package:sqliteparser
SQLiteParserDIV	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserDIV                 = 12$/;"	c	package:sqliteparser
SQLiteParserDOT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserDOT                 = 2$/;"	c	package:sqliteparser
SQLiteParserDO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserDO_                 = 183$/;"	c	package:sqliteparser
SQLiteParserDROP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserDROP_               = 63$/;"	c	package:sqliteparser
SQLiteParserEACH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserEACH_               = 64$/;"	c	package:sqliteparser
SQLiteParserELSE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserELSE_               = 65$/;"	c	package:sqliteparser
SQLiteParserEND_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserEND_                = 66$/;"	c	package:sqliteparser
SQLiteParserEOF	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserEOF                 = antlr.TokenEOF$/;"	c	package:sqliteparser
SQLiteParserEQ	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserEQ                  = 22$/;"	c	package:sqliteparser
SQLiteParserESCAPE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserESCAPE_             = 67$/;"	c	package:sqliteparser
SQLiteParserEXCEPT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserEXCEPT_             = 68$/;"	c	package:sqliteparser
SQLiteParserEXCLUDE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserEXCLUDE_            = 180$/;"	c	package:sqliteparser
SQLiteParserEXCLUSIVE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserEXCLUSIVE_          = 69$/;"	c	package:sqliteparser
SQLiteParserEXISTS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserEXISTS_             = 70$/;"	c	package:sqliteparser
SQLiteParserEXPLAIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserEXPLAIN_            = 71$/;"	c	package:sqliteparser
SQLiteParserFAIL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserFAIL_               = 72$/;"	c	package:sqliteparser
SQLiteParserFALSE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserFALSE_              = 173$/;"	c	package:sqliteparser
SQLiteParserFILTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserFILTER_             = 178$/;"	c	package:sqliteparser
SQLiteParserFIRST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserFIRST_              = 176$/;"	c	package:sqliteparser
SQLiteParserFIRST_VALUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserFIRST_VALUE_        = 151$/;"	c	package:sqliteparser
SQLiteParserFOLLOWING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserFOLLOWING_          = 158$/;"	c	package:sqliteparser
SQLiteParserFOREIGN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserFOREIGN_            = 74$/;"	c	package:sqliteparser
SQLiteParserFOR_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserFOR_                = 73$/;"	c	package:sqliteparser
SQLiteParserFROM_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserFROM_               = 75$/;"	c	package:sqliteparser
SQLiteParserFULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserFULL_               = 76$/;"	c	package:sqliteparser
SQLiteParserGENERATED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserGENERATED_          = 169$/;"	c	package:sqliteparser
SQLiteParserGLOB_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserGLOB_               = 77$/;"	c	package:sqliteparser
SQLiteParserGROUPS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserGROUPS_             = 179$/;"	c	package:sqliteparser
SQLiteParserGROUP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserGROUP_              = 78$/;"	c	package:sqliteparser
SQLiteParserGT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserGT                  = 20$/;"	c	package:sqliteparser
SQLiteParserGT2	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserGT2                 = 15$/;"	c	package:sqliteparser
SQLiteParserGT_EQ	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserGT_EQ               = 21$/;"	c	package:sqliteparser
SQLiteParserHAVING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserHAVING_             = 79$/;"	c	package:sqliteparser
SQLiteParserIDENTIFIER	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserIDENTIFIER          = 185$/;"	c	package:sqliteparser
SQLiteParserIF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserIF_                 = 80$/;"	c	package:sqliteparser
SQLiteParserIGNORE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserIGNORE_             = 81$/;"	c	package:sqliteparser
SQLiteParserIMMEDIATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserIMMEDIATE_          = 82$/;"	c	package:sqliteparser
SQLiteParserINDEXED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserINDEXED_            = 85$/;"	c	package:sqliteparser
SQLiteParserINDEX_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserINDEX_              = 84$/;"	c	package:sqliteparser
SQLiteParserINITIALLY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserINITIALLY_          = 86$/;"	c	package:sqliteparser
SQLiteParserINNER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserINNER_              = 87$/;"	c	package:sqliteparser
SQLiteParserINSERT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserINSERT_             = 88$/;"	c	package:sqliteparser
SQLiteParserINSTEAD_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserINSTEAD_            = 89$/;"	c	package:sqliteparser
SQLiteParserINTERSECT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserINTERSECT_          = 90$/;"	c	package:sqliteparser
SQLiteParserINTO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserINTO_               = 91$/;"	c	package:sqliteparser
SQLiteParserIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserIN_                 = 83$/;"	c	package:sqliteparser
SQLiteParserISNULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserISNULL_             = 93$/;"	c	package:sqliteparser
SQLiteParserIS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserIS_                 = 92$/;"	c	package:sqliteparser
SQLiteParserInit	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func SQLiteParserInit() {$/;"	f	package:sqliteparser
SQLiteParserJOIN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserJOIN_               = 94$/;"	c	package:sqliteparser
SQLiteParserKEY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserKEY_                = 95$/;"	c	package:sqliteparser
SQLiteParserLAG_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserLAG_                = 161$/;"	c	package:sqliteparser
SQLiteParserLAST_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserLAST_               = 177$/;"	c	package:sqliteparser
SQLiteParserLAST_VALUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserLAST_VALUE_         = 162$/;"	c	package:sqliteparser
SQLiteParserLEAD_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserLEAD_               = 163$/;"	c	package:sqliteparser
SQLiteParserLEFT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserLEFT_               = 96$/;"	c	package:sqliteparser
SQLiteParserLIKE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserLIKE_               = 97$/;"	c	package:sqliteparser
SQLiteParserLIMIT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserLIMIT_              = 98$/;"	c	package:sqliteparser
SQLiteParserLT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserLT                  = 18$/;"	c	package:sqliteparser
SQLiteParserLT2	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserLT2                 = 14$/;"	c	package:sqliteparser
SQLiteParserLT_EQ	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserLT_EQ               = 19$/;"	c	package:sqliteparser
SQLiteParserListener	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^type SQLiteParserListener interface {$/;"	i	package:sqliteparser
SQLiteParserMATCH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserMATCH_              = 99$/;"	c	package:sqliteparser
SQLiteParserMINUS	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserMINUS               = 9$/;"	c	package:sqliteparser
SQLiteParserMOD	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserMOD                 = 13$/;"	c	package:sqliteparser
SQLiteParserMULTILINE_COMMENT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserMULTILINE_COMMENT   = 191$/;"	c	package:sqliteparser
SQLiteParserNATURAL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserNATURAL_            = 100$/;"	c	package:sqliteparser
SQLiteParserNOTHING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserNOTHING_            = 184$/;"	c	package:sqliteparser
SQLiteParserNOTNULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserNOTNULL_            = 103$/;"	c	package:sqliteparser
SQLiteParserNOT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserNOT_                = 102$/;"	c	package:sqliteparser
SQLiteParserNOT_EQ1	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserNOT_EQ1             = 23$/;"	c	package:sqliteparser
SQLiteParserNOT_EQ2	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserNOT_EQ2             = 24$/;"	c	package:sqliteparser
SQLiteParserNO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserNO_                 = 101$/;"	c	package:sqliteparser
SQLiteParserNTH_VALUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserNTH_VALUE_          = 164$/;"	c	package:sqliteparser
SQLiteParserNTILE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserNTILE_              = 165$/;"	c	package:sqliteparser
SQLiteParserNULLS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserNULLS_              = 175$/;"	c	package:sqliteparser
SQLiteParserNULL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserNULL_               = 104$/;"	c	package:sqliteparser
SQLiteParserNUMERIC_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserNUMERIC_LITERAL     = 186$/;"	c	package:sqliteparser
SQLiteParserOFFSET_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserOFFSET_             = 106$/;"	c	package:sqliteparser
SQLiteParserOF_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserOF_                 = 105$/;"	c	package:sqliteparser
SQLiteParserON_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserON_                 = 107$/;"	c	package:sqliteparser
SQLiteParserOPEN_PAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserOPEN_PAR            = 3$/;"	c	package:sqliteparser
SQLiteParserORDER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserORDER_              = 109$/;"	c	package:sqliteparser
SQLiteParserOR_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserOR_                 = 108$/;"	c	package:sqliteparser
SQLiteParserOTHERS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserOTHERS_             = 182$/;"	c	package:sqliteparser
SQLiteParserOUTER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserOUTER_              = 110$/;"	c	package:sqliteparser
SQLiteParserOVER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserOVER_               = 152$/;"	c	package:sqliteparser
SQLiteParserPARTITION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserPARTITION_          = 153$/;"	c	package:sqliteparser
SQLiteParserPERCENT_RANK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserPERCENT_RANK_       = 166$/;"	c	package:sqliteparser
SQLiteParserPIPE	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserPIPE                = 17$/;"	c	package:sqliteparser
SQLiteParserPIPE2	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserPIPE2               = 11$/;"	c	package:sqliteparser
SQLiteParserPLAN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserPLAN_               = 111$/;"	c	package:sqliteparser
SQLiteParserPLUS	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserPLUS                = 8$/;"	c	package:sqliteparser
SQLiteParserPRAGMA_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserPRAGMA_             = 112$/;"	c	package:sqliteparser
SQLiteParserPRECEDING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserPRECEDING_          = 155$/;"	c	package:sqliteparser
SQLiteParserPRIMARY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserPRIMARY_            = 113$/;"	c	package:sqliteparser
SQLiteParserQUERY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserQUERY_              = 114$/;"	c	package:sqliteparser
SQLiteParserRAISE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRAISE_              = 115$/;"	c	package:sqliteparser
SQLiteParserRANGE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRANGE_              = 154$/;"	c	package:sqliteparser
SQLiteParserRANK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRANK_               = 167$/;"	c	package:sqliteparser
SQLiteParserRECURSIVE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRECURSIVE_          = 116$/;"	c	package:sqliteparser
SQLiteParserREFERENCES_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserREFERENCES_         = 117$/;"	c	package:sqliteparser
SQLiteParserREGEXP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserREGEXP_             = 118$/;"	c	package:sqliteparser
SQLiteParserREINDEX_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserREINDEX_            = 119$/;"	c	package:sqliteparser
SQLiteParserRELEASE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRELEASE_            = 120$/;"	c	package:sqliteparser
SQLiteParserRENAME_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRENAME_             = 121$/;"	c	package:sqliteparser
SQLiteParserREPLACE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserREPLACE_            = 122$/;"	c	package:sqliteparser
SQLiteParserRESTRICT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRESTRICT_           = 123$/;"	c	package:sqliteparser
SQLiteParserRETURNING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRETURNING_          = 124$/;"	c	package:sqliteparser
SQLiteParserRIGHT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRIGHT_              = 125$/;"	c	package:sqliteparser
SQLiteParserROLLBACK_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserROLLBACK_           = 126$/;"	c	package:sqliteparser
SQLiteParserROWS_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserROWS_               = 128$/;"	c	package:sqliteparser
SQLiteParserROW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserROW_                = 127$/;"	c	package:sqliteparser
SQLiteParserROW_NUMBER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserROW_NUMBER_         = 168$/;"	c	package:sqliteparser
SQLiteParserRULE_aggregate_func	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_aggregate_func                = 110$/;"	c	package:sqliteparser
SQLiteParserRULE_aggregate_function_invocation	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_aggregate_function_invocation = 65$/;"	c	package:sqliteparser
SQLiteParserRULE_alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_alias                         = 106$/;"	c	package:sqliteparser
SQLiteParserRULE_alter_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_alter_table_stmt              = 3$/;"	c	package:sqliteparser
SQLiteParserRULE_analyze_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_analyze_stmt                  = 4$/;"	c	package:sqliteparser
SQLiteParserRULE_any_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_any_name                      = 112$/;"	c	package:sqliteparser
SQLiteParserRULE_asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_asc_desc                      = 71$/;"	c	package:sqliteparser
SQLiteParserRULE_attach_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_attach_stmt                   = 5$/;"	c	package:sqliteparser
SQLiteParserRULE_base_window_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_base_window_name              = 108$/;"	c	package:sqliteparser
SQLiteParserRULE_begin_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_begin_stmt                    = 6$/;"	c	package:sqliteparser
SQLiteParserRULE_collation_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_collation_name                = 95$/;"	c	package:sqliteparser
SQLiteParserRULE_column_alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_column_alias                  = 87$/;"	c	package:sqliteparser
SQLiteParserRULE_column_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_column_constraint             = 16$/;"	c	package:sqliteparser
SQLiteParserRULE_column_def	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_column_def                    = 14$/;"	c	package:sqliteparser
SQLiteParserRULE_column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_column_name                   = 94$/;"	c	package:sqliteparser
SQLiteParserRULE_column_name_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_column_name_list              = 55$/;"	c	package:sqliteparser
SQLiteParserRULE_commit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_commit_stmt                   = 7$/;"	c	package:sqliteparser
SQLiteParserRULE_common_table_expression	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_common_table_expression       = 27$/;"	c	package:sqliteparser
SQLiteParserRULE_common_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_common_table_stmt             = 67$/;"	c	package:sqliteparser
SQLiteParserRULE_compound_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_compound_operator             = 53$/;"	c	package:sqliteparser
SQLiteParserRULE_compound_select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_compound_select_stmt          = 48$/;"	c	package:sqliteparser
SQLiteParserRULE_conflict_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_conflict_clause               = 20$/;"	c	package:sqliteparser
SQLiteParserRULE_create_index_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_create_index_stmt             = 11$/;"	c	package:sqliteparser
SQLiteParserRULE_create_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_create_table_stmt             = 13$/;"	c	package:sqliteparser
SQLiteParserRULE_create_trigger_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_create_trigger_stmt           = 21$/;"	c	package:sqliteparser
SQLiteParserRULE_create_view_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_create_view_stmt              = 22$/;"	c	package:sqliteparser
SQLiteParserRULE_create_virtual_table_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_create_virtual_table_stmt     = 23$/;"	c	package:sqliteparser
SQLiteParserRULE_cte_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_cte_table_name                = 25$/;"	c	package:sqliteparser
SQLiteParserRULE_default_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_default_value                 = 77$/;"	c	package:sqliteparser
SQLiteParserRULE_delete_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_delete_stmt                   = 28$/;"	c	package:sqliteparser
SQLiteParserRULE_delete_stmt_limited	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_delete_stmt_limited           = 29$/;"	c	package:sqliteparser
SQLiteParserRULE_detach_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_detach_stmt                   = 30$/;"	c	package:sqliteparser
SQLiteParserRULE_drop_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_drop_stmt                     = 31$/;"	c	package:sqliteparser
SQLiteParserRULE_error_message	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_error_message                 = 85$/;"	c	package:sqliteparser
SQLiteParserRULE_expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_expr                          = 32$/;"	c	package:sqliteparser
SQLiteParserRULE_expr_asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_expr_asc_desc                 = 81$/;"	c	package:sqliteparser
SQLiteParserRULE_factored_select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_factored_select_stmt          = 46$/;"	c	package:sqliteparser
SQLiteParserRULE_filename	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_filename                      = 107$/;"	c	package:sqliteparser
SQLiteParserRULE_filter_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_filter_clause                 = 59$/;"	c	package:sqliteparser
SQLiteParserRULE_foreign_key_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_foreign_key_clause            = 19$/;"	c	package:sqliteparser
SQLiteParserRULE_foreign_table	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_foreign_table                 = 96$/;"	c	package:sqliteparser
SQLiteParserRULE_frame_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_frame_clause                  = 63$/;"	c	package:sqliteparser
SQLiteParserRULE_frame_left	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_frame_left                    = 72$/;"	c	package:sqliteparser
SQLiteParserRULE_frame_right	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_frame_right                   = 73$/;"	c	package:sqliteparser
SQLiteParserRULE_frame_single	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_frame_single                  = 74$/;"	c	package:sqliteparser
SQLiteParserRULE_frame_spec	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_frame_spec                    = 62$/;"	c	package:sqliteparser
SQLiteParserRULE_function_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_function_name                 = 90$/;"	c	package:sqliteparser
SQLiteParserRULE_index_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_index_name                    = 97$/;"	c	package:sqliteparser
SQLiteParserRULE_indexed_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_indexed_column                = 12$/;"	c	package:sqliteparser
SQLiteParserRULE_initial_select	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_initial_select                = 82$/;"	c	package:sqliteparser
SQLiteParserRULE_insert_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_insert_stmt                   = 37$/;"	c	package:sqliteparser
SQLiteParserRULE_join_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_join_clause                   = 44$/;"	c	package:sqliteparser
SQLiteParserRULE_join_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_join_constraint               = 52$/;"	c	package:sqliteparser
SQLiteParserRULE_join_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_join_operator                 = 51$/;"	c	package:sqliteparser
SQLiteParserRULE_keyword	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_keyword                       = 88$/;"	c	package:sqliteparser
SQLiteParserRULE_limit_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_limit_stmt                    = 69$/;"	c	package:sqliteparser
SQLiteParserRULE_literal_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_literal_value                 = 34$/;"	c	package:sqliteparser
SQLiteParserRULE_module_argument	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_module_argument               = 86$/;"	c	package:sqliteparser
SQLiteParserRULE_module_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_module_name                   = 100$/;"	c	package:sqliteparser
SQLiteParserRULE_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_name                          = 89$/;"	c	package:sqliteparser
SQLiteParserRULE_offset	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_offset                        = 76$/;"	c	package:sqliteparser
SQLiteParserRULE_order_by_expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_order_by_expr                 = 79$/;"	c	package:sqliteparser
SQLiteParserRULE_order_by_expr_asc_desc	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_order_by_expr_asc_desc        = 80$/;"	c	package:sqliteparser
SQLiteParserRULE_order_by_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_order_by_stmt                 = 68$/;"	c	package:sqliteparser
SQLiteParserRULE_ordering_term	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_ordering_term                 = 70$/;"	c	package:sqliteparser
SQLiteParserRULE_over_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_over_clause                   = 61$/;"	c	package:sqliteparser
SQLiteParserRULE_parse	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_parse                         = 0$/;"	c	package:sqliteparser
SQLiteParserRULE_partition_by	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_partition_by                  = 78$/;"	c	package:sqliteparser
SQLiteParserRULE_pragma_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_pragma_name                   = 101$/;"	c	package:sqliteparser
SQLiteParserRULE_pragma_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_pragma_stmt                   = 40$/;"	c	package:sqliteparser
SQLiteParserRULE_pragma_value	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_pragma_value                  = 41$/;"	c	package:sqliteparser
SQLiteParserRULE_qualified_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_qualified_table_name          = 57$/;"	c	package:sqliteparser
SQLiteParserRULE_raise_function	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_raise_function                = 33$/;"	c	package:sqliteparser
SQLiteParserRULE_recursive_cte	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_recursive_cte                 = 26$/;"	c	package:sqliteparser
SQLiteParserRULE_recursive_select	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_recursive_select              = 83$/;"	c	package:sqliteparser
SQLiteParserRULE_reindex_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_reindex_stmt                  = 42$/;"	c	package:sqliteparser
SQLiteParserRULE_release_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_release_stmt                  = 10$/;"	c	package:sqliteparser
SQLiteParserRULE_result_column	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_result_column                 = 50$/;"	c	package:sqliteparser
SQLiteParserRULE_returning_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_returning_clause              = 38$/;"	c	package:sqliteparser
SQLiteParserRULE_rollback_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_rollback_stmt                 = 8$/;"	c	package:sqliteparser
SQLiteParserRULE_savepoint_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_savepoint_name                = 102$/;"	c	package:sqliteparser
SQLiteParserRULE_savepoint_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_savepoint_stmt                = 9$/;"	c	package:sqliteparser
SQLiteParserRULE_schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_schema_name                   = 91$/;"	c	package:sqliteparser
SQLiteParserRULE_select_core	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_select_core                   = 45$/;"	c	package:sqliteparser
SQLiteParserRULE_select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_select_stmt                   = 43$/;"	c	package:sqliteparser
SQLiteParserRULE_signed_number	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_signed_number                 = 17$/;"	c	package:sqliteparser
SQLiteParserRULE_simple_func	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_simple_func                   = 109$/;"	c	package:sqliteparser
SQLiteParserRULE_simple_function_invocation	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_simple_function_invocation    = 64$/;"	c	package:sqliteparser
SQLiteParserRULE_simple_select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_simple_select_stmt            = 47$/;"	c	package:sqliteparser
SQLiteParserRULE_sql_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_sql_stmt                      = 2$/;"	c	package:sqliteparser
SQLiteParserRULE_sql_stmt_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_sql_stmt_list                 = 1$/;"	c	package:sqliteparser
SQLiteParserRULE_table_alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_table_alias                   = 103$/;"	c	package:sqliteparser
SQLiteParserRULE_table_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_table_constraint              = 18$/;"	c	package:sqliteparser
SQLiteParserRULE_table_function_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_table_function_name           = 111$/;"	c	package:sqliteparser
SQLiteParserRULE_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_table_name                    = 92$/;"	c	package:sqliteparser
SQLiteParserRULE_table_or_index_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_table_or_index_name           = 93$/;"	c	package:sqliteparser
SQLiteParserRULE_table_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_table_or_subquery             = 49$/;"	c	package:sqliteparser
SQLiteParserRULE_transaction_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_transaction_name              = 104$/;"	c	package:sqliteparser
SQLiteParserRULE_trigger_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_trigger_name                  = 98$/;"	c	package:sqliteparser
SQLiteParserRULE_type_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_type_name                     = 15$/;"	c	package:sqliteparser
SQLiteParserRULE_unary_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_unary_operator                = 84$/;"	c	package:sqliteparser
SQLiteParserRULE_update_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_update_stmt                   = 54$/;"	c	package:sqliteparser
SQLiteParserRULE_update_stmt_limited	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_update_stmt_limited           = 56$/;"	c	package:sqliteparser
SQLiteParserRULE_upsert_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_upsert_clause                 = 39$/;"	c	package:sqliteparser
SQLiteParserRULE_vacuum_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_vacuum_stmt                   = 58$/;"	c	package:sqliteparser
SQLiteParserRULE_value_row	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_value_row                     = 35$/;"	c	package:sqliteparser
SQLiteParserRULE_values_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_values_clause                 = 36$/;"	c	package:sqliteparser
SQLiteParserRULE_view_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_view_name                     = 99$/;"	c	package:sqliteparser
SQLiteParserRULE_window_defn	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_window_defn                   = 60$/;"	c	package:sqliteparser
SQLiteParserRULE_window_function	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_window_function               = 75$/;"	c	package:sqliteparser
SQLiteParserRULE_window_function_invocation	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_window_function_invocation    = 66$/;"	c	package:sqliteparser
SQLiteParserRULE_window_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_window_name                   = 105$/;"	c	package:sqliteparser
SQLiteParserRULE_with_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserRULE_with_clause                   = 24$/;"	c	package:sqliteparser
SQLiteParserSAVEPOINT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserSAVEPOINT_          = 129$/;"	c	package:sqliteparser
SQLiteParserSCOL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserSCOL                = 1$/;"	c	package:sqliteparser
SQLiteParserSELECT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserSELECT_             = 130$/;"	c	package:sqliteparser
SQLiteParserSET_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserSET_                = 131$/;"	c	package:sqliteparser
SQLiteParserSINGLE_LINE_COMMENT	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserSINGLE_LINE_COMMENT = 190$/;"	c	package:sqliteparser
SQLiteParserSPACES	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserSPACES              = 192$/;"	c	package:sqliteparser
SQLiteParserSTAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserSTAR                = 7$/;"	c	package:sqliteparser
SQLiteParserSTORED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserSTORED_             = 171$/;"	c	package:sqliteparser
SQLiteParserSTRING_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserSTRING_LITERAL      = 188$/;"	c	package:sqliteparser
SQLiteParserTABLE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserTABLE_              = 132$/;"	c	package:sqliteparser
SQLiteParserTEMPORARY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserTEMPORARY_          = 134$/;"	c	package:sqliteparser
SQLiteParserTEMP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserTEMP_               = 133$/;"	c	package:sqliteparser
SQLiteParserTHEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserTHEN_               = 135$/;"	c	package:sqliteparser
SQLiteParserTIES_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserTIES_               = 181$/;"	c	package:sqliteparser
SQLiteParserTILDE	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserTILDE               = 10$/;"	c	package:sqliteparser
SQLiteParserTO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserTO_                 = 136$/;"	c	package:sqliteparser
SQLiteParserTRANSACTION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserTRANSACTION_        = 137$/;"	c	package:sqliteparser
SQLiteParserTRIGGER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserTRIGGER_            = 138$/;"	c	package:sqliteparser
SQLiteParserTRUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserTRUE_               = 172$/;"	c	package:sqliteparser
SQLiteParserUNBOUNDED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserUNBOUNDED_          = 156$/;"	c	package:sqliteparser
SQLiteParserUNEXPECTED_CHAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserUNEXPECTED_CHAR     = 193$/;"	c	package:sqliteparser
SQLiteParserUNION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserUNION_              = 139$/;"	c	package:sqliteparser
SQLiteParserUNIQUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserUNIQUE_             = 140$/;"	c	package:sqliteparser
SQLiteParserUPDATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserUPDATE_             = 141$/;"	c	package:sqliteparser
SQLiteParserUSING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserUSING_              = 142$/;"	c	package:sqliteparser
SQLiteParserVACUUM_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserVACUUM_             = 143$/;"	c	package:sqliteparser
SQLiteParserVALUES_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserVALUES_             = 144$/;"	c	package:sqliteparser
SQLiteParserVIEW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserVIEW_               = 145$/;"	c	package:sqliteparser
SQLiteParserVIRTUAL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserVIRTUAL_            = 146$/;"	c	package:sqliteparser
SQLiteParserWHEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserWHEN_               = 147$/;"	c	package:sqliteparser
SQLiteParserWHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserWHERE_              = 148$/;"	c	package:sqliteparser
SQLiteParserWINDOW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserWINDOW_             = 174$/;"	c	package:sqliteparser
SQLiteParserWITHOUT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserWITHOUT_            = 150$/;"	c	package:sqliteparser
SQLiteParserWITH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SQLiteParserWITH_               = 149$/;"	c	package:sqliteparser
STAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	STAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAggregate_function_invocationContext	typeref:typename:antlr.TerminalNode
STAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	STAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
STAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	STAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IResult_columnContext	typeref:typename:antlr.TerminalNode
STAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	STAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.ISimple_function_invocationContext	typeref:typename:antlr.TerminalNode
STAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	STAR() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWindow_function_invocationContext	typeref:typename:antlr.TerminalNode
STAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Aggregate_function_invocationContext) STAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Aggregate_function_invocationContext	typeref:typename:antlr.TerminalNode
STAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) STAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
STAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Result_columnContext) STAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Result_columnContext	typeref:typename:antlr.TerminalNode
STAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_function_invocationContext) STAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Simple_function_invocationContext	typeref:typename:antlr.TerminalNode
STAR	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_function_invocationContext) STAR() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Window_function_invocationContext	typeref:typename:antlr.TerminalNode
STORED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	STORED_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:antlr.TerminalNode
STORED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	STORED_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
STORED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) STORED_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:antlr.TerminalNode
STORED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) STORED_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
STRING_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	STRING_LITERAL() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAny_nameContext	typeref:typename:antlr.TerminalNode
STRING_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	STRING_LITERAL() antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_aliasContext	typeref:typename:antlr.TerminalNode
STRING_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	STRING_LITERAL() antlr.TerminalNode$/;"	n	interface:sqliteparser.IError_messageContext	typeref:typename:antlr.TerminalNode
STRING_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	STRING_LITERAL() antlr.TerminalNode$/;"	n	interface:sqliteparser.ILiteral_valueContext	typeref:typename:antlr.TerminalNode
STRING_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	STRING_LITERAL() antlr.TerminalNode$/;"	n	interface:sqliteparser.IPragma_valueContext	typeref:typename:antlr.TerminalNode
STRING_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Any_nameContext) STRING_LITERAL() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Any_nameContext	typeref:typename:antlr.TerminalNode
STRING_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_aliasContext) STRING_LITERAL() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_aliasContext	typeref:typename:antlr.TerminalNode
STRING_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Error_messageContext) STRING_LITERAL() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Error_messageContext	typeref:typename:antlr.TerminalNode
STRING_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Literal_valueContext) STRING_LITERAL() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Literal_valueContext	typeref:typename:antlr.TerminalNode
STRING_LITERAL	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_valueContext) STRING_LITERAL() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Pragma_valueContext	typeref:typename:antlr.TerminalNode
Savepoint_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Savepoint_name() ISavepoint_nameContext$/;"	n	interface:sqliteparser.IRelease_stmtContext	typeref:typename:ISavepoint_nameContext
Savepoint_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Savepoint_name() ISavepoint_nameContext$/;"	n	interface:sqliteparser.IRollback_stmtContext	typeref:typename:ISavepoint_nameContext
Savepoint_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Savepoint_name() ISavepoint_nameContext$/;"	n	interface:sqliteparser.ISavepoint_stmtContext	typeref:typename:ISavepoint_nameContext
Savepoint_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Savepoint_name() (localctx ISavepoint_nameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ISavepoint_nameContext)
Savepoint_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Release_stmtContext) Savepoint_name() ISavepoint_nameContext {$/;"	f	struct:sqliteparser.Release_stmtContext	typeref:typename:ISavepoint_nameContext
Savepoint_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Rollback_stmtContext) Savepoint_name() ISavepoint_nameContext {$/;"	f	struct:sqliteparser.Rollback_stmtContext	typeref:typename:ISavepoint_nameContext
Savepoint_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Savepoint_stmtContext) Savepoint_name() ISavepoint_nameContext {$/;"	f	struct:sqliteparser.Savepoint_stmtContext	typeref:typename:ISavepoint_nameContext
Savepoint_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Savepoint_nameContext struct {$/;"	s	package:sqliteparser
Savepoint_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Savepoint_stmt() ISavepoint_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:ISavepoint_stmtContext
Savepoint_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Savepoint_stmt() (localctx ISavepoint_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ISavepoint_stmtContext)
Savepoint_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Savepoint_stmt() ISavepoint_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:ISavepoint_stmtContext
Savepoint_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Savepoint_stmtContext struct {$/;"	s	package:sqliteparser
Scan	vendor/github.com/google/uuid/null.go	/^func (nu *NullUUID) Scan(value interface{}) error {$/;"	f	struct:uuid.NullUUID	typeref:typename:error
Scan	vendor/github.com/google/uuid/sql.go	/^func (uuid *UUID) Scan(src interface{}) error {$/;"	f	unknown:uuid.UUID	typeref:typename:error
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Schema_name() ISchema_nameContext$/;"	n	interface:sqliteparser.IAlter_table_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Schema_name() ISchema_nameContext$/;"	n	interface:sqliteparser.IAnalyze_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Schema_name() ISchema_nameContext$/;"	n	interface:sqliteparser.IAttach_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Schema_name() ISchema_nameContext$/;"	n	interface:sqliteparser.ICreate_index_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Schema_name() ISchema_nameContext$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Schema_name() ISchema_nameContext$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Schema_name() ISchema_nameContext$/;"	n	interface:sqliteparser.ICreate_view_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Schema_name() ISchema_nameContext$/;"	n	interface:sqliteparser.ICreate_virtual_table_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Schema_name() ISchema_nameContext$/;"	n	interface:sqliteparser.IDetach_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Schema_name() ISchema_nameContext$/;"	n	interface:sqliteparser.IDrop_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Schema_name() ISchema_nameContext$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Schema_name() ISchema_nameContext$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Schema_name() ISchema_nameContext$/;"	n	interface:sqliteparser.IPragma_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Schema_name() ISchema_nameContext$/;"	n	interface:sqliteparser.IQualified_table_nameContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Schema_name() ISchema_nameContext$/;"	n	interface:sqliteparser.IReindex_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Schema_name() ISchema_nameContext$/;"	n	interface:sqliteparser.ITable_or_subqueryContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Schema_name() ISchema_nameContext$/;"	n	interface:sqliteparser.IVacuum_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Schema_name() (localctx ISchema_nameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ISchema_nameContext)
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) Schema_name() ISchema_nameContext {$/;"	f	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Analyze_stmtContext) Schema_name() ISchema_nameContext {$/;"	f	struct:sqliteparser.Analyze_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Attach_stmtContext) Schema_name() ISchema_nameContext {$/;"	f	struct:sqliteparser.Attach_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) Schema_name() ISchema_nameContext {$/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) Schema_name() ISchema_nameContext {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) Schema_name() ISchema_nameContext {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) Schema_name() ISchema_nameContext {$/;"	f	struct:sqliteparser.Create_view_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) Schema_name() ISchema_nameContext {$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Detach_stmtContext) Schema_name() ISchema_nameContext {$/;"	f	struct:sqliteparser.Detach_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Drop_stmtContext) Schema_name() ISchema_nameContext {$/;"	f	struct:sqliteparser.Drop_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) Schema_name() ISchema_nameContext {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) Schema_name() ISchema_nameContext {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_stmtContext) Schema_name() ISchema_nameContext {$/;"	f	struct:sqliteparser.Pragma_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Qualified_table_nameContext) Schema_name() ISchema_nameContext {$/;"	f	struct:sqliteparser.Qualified_table_nameContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Reindex_stmtContext) Schema_name() ISchema_nameContext {$/;"	f	struct:sqliteparser.Reindex_stmtContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) Schema_name() ISchema_nameContext {$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:ISchema_nameContext
Schema_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Vacuum_stmtContext) Schema_name() ISchema_nameContext {$/;"	f	struct:sqliteparser.Vacuum_stmtContext	typeref:typename:ISchema_nameContext
Schema_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Schema_nameContext struct {$/;"	s	package:sqliteparser
Seek	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) Seek(index int) {$/;"	f	struct:antlr.CommonTokenStream
Seek	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/input_stream.go	/^func (is *InputStream) Seek(index int) {$/;"	f	struct:antlr.InputStream
Seek	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/int_stream.go	/^	Seek(index int)$/;"	n	interface:antlr.IntStream
Select_core	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Select_core() ISelect_coreContext$/;"	n	interface:sqliteparser.ISimple_select_stmtContext	typeref:typename:ISelect_coreContext
Select_core	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Select_core(i int) ISelect_coreContext$/;"	n	interface:sqliteparser.ICompound_select_stmtContext	typeref:typename:ISelect_coreContext
Select_core	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Select_core(i int) ISelect_coreContext$/;"	n	interface:sqliteparser.ISelect_stmtContext	typeref:typename:ISelect_coreContext
Select_core	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Select_core() (localctx ISelect_coreContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ISelect_coreContext)
Select_core	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_select_stmtContext) Select_core(i int) ISelect_coreContext {$/;"	f	struct:sqliteparser.Compound_select_stmtContext	typeref:typename:ISelect_coreContext
Select_core	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_stmtContext) Select_core(i int) ISelect_coreContext {$/;"	f	struct:sqliteparser.Select_stmtContext	typeref:typename:ISelect_coreContext
Select_core	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_select_stmtContext) Select_core() ISelect_coreContext {$/;"	f	struct:sqliteparser.Simple_select_stmtContext	typeref:typename:ISelect_coreContext
Select_coreContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Select_coreContext struct {$/;"	s	package:sqliteparser
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Select_stmt() ISelect_stmtContext$/;"	n	interface:sqliteparser.ICommon_table_expressionContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Select_stmt() ISelect_stmtContext$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Select_stmt() ISelect_stmtContext$/;"	n	interface:sqliteparser.ICreate_view_stmtContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Select_stmt() ISelect_stmtContext$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Select_stmt() ISelect_stmtContext$/;"	n	interface:sqliteparser.IFactored_select_stmtContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Select_stmt() ISelect_stmtContext$/;"	n	interface:sqliteparser.IInitial_selectContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Select_stmt() ISelect_stmtContext$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Select_stmt() ISelect_stmtContext$/;"	n	interface:sqliteparser.IRecursive_selectContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Select_stmt() ISelect_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Select_stmt() ISelect_stmtContext$/;"	n	interface:sqliteparser.ITable_or_subqueryContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Select_stmt(i int) ISelect_stmtContext$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Select_stmt(i int) ISelect_stmtContext$/;"	n	interface:sqliteparser.IWith_clauseContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Select_stmt() (localctx ISelect_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ISelect_stmtContext)
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_expressionContext) Select_stmt() ISelect_stmtContext {$/;"	f	struct:sqliteparser.Common_table_expressionContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) Select_stmt() ISelect_stmtContext {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) Select_stmt(i int) ISelect_stmtContext {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) Select_stmt() ISelect_stmtContext {$/;"	f	struct:sqliteparser.Create_view_stmtContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) Select_stmt() ISelect_stmtContext {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Factored_select_stmtContext) Select_stmt() ISelect_stmtContext {$/;"	f	struct:sqliteparser.Factored_select_stmtContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Initial_selectContext) Select_stmt() ISelect_stmtContext {$/;"	f	struct:sqliteparser.Initial_selectContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) Select_stmt() ISelect_stmtContext {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Recursive_selectContext) Select_stmt() ISelect_stmtContext {$/;"	f	struct:sqliteparser.Recursive_selectContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Select_stmt() ISelect_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) Select_stmt() ISelect_stmtContext {$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:ISelect_stmtContext
Select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *With_clauseContext) Select_stmt(i int) ISelect_stmtContext {$/;"	f	struct:sqliteparser.With_clauseContext	typeref:typename:ISelect_stmtContext
Select_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Select_stmtContext struct {$/;"	s	package:sqliteparser
SemCComparator	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/comparators.go	/^type SemCComparator[T Collectable[T]] struct{}$/;"	t	package:antlr	typeref:typename:[T Collectable[T]] struct{}
SemanticContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^type SemanticContext interface {$/;"	i	package:antlr
SemanticContextNone	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^var SemanticContextNone = NewPredicate(-1, -1, false)$/;"	v	package:antlr
SemanticContextandContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func SemanticContextandContext(a, b SemanticContext) SemanticContext {$/;"	f	package:antlr	typeref:typename:SemanticContext
SemanticContextorContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func SemanticContextorContext(a, b SemanticContext) SemanticContext {$/;"	f	package:antlr	typeref:typename:SemanticContext
Sempred	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^	Sempred(RuleContext, int, int) bool$/;"	n	interface:antlr.Recognizer	typeref:typename:bool
Sempred	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^func (b *BaseRecognizer) Sempred(localctx RuleContext, ruleIndex int, actionIndex int) bool {$/;"	f	struct:antlr.BaseRecognizer	typeref:typename:bool
Sempred	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Sempred(localctx antlr.RuleContext, ruleIndex, predIndex int) bool {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:bool
SendBytes	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^func (c WebSocket) SendBytes(v []byte) (err error) {$/;"	f	struct:wsjs.WebSocket	typeref:typename:(err error)
SendText	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^func (c WebSocket) SendText(v string) (err error) {$/;"	f	struct:wsjs.WebSocket	typeref:typename:(err error)
ServeHTTP	vendor/github.com/go-chi/chi/chain.go	/^func (c *ChainHandler) ServeHTTP(w http.ResponseWriter, r *http.Request) {$/;"	f	struct:chi.ChainHandler
ServeHTTP	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) ServeHTTP(w http.ResponseWriter, r *http.Request) {$/;"	f	struct:chi.Mux
Server	vendor/nhooyr.io/websocket/README.md	/^### Server$/;"	S	section:websocket""Examples
Set	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^type Set interface {$/;"	i	package:antlr
SetATN	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	SetATN(*ATN)$/;"	n	interface:antlr.ATNState
SetATN	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (as *BaseATNState) SetATN(atn *ATN) {$/;"	f	struct:antlr.BaseATNState
SetAltNumber	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^	SetAltNumber(altNumber int)$/;"	n	interface:antlr.RuleContext
SetAltNumber	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^func (b *BaseRuleContext) SetAltNumber(altNumber int) {}$/;"	f	struct:antlr.BaseRuleContext
SetChannel	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	SetChannel(int)$/;"	n	interface:antlr.Lexer
SetChannel	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) SetChannel(v int) {$/;"	f	struct:antlr.BaseLexer
SetChildren	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (t *TerminalNodeImpl) SetChildren(tree []Tree) {$/;"	f	struct:antlr.TerminalNodeImpl
SetClockSequence	vendor/github.com/google/uuid/time.go	/^func SetClockSequence(seq int) {$/;"	f	package:uuid
SetConflictingAlts	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	SetConflictingAlts(*BitSet)$/;"	n	interface:antlr.ATNConfigSet
SetConflictingAlts	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) SetConflictingAlts(v *BitSet) {$/;"	f	struct:antlr.BaseATNConfigSet
SetContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^	SetContext(PredictionContext)$/;"	n	interface:antlr.ATNConfig
SetContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func (b *BaseATNConfig) SetContext(v PredictionContext) {$/;"	f	struct:antlr.BaseATNConfig
SetDeadline	vendor/nhooyr.io/websocket/netconn.go	/^func (c *netConn) SetDeadline(t time.Time) error {$/;"	f	struct:websocket.netConn	typeref:typename:error
SetDipsIntoOuterContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	SetDipsIntoOuterContext(bool)$/;"	n	interface:antlr.ATNConfigSet
SetDipsIntoOuterContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) SetDipsIntoOuterContext(v bool) {$/;"	f	struct:antlr.BaseATNConfigSet
SetErrorHandler	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	SetErrorHandler(ErrorStrategy)$/;"	n	interface:antlr.Parser
SetErrorHandler	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) SetErrorHandler(e ErrorStrategy) {$/;"	f	struct:antlr.BaseParser
SetException	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^	SetException(RecognitionException)$/;"	n	interface:antlr.ParserRuleContext
SetException	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) SetException(e RecognitionException) {$/;"	f	struct:antlr.BaseParserRuleContext
SetGenerateRuleBypassTransitions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserialization_options.go	/^func (opts *ATNDeserializationOptions) SetGenerateRuleBypassTransitions(generateRuleBypassTransi/;"	f	struct:antlr.ATNDeserializationOptions
SetGroupByExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SetGroupByExpr([]IExprContext)$/;"	n	interface:sqliteparser.ISelect_coreContext
SetGroupByExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) SetGroupByExpr(v []IExprContext) { s.groupByExpr = v }$/;"	f	struct:sqliteparser.Select_coreContext
SetHasSemanticContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	SetHasSemanticContext(v bool)$/;"	n	interface:antlr.ATNConfigSet
SetHasSemanticContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) SetHasSemanticContext(v bool) {$/;"	f	struct:antlr.BaseATNConfigSet
SetHavingExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SetHavingExpr(IExprContext)$/;"	n	interface:sqliteparser.ISelect_coreContext
SetHavingExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) SetHavingExpr(v IExprContext) { s.havingExpr = v }$/;"	f	struct:sqliteparser.Select_coreContext
SetIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	SetIndex(int)$/;"	n	interface:antlr.RewriteOperation
SetIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (op *BaseRewriteOperation) SetIndex(val int) {$/;"	f	struct:antlr.BaseRewriteOperation
SetInputStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) SetInputStream(input CharStream) {$/;"	f	struct:antlr.BaseLexer
SetInputStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) SetInputStream(input TokenStream) {$/;"	f	struct:antlr.BaseParser
SetInstructionIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	SetInstructionIndex(val int)$/;"	n	interface:antlr.RewriteOperation
SetInstructionIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (op *BaseRewriteOperation) SetInstructionIndex(val int) {$/;"	f	struct:antlr.BaseRewriteOperation
SetInvokingState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^	SetInvokingState(int)$/;"	n	interface:antlr.RuleContext
SetInvokingState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^func (b *BaseRuleContext) SetInvokingState(t int) {$/;"	f	struct:antlr.BaseRuleContext
SetLastRewriteTokenIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (tsr *TokenStreamRewriter) SetLastRewriteTokenIndex(program_name string, i int) {$/;"	f	struct:antlr.TokenStreamRewriter
SetMode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	SetMode(int)$/;"	n	interface:antlr.Lexer
SetMode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) SetMode(m int) {$/;"	f	struct:antlr.BaseLexer
SetNew_column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SetNew_column_name(IColumn_nameContext)$/;"	n	interface:sqliteparser.IAlter_table_stmtContext
SetNew_column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) SetNew_column_name(v IColumn_nameContext) { s.new_column_name /;"	f	struct:sqliteparser.Alter_table_stmtContext
SetNew_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SetNew_table_name(ITable_nameContext)$/;"	n	interface:sqliteparser.IAlter_table_stmtContext
SetNew_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) SetNew_table_name(v ITable_nameContext) { s.new_table_name = v/;"	f	struct:sqliteparser.Alter_table_stmtContext
SetNextTokenWithinRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	SetNextTokenWithinRule(*IntervalSet)$/;"	n	interface:antlr.ATNState
SetNextTokenWithinRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (as *BaseATNState) SetNextTokenWithinRule(v *IntervalSet) {$/;"	f	struct:antlr.BaseATNState
SetNodeID	vendor/github.com/google/uuid/node.go	/^func SetNodeID(id []byte) bool {$/;"	f	package:uuid	typeref:typename:bool
SetNodeInterface	vendor/github.com/google/uuid/node.go	/^func SetNodeInterface(name string) bool {$/;"	f	package:uuid	typeref:typename:bool
SetObject	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SetObject(antlr.Token)$/;"	n	interface:sqliteparser.IDrop_stmtContext
SetObject	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Drop_stmtContext) SetObject(v antlr.Token) { s.object = v }$/;"	f	struct:sqliteparser.Drop_stmtContext
SetOld_column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SetOld_column_name(IColumn_nameContext)$/;"	n	interface:sqliteparser.IAlter_table_stmtContext
SetOld_column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) SetOld_column_name(v IColumn_nameContext) { s.old_column_name /;"	f	struct:sqliteparser.Alter_table_stmtContext
SetOpName	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	SetOpName(string)$/;"	n	interface:antlr.RewriteOperation
SetOpName	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (op *BaseRewriteOperation) SetOpName(val string) {$/;"	f	struct:antlr.BaseRewriteOperation
SetParent	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^func (b *BaseRuleContext) SetParent(v Tree) {$/;"	f	struct:antlr.BaseRuleContext
SetParent	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	SetParent(Tree)$/;"	n	interface:antlr.Tree
SetParent	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (t *TerminalNodeImpl) SetParent(tree Tree) {$/;"	f	struct:antlr.TerminalNodeImpl
SetParserRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	SetParserRuleContext(ParserRuleContext)$/;"	n	interface:antlr.Parser
SetParserRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) SetParserRuleContext(v ParserRuleContext) {$/;"	f	struct:antlr.BaseParser
SetPredictionMode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) SetPredictionMode(v int) {$/;"	f	struct:antlr.ParserATNSimulator
SetRand	vendor/github.com/google/uuid/uuid.go	/^func SetRand(r io.Reader) {$/;"	f	package:uuid
SetReachesIntoOuterContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^	SetReachesIntoOuterContext(int)$/;"	n	interface:antlr.ATNConfig
SetReachesIntoOuterContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func (b *BaseATNConfig) SetReachesIntoOuterContext(v int) {$/;"	f	struct:antlr.BaseATNConfig
SetReadDeadline	vendor/nhooyr.io/websocket/netconn.go	/^func (c *netConn) SetReadDeadline(t time.Time) error {$/;"	f	struct:websocket.netConn	typeref:typename:error
SetReadLimit	vendor/nhooyr.io/websocket/read.go	/^func (c *Conn) SetReadLimit(n int64) {$/;"	f	unknown:websocket.Conn
SetReadLimit	vendor/nhooyr.io/websocket/ws_js.go	/^func (c *Conn) SetReadLimit(n int64) {$/;"	f	struct:websocket.Conn
SetReadOnly	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	SetReadOnly(bool)$/;"	n	interface:antlr.ATNConfigSet
SetReadOnly	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) SetReadOnly(readOnly bool) {$/;"	f	struct:antlr.BaseATNConfigSet
SetReadOnly	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserialization_options.go	/^func (opts *ATNDeserializationOptions) SetReadOnly(readOnly bool) {$/;"	f	struct:antlr.ATNDeserializationOptions
SetRow_ROW_ID	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SetRow_ROW_ID(antlr.Token)$/;"	n	interface:sqliteparser.ICreate_table_stmtContext
SetRow_ROW_ID	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) SetRow_ROW_ID(v antlr.Token) { s.row_ROW_ID = v }$/;"	f	struct:sqliteparser.Create_table_stmtContext
SetRuleIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	SetRuleIndex(int)$/;"	n	interface:antlr.ATNState
SetRuleIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (as *BaseATNState) SetRuleIndex(v int) {$/;"	f	struct:antlr.BaseATNState
SetStart	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^	SetStart(Token)$/;"	n	interface:antlr.ParserRuleContext
SetStart	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) SetStart(t Token) {$/;"	f	struct:antlr.BaseParserRuleContext
SetState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^	SetState(int)$/;"	n	interface:antlr.Recognizer
SetState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^func (b *BaseRecognizer) SetState(v int) {$/;"	f	struct:antlr.BaseRecognizer
SetStateNumber	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	SetStateNumber(int)$/;"	n	interface:antlr.ATNState
SetStateNumber	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (as *BaseATNState) SetStateNumber(stateNumber int) {$/;"	f	struct:antlr.BaseATNState
SetStop	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^	SetStop(Token)$/;"	n	interface:antlr.ParserRuleContext
SetStop	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) SetStop(t Token) {$/;"	f	struct:antlr.BaseParserRuleContext
SetText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) SetText(text string) {$/;"	f	struct:antlr.BaseLexer
SetText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	SetText(s string)$/;"	n	interface:antlr.Token
SetText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^func (c *CommonToken) SetText(text string) {$/;"	f	struct:antlr.CommonToken
SetText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	SetText(string)$/;"	n	interface:antlr.RewriteOperation
SetText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (op *BaseRewriteOperation) SetText(val string) {$/;"	f	struct:antlr.BaseRewriteOperation
SetTokenIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	SetTokenIndex(v int)$/;"	n	interface:antlr.Token
SetTokenIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^func (b *BaseToken) SetTokenIndex(v int) {$/;"	f	struct:antlr.BaseToken
SetTokenSource	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) SetTokenSource(tokenSource TokenSource) {$/;"	f	struct:antlr.CommonTokenStream
SetTokenSource	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token_stream.go	/^	SetTokenSource(TokenSource)$/;"	n	interface:antlr.TokenStream
SetTokenStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) SetTokenStream(input TokenStream) {$/;"	f	struct:antlr.BaseParser
SetTokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	SetTokens(TokenStream)$/;"	n	interface:antlr.RewriteOperation
SetTokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (op *BaseRewriteOperation) SetTokens(val TokenStream) {$/;"	f	struct:antlr.BaseRewriteOperation
SetTrace	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) SetTrace(trace *TraceListener) {$/;"	f	struct:antlr.BaseParser
SetTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	*SetTransition$/;"	M	struct:antlr.NotSetTransition	typeref:typename:*SetTransition
SetTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^type SetTransition struct {$/;"	s	package:antlr
SetTransitions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	SetTransitions([]Transition)$/;"	n	interface:antlr.ATNState
SetTransitions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (as *BaseATNState) SetTransitions(t []Transition) {$/;"	f	struct:antlr.BaseATNState
SetType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	SetType(int)$/;"	n	interface:antlr.Lexer
SetType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) SetType(t int) {$/;"	f	struct:antlr.BaseLexer
SetUniqueAlt	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	SetUniqueAlt(int)$/;"	n	interface:antlr.ATNConfigSet
SetUniqueAlt	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) SetUniqueAlt(v int) {$/;"	f	struct:antlr.BaseATNConfigSet
SetVerifyATN	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserialization_options.go	/^func (opts *ATNDeserializationOptions) SetVerifyATN(verifyATN bool) {$/;"	f	struct:antlr.ATNDeserializationOptions
SetWhereExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	SetWhereExpr(IExprContext)$/;"	n	interface:sqliteparser.ISelect_coreContext
SetWhereExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) SetWhereExpr(v IExprContext) { s.whereExpr = v }$/;"	f	struct:sqliteparser.Select_coreContext
SetWriteDeadline	vendor/nhooyr.io/websocket/netconn.go	/^func (c *netConn) SetWriteDeadline(t time.Time) error {$/;"	f	struct:websocket.netConn	typeref:typename:error
Set_expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Set_expr(IExprContext)$/;"	n	interface:sqliteparser.ISelect_coreContext
Set_expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) Set_expr(v IExprContext) { s._expr = v }$/;"	f	struct:sqliteparser.Select_coreContext
SetsCount	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (p *BatchResultRowsProvider) SetsCount() int {$/;"	f	struct:hranaV2.BatchResultRowsProvider	typeref:typename:int
SetsCount	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (p *StmtResultRowsProvider) SetsCount() int {$/;"	f	struct:hranaV2.StmtResultRowsProvider	typeref:typename:int
SetsCount	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/rows.go	/^	SetsCount() int$/;"	n	interface:shared.rowsProvider	typeref:typename:int
SharedContextCache	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_simulator.go	/^	SharedContextCache() *PredictionContextCache$/;"	n	interface:antlr.IATNSimulator	typeref:typename:*PredictionContextCache
SharedContextCache	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_simulator.go	/^func (b *BaseATNSimulator) SharedContextCache() *PredictionContextCache {$/;"	f	struct:antlr.BaseATNSimulator	typeref:typename:*PredictionContextCache
Signed	vendor/golang.org/x/exp/constraints/constraints.go	/^type Signed interface {$/;"	i	package:constraints
Signed_number	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Signed_number() ISigned_numberContext$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:ISigned_numberContext
Signed_number	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Signed_number() ISigned_numberContext$/;"	n	interface:sqliteparser.IDefault_valueContext	typeref:typename:ISigned_numberContext
Signed_number	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Signed_number() ISigned_numberContext$/;"	n	interface:sqliteparser.IOffsetContext	typeref:typename:ISigned_numberContext
Signed_number	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Signed_number() ISigned_numberContext$/;"	n	interface:sqliteparser.IPragma_valueContext	typeref:typename:ISigned_numberContext
Signed_number	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Signed_number() ISigned_numberContext$/;"	n	interface:sqliteparser.IWindow_functionContext	typeref:typename:ISigned_numberContext
Signed_number	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Signed_number(i int) ISigned_numberContext$/;"	n	interface:sqliteparser.IType_nameContext	typeref:typename:ISigned_numberContext
Signed_number	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Signed_number() (localctx ISigned_numberContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ISigned_numberContext)
Signed_number	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) Signed_number() ISigned_numberContext {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:ISigned_numberContext
Signed_number	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Default_valueContext) Signed_number() ISigned_numberContext {$/;"	f	struct:sqliteparser.Default_valueContext	typeref:typename:ISigned_numberContext
Signed_number	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *OffsetContext) Signed_number() ISigned_numberContext {$/;"	f	struct:sqliteparser.OffsetContext	typeref:typename:ISigned_numberContext
Signed_number	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_valueContext) Signed_number() ISigned_numberContext {$/;"	f	struct:sqliteparser.Pragma_valueContext	typeref:typename:ISigned_numberContext
Signed_number	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Type_nameContext) Signed_number(i int) ISigned_numberContext {$/;"	f	struct:sqliteparser.Type_nameContext	typeref:typename:ISigned_numberContext
Signed_number	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) Signed_number() ISigned_numberContext {$/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:ISigned_numberContext
Signed_numberContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Signed_numberContext struct {$/;"	s	package:sqliteparser
SimState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^type SimState struct {$/;"	s	package:antlr
Simple_func	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Simple_func() ISimple_funcContext$/;"	n	interface:sqliteparser.ISimple_function_invocationContext	typeref:typename:ISimple_funcContext
Simple_func	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Simple_func() (localctx ISimple_funcContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ISimple_funcContext)
Simple_func	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_function_invocationContext) Simple_func() ISimple_funcContext {$/;"	f	struct:sqliteparser.Simple_function_invocationContext	typeref:typename:ISimple_funcContext
Simple_funcContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Simple_funcContext struct {$/;"	s	package:sqliteparser
Simple_function_invocation	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Simple_function_invocation() (localctx ISimple_function_invocationContext/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ISimple_function_invocationContext)
Simple_function_invocationContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Simple_function_invocationContext struct {$/;"	s	package:sqliteparser
Simple_select_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Simple_select_stmt() (localctx ISimple_select_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ISimple_select_stmtContext)
Simple_select_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Simple_select_stmtContext struct {$/;"	s	package:sqliteparser
SingleTokenDeletion	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (d *DefaultErrorStrategy) SingleTokenDeletion(recognizer Parser) Token {$/;"	f	struct:antlr.DefaultErrorStrategy	typeref:typename:Token
SingleTokenInsertion	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (d *DefaultErrorStrategy) SingleTokenInsertion(recognizer Parser) bool {$/;"	f	struct:antlr.DefaultErrorStrategy	typeref:typename:bool
SingletonBasePredictionContextCreate	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func SingletonBasePredictionContextCreate(parent PredictionContext, returnState int) PredictionC/;"	f	package:antlr	typeref:typename:PredictionContext
SingletonPredictionContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^type SingletonPredictionContext interface {$/;"	i	package:antlr
Size	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) Size() int {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:int
Size	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/input_stream.go	/^func (is *InputStream) Size() int {$/;"	f	struct:antlr.InputStream	typeref:typename:int
Size	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/int_stream.go	/^	Size() int$/;"	n	interface:antlr.IntStream	typeref:typename:int
Skip	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) Skip() {$/;"	f	struct:antlr.BaseLexer
Skip	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token_source.go	/^	Skip()$/;"	n	interface:antlr.TokenSource
Slice	vendor/github.com/klauspost/compress/flate/token.go	/^func (t *tokens) Slice() []token {$/;"	f	struct:flate.tokens	typeref:typename:[]token
Sort	vendor/github.com/go-chi/chi/tree.go	/^func (ns nodes) Sort()              { sort.Sort(ns); ns.tailSort() }$/;"	f	type:chi.nodes
Sort	vendor/golang.org/x/exp/slices/sort.go	/^func Sort[E constraints.Ordered](x []E) {$/;"	f	package:slices	typeref:typename:(x []E)
SortFunc	vendor/golang.org/x/exp/slices/sort.go	/^func SortFunc[E any](x []E, less func(a, b E) bool) {$/;"	f	package:slices	typeref:typename:(x []E, less func(a, b E) bool)
SortStableFunc	vendor/golang.org/x/exp/slices/sort.go	/^func SortStableFunc[E any](x []E, less func(a, b E) bool) {$/;"	f	package:slices	typeref:typename:(x []E, less func(a, b E) bool)
SortedSlice	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/jcollect.go	/^func (s *JStore[T, C]) SortedSlice(less func(i, j T) bool) []T {$/;"	f	unknown:antlr.C	typeref:typename:[]T
SplitStatement	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparserutils/utils.go	/^func SplitStatement(statement string) (stmts []string, extraInfo SplitStatementExtraInfo) {$/;"	f	package:sqliteparserutils	typeref:typename:(stmts []string, extraInfo SplitStatementExtraInfo)
SplitStatementExtraInfo	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparserutils/utils.go	/^type SplitStatementExtraInfo struct {$/;"	s	package:sqliteparserutils
Sql	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt.go	/^	Sql              *string    `json:"sql,omitempty"`$/;"	m	struct:hrana.Stmt	typeref:typename:*string
Sql	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_request.go	/^	Sql   *string `json:"sql,omitempty"`$/;"	m	struct:hrana.StreamRequest	typeref:typename:*string
SqlId	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt.go	/^	SqlId            *int32     `json:"sql_id,omitempty"`$/;"	m	struct:hrana.Stmt	typeref:typename:*int32
SqlId	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_request.go	/^	SqlId *int32  `json:"sql_id,omitempty"`$/;"	m	struct:hrana.StreamRequest	typeref:typename:*int32
Sql_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Sql_stmt(i int) ISql_stmtContext$/;"	n	interface:sqliteparser.ISql_stmt_listContext	typeref:typename:ISql_stmtContext
Sql_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Sql_stmt() (localctx ISql_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ISql_stmtContext)
Sql_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmt_listContext) Sql_stmt(i int) ISql_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmt_listContext	typeref:typename:ISql_stmtContext
Sql_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Sql_stmtContext struct {$/;"	s	package:sqliteparser
Sql_stmt_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Sql_stmt_list(i int) ISql_stmt_listContext$/;"	n	interface:sqliteparser.IParseContext	typeref:typename:ISql_stmt_listContext
Sql_stmt_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Sql_stmt_list() (localctx ISql_stmt_listContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ISql_stmt_listContext)
Sql_stmt_list	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ParseContext) Sql_stmt_list(i int) ISql_stmt_listContext {$/;"	f	struct:sqliteparser.ParseContext	typeref:typename:ISql_stmt_listContext
Sql_stmt_listContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Sql_stmt_listContext struct {$/;"	s	package:sqliteparser
StarBlockStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^type StarBlockStartState struct {$/;"	s	package:antlr
StarLoopEntryState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^type StarLoopEntryState struct {$/;"	s	package:antlr
StarLoopbackState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^type StarLoopbackState struct {$/;"	s	package:antlr
Start	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^	Start int$/;"	m	struct:antlr.Interval	typeref:typename:int
StatelessDeflate	vendor/github.com/klauspost/compress/flate/stateless.go	/^func StatelessDeflate(out io.Writer, in []byte, eof bool, dict []byte) error {$/;"	f	package:flate	typeref:typename:error
StatusAbnormalClosure	vendor/nhooyr.io/websocket/close.go	/^	StatusAbnormalClosure StatusCode = 1006$/;"	c	package:websocket	typeref:type:StatusCode
StatusBadGateway	vendor/nhooyr.io/websocket/close.go	/^	StatusBadGateway              StatusCode = 1014$/;"	c	package:websocket	typeref:type:StatusCode
StatusCode	vendor/nhooyr.io/websocket/close.go	/^type StatusCode int$/;"	t	package:websocket	typeref:typename:int
StatusGoingAway	vendor/nhooyr.io/websocket/close.go	/^	StatusGoingAway       StatusCode = 1001$/;"	c	package:websocket	typeref:type:StatusCode
StatusInternalError	vendor/nhooyr.io/websocket/close.go	/^	StatusInternalError           StatusCode = 1011$/;"	c	package:websocket	typeref:type:StatusCode
StatusInvalidFramePayloadData	vendor/nhooyr.io/websocket/close.go	/^	StatusInvalidFramePayloadData StatusCode = 1007$/;"	c	package:websocket	typeref:type:StatusCode
StatusMandatoryExtension	vendor/nhooyr.io/websocket/close.go	/^	StatusMandatoryExtension      StatusCode = 1010$/;"	c	package:websocket	typeref:type:StatusCode
StatusMessageTooBig	vendor/nhooyr.io/websocket/close.go	/^	StatusMessageTooBig           StatusCode = 1009$/;"	c	package:websocket	typeref:type:StatusCode
StatusNoStatusRcvd	vendor/nhooyr.io/websocket/close.go	/^	StatusNoStatusRcvd StatusCode = 1005$/;"	c	package:websocket	typeref:type:StatusCode
StatusNormalClosure	vendor/nhooyr.io/websocket/close.go	/^	StatusNormalClosure   StatusCode = 1000$/;"	c	package:websocket	typeref:type:StatusCode
StatusPolicyViolation	vendor/nhooyr.io/websocket/close.go	/^	StatusPolicyViolation         StatusCode = 1008$/;"	c	package:websocket	typeref:type:StatusCode
StatusProtocolError	vendor/nhooyr.io/websocket/close.go	/^	StatusProtocolError   StatusCode = 1002$/;"	c	package:websocket	typeref:type:StatusCode
StatusServiceRestart	vendor/nhooyr.io/websocket/close.go	/^	StatusServiceRestart          StatusCode = 1012$/;"	c	package:websocket	typeref:type:StatusCode
StatusTLSHandshake	vendor/nhooyr.io/websocket/close.go	/^	StatusTLSHandshake StatusCode = 1015$/;"	c	package:websocket	typeref:type:StatusCode
StatusTryAgainLater	vendor/nhooyr.io/websocket/close.go	/^	StatusTryAgainLater           StatusCode = 1013$/;"	c	package:websocket	typeref:type:StatusCode
StatusUnsupportedData	vendor/nhooyr.io/websocket/close.go	/^	StatusUnsupportedData StatusCode = 1003$/;"	c	package:websocket	typeref:type:StatusCode
Step	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/batch.go	/^	Step  *int32           `json:"step,omitempty"`$/;"	m	struct:hrana.BatchCondition	typeref:typename:*int32
StepErrors	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/batch_result.go	/^	StepErrors       []*Error      `json:"step_errors"`$/;"	m	struct:hrana.BatchResult	typeref:typename:[]*Error
StepResults	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/batch_result.go	/^	StepResults      []*StmtResult `json:"step_results"`$/;"	m	struct:hrana.BatchResult	typeref:typename:[]*StmtResult
Steps	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/batch.go	/^	Steps            []BatchStep `json:"steps"`$/;"	m	struct:hrana.Batch	typeref:typename:[]BatchStep
Stmt	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/batch.go	/^	Stmt      Stmt            `json:"stmt"`$/;"	m	struct:hrana.BatchStep	typeref:typename:Stmt
Stmt	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt.go	/^type Stmt struct {$/;"	s	package:hrana
Stmt	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_request.go	/^	Stmt  *Stmt   `json:"stmt,omitempty"`$/;"	m	struct:hrana.StreamRequest	typeref:typename:*Stmt
StmtResult	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt_result.go	/^type StmtResult struct {$/;"	s	package:hrana
StmtResultRowsProvider	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^type StmtResultRowsProvider struct {$/;"	s	package:hranaV2
Stop	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^	Stop  int$/;"	m	struct:antlr.Interval	typeref:typename:int
Store	vendor/nhooyr.io/websocket/internal/xsync/int64.go	/^func (v *Int64) Store(i int64) {$/;"	f	struct:xsync.Int64
StoreSqlStream	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_request.go	/^func StoreSqlStream(sql string, sqlId int32) StreamRequest {$/;"	f	package:hrana	typeref:typename:StreamRequest
StreamRequest	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_request.go	/^type StreamRequest struct {$/;"	s	package:hrana
StreamResponse	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_result.go	/^type StreamResponse struct {$/;"	s	package:hrana
StreamResult	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_result.go	/^type StreamResult struct {$/;"	s	package:hrana
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^	String() string$/;"	n	interface:antlr.ATNConfig	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func (b *BaseATNConfig) String() string {$/;"	f	struct:antlr.BaseATNConfig	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	String() string$/;"	n	interface:antlr.ATNConfigSet	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) String() string {$/;"	f	struct:antlr.BaseATNConfigSet	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	String() string$/;"	n	interface:antlr.ATNState	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (as *BaseATNState) String() string {$/;"	f	struct:antlr.BaseATNState	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa.go	/^func (d *DFA) String(literalNames []string, symbolicNames []string) string {$/;"	f	struct:antlr.DFA	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_serializer.go	/^func (d *DFASerializer) String() string {$/;"	f	struct:antlr.DFASerializer	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_serializer.go	/^func (l *LexerDFASerializer) String() string {$/;"	f	struct:antlr.LexerDFASerializer	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^func (d *DFAState) String() string {$/;"	f	struct:antlr.DFAState	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^func (p *PredPrediction) String() string {$/;"	f	struct:antlr.PredPrediction	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^func (b *BaseRecognitionException) String() string {$/;"	f	struct:antlr.BaseRecognitionException	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^func (l *LexerNoViableAltException) String() string {$/;"	f	struct:antlr.LexerNoViableAltException	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/input_stream.go	/^func (is *InputStream) String() string {$/;"	f	struct:antlr.InputStream	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func (i *Interval) String() string {$/;"	f	struct:antlr.Interval	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func (i *IntervalSet) String() string {$/;"	f	struct:antlr.IntervalSet	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerChannelAction) String() string {$/;"	f	struct:antlr.LexerChannelAction	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerModeAction) String() string {$/;"	f	struct:antlr.LexerModeAction	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerMoreAction) String() string {$/;"	f	struct:antlr.LexerMoreAction	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerPopModeAction) String() string {$/;"	f	struct:antlr.LexerPopModeAction	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerPushModeAction) String() string {$/;"	f	struct:antlr.LexerPushModeAction	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerSkipAction) String() string {$/;"	f	struct:antlr.LexerSkipAction	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerTypeAction) String() string {$/;"	f	struct:antlr.LexerTypeAction	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) String(ruleNames []string, stop RuleContext) string {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^	String() string$/;"	n	interface:antlr.PredictionContext	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (a *ArrayPredictionContext) String() string {$/;"	f	struct:antlr.ArrayPredictionContext	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (b *BaseSingletonPredictionContext) String() string {$/;"	f	struct:antlr.BaseSingletonPredictionContext	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (e *EmptyPredictionContext) String() string {$/;"	f	struct:antlr.EmptyPredictionContext	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^	String([]string, RuleContext) string$/;"	n	interface:antlr.RuleContext	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^	String() string$/;"	n	interface:antlr.SemanticContext	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func (a *AND) String() string {$/;"	f	struct:antlr.AND	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func (o *OR) String() string {$/;"	f	struct:antlr.OR	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func (p *PrecedencePredicate) String() string {$/;"	f	struct:antlr.PrecedencePredicate	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func (p *Predicate) String() string {$/;"	f	struct:antlr.Predicate	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^func (c *CommonToken) String() string {$/;"	f	struct:antlr.CommonToken	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	String() string$/;"	n	interface:antlr.RewriteOperation	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (op *BaseRewriteOperation) String() string {$/;"	f	struct:antlr.BaseRewriteOperation	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (op *InsertAfterOp) String() string {$/;"	f	struct:antlr.InsertAfterOp	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (op *InsertBeforeOp) String() string {$/;"	f	struct:antlr.InsertBeforeOp	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func (op *ReplaceOp) String() string {$/;"	f	struct:antlr.ReplaceOp	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *ActionTransition) String() string {$/;"	f	struct:antlr.ActionTransition	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *AtomTransition) String() string {$/;"	f	struct:antlr.AtomTransition	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *EpsilonTransition) String() string {$/;"	f	struct:antlr.EpsilonTransition	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *NotSetTransition) String() string {$/;"	f	struct:antlr.NotSetTransition	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *PrecedencePredicateTransition) String() string {$/;"	f	struct:antlr.PrecedencePredicateTransition	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *PredicateTransition) String() string {$/;"	f	struct:antlr.PredicateTransition	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *RangeTransition) String() string {$/;"	f	struct:antlr.RangeTransition	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *SetTransition) String() string {$/;"	f	struct:antlr.SetTransition	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *WildcardTransition) String() string {$/;"	f	struct:antlr.WildcardTransition	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (t *TerminalNodeImpl) String() string {$/;"	f	struct:antlr.TerminalNodeImpl	typeref:typename:string
String	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func (b *BitSet) String() string {$/;"	f	struct:antlr.BitSet	typeref:typename:string
String	vendor/github.com/go-chi/chi/context.go	/^func (k *contextKey) String() string {$/;"	f	struct:chi.contextKey	typeref:typename:string
String	vendor/github.com/google/uuid/dce.go	/^func (d Domain) String() string {$/;"	f	type:uuid.Domain	typeref:typename:string
String	vendor/github.com/google/uuid/uuid.go	/^func (uuid UUID) String() string {$/;"	f	type:uuid.UUID	typeref:typename:string
String	vendor/github.com/google/uuid/uuid.go	/^func (v Variant) String() string {$/;"	f	type:uuid.Variant	typeref:typename:string
String	vendor/github.com/google/uuid/uuid.go	/^func (v Version) String() string {$/;"	f	type:uuid.Version	typeref:typename:string
String	vendor/nhooyr.io/websocket/netconn.go	/^func (a websocketAddr) String() string {$/;"	f	struct:websocket.websocketAddr	typeref:typename:string
String	vendor/nhooyr.io/websocket/stringer.go	/^func (i MessageType) String() string {$/;"	f	unknown:websocket.MessageType	typeref:typename:string
String	vendor/nhooyr.io/websocket/stringer.go	/^func (i StatusCode) String() string {$/;"	f	unknown:websocket.StatusCode	typeref:typename:string
String	vendor/nhooyr.io/websocket/stringer.go	/^func (i opcode) String() string {$/;"	f	unknown:websocket.opcode	typeref:typename:string
StringVerbose	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func (i *IntervalSet) StringVerbose(literalNames []string, symbolicNames []string, elemsAreChar /;"	f	struct:antlr.IntervalSet	typeref:typename:string
SubRoutes	vendor/github.com/go-chi/chi/tree.go	/^	SubRoutes Routes$/;"	m	struct:chi.Route	typeref:typename:Routes
Submitting a Pull Request	vendor/github.com/go-chi/chi/CONTRIBUTING.md	/^## Submitting a Pull Request$/;"	s	chapter:Contributing
Subprotocol	vendor/nhooyr.io/websocket/conn_notjs.go	/^func (c *Conn) Subprotocol() string {$/;"	f	struct:websocket.Conn	typeref:typename:string
Subprotocol	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^func (c WebSocket) Subprotocol() string {$/;"	f	struct:wsjs.WebSocket	typeref:typename:string
Subprotocol	vendor/nhooyr.io/websocket/ws_js.go	/^func (c *Conn) Subprotocol() string {$/;"	f	struct:websocket.Conn	typeref:typename:string
Subprotocols	vendor/nhooyr.io/websocket/accept.go	/^	Subprotocols []string$/;"	m	struct:websocket.AcceptOptions	typeref:typename:[]string
Subprotocols	vendor/nhooyr.io/websocket/accept_js.go	/^	Subprotocols         []string$/;"	m	struct:websocket.AcceptOptions	typeref:typename:[]string
Subprotocols	vendor/nhooyr.io/websocket/dial.go	/^	Subprotocols []string$/;"	m	struct:websocket.DialOptions	typeref:typename:[]string
Subprotocols	vendor/nhooyr.io/websocket/ws_js.go	/^	Subprotocols []string$/;"	m	struct:websocket.DialOptions	typeref:typename:[]string
Swap	vendor/github.com/go-chi/chi/tree.go	/^func (ns nodes) Swap(i, j int)      { ns[i], ns[j] = ns[j], ns[i] }$/;"	f	type:chi.nodes
SymbolicNames	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^	SymbolicNames   []string$/;"	m	struct:antlr.BaseRecognizer	typeref:typename:[]string
Sync	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) Sync(i int) bool {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:bool
Sync	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^	Sync(Parser)$/;"	n	interface:antlr.ErrorStrategy
Sync	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (b *BailErrorStrategy) Sync(recognizer Parser) {$/;"	f	struct:antlr.BailErrorStrategy
Sync	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (d *DefaultErrorStrategy) Sync(recognizer Parser) {$/;"	f	struct:antlr.DefaultErrorStrategy
SyntaxError	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^	SyntaxError(recognizer Recognizer, offendingSymbol interface{}, line, column int, msg string, e/;"	n	interface:antlr.ErrorListener
SyntaxError	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^func (c *ConsoleErrorListener) SyntaxError(recognizer Recognizer, offendingSymbol interface{}, l/;"	f	struct:antlr.ConsoleErrorListener
SyntaxError	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^func (d *DefaultErrorListener) SyntaxError(recognizer Recognizer, offendingSymbol interface{}, l/;"	f	struct:antlr.DefaultErrorListener
SyntaxError	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^func (p *ProxyErrorListener) SyntaxError(recognizer Recognizer, offendingSymbol interface{}, lin/;"	f	struct:antlr.ProxyErrorListener
SyntaxTree	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^type SyntaxTree interface {$/;"	i	package:antlr
TABLE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TABLE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAlter_table_stmtContext	typeref:typename:antlr.TerminalNode
TABLE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TABLE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:antlr.TerminalNode
TABLE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TABLE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
TABLE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TABLE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IDrop_stmtContext	typeref:typename:antlr.TerminalNode
TABLE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TABLE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
TABLE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) TABLE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:antlr.TerminalNode
TABLE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) TABLE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:antlr.TerminalNode
TABLE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) TABLE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
TABLE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Drop_stmtContext) TABLE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Drop_stmtContext	typeref:typename:antlr.TerminalNode
TABLE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) TABLE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
TEMPORARY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TEMPORARY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:antlr.TerminalNode
TEMPORARY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TEMPORARY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
TEMPORARY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TEMPORARY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_view_stmtContext	typeref:typename:antlr.TerminalNode
TEMPORARY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TEMPORARY_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
TEMPORARY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) TEMPORARY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:antlr.TerminalNode
TEMPORARY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) TEMPORARY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
TEMPORARY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) TEMPORARY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_view_stmtContext	typeref:typename:antlr.TerminalNode
TEMPORARY_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) TEMPORARY_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
TEMP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TEMP_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:antlr.TerminalNode
TEMP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TEMP_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
TEMP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TEMP_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_view_stmtContext	typeref:typename:antlr.TerminalNode
TEMP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TEMP_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
TEMP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) TEMP_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:antlr.TerminalNode
TEMP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) TEMP_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
TEMP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) TEMP_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_view_stmtContext	typeref:typename:antlr.TerminalNode
TEMP_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) TEMP_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
THEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	THEN_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
THEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	THEN_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
THEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) THEN_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
THEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) THEN_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
TIES_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TIES_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_specContext	typeref:typename:antlr.TerminalNode
TIES_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_specContext) TIES_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_specContext	typeref:typename:antlr.TerminalNode
TILDE	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TILDE() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUnary_operatorContext	typeref:typename:antlr.TerminalNode
TILDE	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Unary_operatorContext) TILDE() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Unary_operatorContext	typeref:typename:antlr.TerminalNode
TO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TO_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IAlter_table_stmtContext	typeref:typename:antlr.TerminalNode
TO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TO_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
TO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TO_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IRollback_stmtContext	typeref:typename:antlr.TerminalNode
TO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) TO_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:antlr.TerminalNode
TO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) TO_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
TO_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Rollback_stmtContext) TO_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Rollback_stmtContext	typeref:typename:antlr.TerminalNode
TRANSACTION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TRANSACTION_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IBegin_stmtContext	typeref:typename:antlr.TerminalNode
TRANSACTION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TRANSACTION_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICommit_stmtContext	typeref:typename:antlr.TerminalNode
TRANSACTION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TRANSACTION_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
TRANSACTION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TRANSACTION_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IRollback_stmtContext	typeref:typename:antlr.TerminalNode
TRANSACTION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Begin_stmtContext) TRANSACTION_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Begin_stmtContext	typeref:typename:antlr.TerminalNode
TRANSACTION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Commit_stmtContext) TRANSACTION_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Commit_stmtContext	typeref:typename:antlr.TerminalNode
TRANSACTION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) TRANSACTION_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
TRANSACTION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Rollback_stmtContext) TRANSACTION_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Rollback_stmtContext	typeref:typename:antlr.TerminalNode
TRIGGER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TRIGGER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
TRIGGER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TRIGGER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IDrop_stmtContext	typeref:typename:antlr.TerminalNode
TRIGGER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TRIGGER_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
TRIGGER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) TRIGGER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
TRIGGER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Drop_stmtContext) TRIGGER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Drop_stmtContext	typeref:typename:antlr.TerminalNode
TRIGGER_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) TRIGGER_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
TRUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TRUE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
TRUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	TRUE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ILiteral_valueContext	typeref:typename:antlr.TerminalNode
TRUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) TRUE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
TRUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Literal_valueContext) TRUE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Literal_valueContext	typeref:typename:antlr.TerminalNode
Table_alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_alias() ITable_aliasContext$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:ITable_aliasContext
Table_alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_alias() ITable_aliasContext$/;"	n	interface:sqliteparser.ITable_or_subqueryContext	typeref:typename:ITable_aliasContext
Table_alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Table_alias() (localctx ITable_aliasContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ITable_aliasContext)
Table_alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) Table_alias() ITable_aliasContext {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:ITable_aliasContext
Table_alias	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) Table_alias() ITable_aliasContext {$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:ITable_aliasContext
Table_aliasContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Table_aliasContext struct {$/;"	s	package:sqliteparser
Table_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_constraint(i int) ITable_constraintContext$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:ITable_constraintContext
Table_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Table_constraint() (localctx ITable_constraintContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ITable_constraintContext)
Table_constraint	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) Table_constraint(i int) ITable_constraintContext {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:ITable_constraintContext
Table_constraintContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Table_constraintContext struct {$/;"	s	package:sqliteparser
Table_function_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_function_name() ITable_function_nameContext$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:ITable_function_nameContext
Table_function_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_function_name() ITable_function_nameContext$/;"	n	interface:sqliteparser.ITable_or_subqueryContext	typeref:typename:ITable_function_nameContext
Table_function_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Table_function_name() (localctx ITable_function_nameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ITable_function_nameContext)
Table_function_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) Table_function_name() ITable_function_nameContext {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:ITable_function_nameContext
Table_function_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) Table_function_name() ITable_function_nameContext {$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:ITable_function_nameContext
Table_function_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Table_function_nameContext struct {$/;"	s	package:sqliteparser
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_name() ITable_nameContext$/;"	n	interface:sqliteparser.ICommon_table_expressionContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_name() ITable_nameContext$/;"	n	interface:sqliteparser.ICreate_index_stmtContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_name() ITable_nameContext$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_name() ITable_nameContext$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_name() ITable_nameContext$/;"	n	interface:sqliteparser.ICreate_virtual_table_stmtContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_name() ITable_nameContext$/;"	n	interface:sqliteparser.ICte_table_nameContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_name() ITable_nameContext$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_name() ITable_nameContext$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_name() ITable_nameContext$/;"	n	interface:sqliteparser.IQualified_table_nameContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_name() ITable_nameContext$/;"	n	interface:sqliteparser.IReindex_stmtContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_name() ITable_nameContext$/;"	n	interface:sqliteparser.IResult_columnContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_name() ITable_nameContext$/;"	n	interface:sqliteparser.ITable_or_subqueryContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_name(i int) ITable_nameContext$/;"	n	interface:sqliteparser.IAlter_table_stmtContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Table_name() (localctx ITable_nameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ITable_nameContext)
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) Table_name(i int) ITable_nameContext {$/;"	f	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_expressionContext) Table_name() ITable_nameContext {$/;"	f	struct:sqliteparser.Common_table_expressionContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) Table_name() ITable_nameContext {$/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) Table_name() ITable_nameContext {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) Table_name() ITable_nameContext {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) Table_name() ITable_nameContext {$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Cte_table_nameContext) Table_name() ITable_nameContext {$/;"	f	struct:sqliteparser.Cte_table_nameContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) Table_name() ITable_nameContext {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) Table_name() ITable_nameContext {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Qualified_table_nameContext) Table_name() ITable_nameContext {$/;"	f	struct:sqliteparser.Qualified_table_nameContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Reindex_stmtContext) Table_name() ITable_nameContext {$/;"	f	struct:sqliteparser.Reindex_stmtContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Result_columnContext) Table_name() ITable_nameContext {$/;"	f	struct:sqliteparser.Result_columnContext	typeref:typename:ITable_nameContext
Table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) Table_name() ITable_nameContext {$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:ITable_nameContext
Table_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Table_nameContext struct {$/;"	s	package:sqliteparser
Table_or_index_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_or_index_name() ITable_or_index_nameContext$/;"	n	interface:sqliteparser.IAnalyze_stmtContext	typeref:typename:ITable_or_index_nameContext
Table_or_index_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Table_or_index_name() (localctx ITable_or_index_nameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ITable_or_index_nameContext)
Table_or_index_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Analyze_stmtContext) Table_or_index_name() ITable_or_index_nameContext {$/;"	f	struct:sqliteparser.Analyze_stmtContext	typeref:typename:ITable_or_index_nameContext
Table_or_index_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Table_or_index_nameContext struct {$/;"	s	package:sqliteparser
Table_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_or_subquery(i int) ITable_or_subqueryContext$/;"	n	interface:sqliteparser.IJoin_clauseContext	typeref:typename:ITable_or_subqueryContext
Table_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_or_subquery(i int) ITable_or_subqueryContext$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:ITable_or_subqueryContext
Table_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_or_subquery(i int) ITable_or_subqueryContext$/;"	n	interface:sqliteparser.ITable_or_subqueryContext	typeref:typename:ITable_or_subqueryContext
Table_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Table_or_subquery(i int) ITable_or_subqueryContext$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:ITable_or_subqueryContext
Table_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Table_or_subquery() (localctx ITable_or_subqueryContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ITable_or_subqueryContext)
Table_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_clauseContext) Table_or_subquery(i int) ITable_or_subqueryContext {$/;"	f	struct:sqliteparser.Join_clauseContext	typeref:typename:ITable_or_subqueryContext
Table_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) Table_or_subquery(i int) ITable_or_subqueryContext {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:ITable_or_subqueryContext
Table_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) Table_or_subquery(i int) ITable_or_subqueryContext {$/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:ITable_or_subqueryContext
Table_or_subquery	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) Table_or_subquery(i int) ITable_or_subqueryContext {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:ITable_or_subqueryContext
Table_or_subqueryContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Table_or_subqueryContext struct {$/;"	s	package:sqliteparser
TerminalNode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^type TerminalNode interface {$/;"	i	package:antlr
TerminalNodeImpl	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	*TerminalNodeImpl$/;"	M	struct:antlr.ErrorNodeImpl	typeref:typename:*TerminalNodeImpl
TerminalNodeImpl	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^type TerminalNodeImpl struct {$/;"	s	package:antlr
TerminalNodeToStringArray	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func TerminalNodeToStringArray(sa []TerminalNode) []string {$/;"	f	package:antlr	typeref:typename:[]string
Time	vendor/github.com/google/uuid/time.go	/^func (uuid UUID) Time() Time {$/;"	f	unknown:uuid.UUID	typeref:typename:Time
Time	vendor/github.com/google/uuid/time.go	/^type Time int64$/;"	t	package:uuid	typeref:typename:int64
ToLexerString	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa.go	/^func (d *DFA) ToLexerString() string {$/;"	f	struct:antlr.DFA	typeref:typename:string
ToStringTree	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) ToStringTree(ruleNames []string, recog Recognizer) string {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:string
ToStringTree	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	ToStringTree([]string, Recognizer) string$/;"	n	interface:antlr.ParseTree	typeref:typename:string
ToStringTree	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (t *TerminalNodeImpl) ToStringTree(s []string, r Recognizer) string {$/;"	f	struct:antlr.TerminalNodeImpl	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Aggregate_funcContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string /;"	f	struct:sqliteparser.Aggregate_funcContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Aggregate_function_invocationContext) ToStringTree(ruleNames []string, recog antlr.Reco/;"	f	struct:sqliteparser.Aggregate_function_invocationContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *AliasContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.AliasContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Alter_table_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) strin/;"	f	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Analyze_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Analyze_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Any_nameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Any_nameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Asc_descContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Asc_descContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Attach_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Attach_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Base_window_nameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) strin/;"	f	struct:sqliteparser.Base_window_nameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Begin_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Begin_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Collation_nameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string /;"	f	struct:sqliteparser.Collation_nameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_aliasContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Column_aliasContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) stri/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_defContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Column_defContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_nameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Column_nameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_name_listContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) strin/;"	f	struct:sqliteparser.Column_name_listContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Commit_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Commit_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_expressionContext) ToStringTree(ruleNames []string, recog antlr.Recognizer/;"	f	struct:sqliteparser.Common_table_expressionContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) stri/;"	f	struct:sqliteparser.Common_table_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_operatorContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) stri/;"	f	struct:sqliteparser.Compound_operatorContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_select_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) s/;"	f	struct:sqliteparser.Compound_select_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Conflict_clauseContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string/;"	f	struct:sqliteparser.Conflict_clauseContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) stri/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) stri/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) st/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) strin/;"	f	struct:sqliteparser.Create_view_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recogniz/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Cte_table_nameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string /;"	f	struct:sqliteparser.Cte_table_nameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Default_valueContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Default_valueContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Delete_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmt_limitedContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) st/;"	f	struct:sqliteparser.Delete_stmt_limitedContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Detach_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Detach_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Drop_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Drop_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Error_messageContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Error_messageContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Expr_asc_descContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Expr_asc_descContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Factored_select_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) s/;"	f	struct:sqliteparser.Factored_select_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *FilenameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.FilenameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Filter_clauseContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Filter_clauseContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) str/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_tableContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Foreign_tableContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_clauseContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Frame_clauseContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_leftContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Frame_leftContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_rightContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Frame_rightContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_singleContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Frame_singleContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_specContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Frame_specContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Function_nameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Function_nameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Index_nameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Index_nameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Indexed_columnContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string /;"	f	struct:sqliteparser.Indexed_columnContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Initial_selectContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string /;"	f	struct:sqliteparser.Initial_selectContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_clauseContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Join_clauseContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_constraintContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string/;"	f	struct:sqliteparser.Join_constraintContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_operatorContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Join_operatorContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Limit_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Limit_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Literal_valueContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Literal_valueContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Module_argumentContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string/;"	f	struct:sqliteparser.Module_argumentContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Module_nameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Module_nameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *NameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.NameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *OffsetContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.OffsetContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_exprContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Order_by_exprContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_expr_asc_descContext) ToStringTree(ruleNames []string, recog antlr.Recognizer)/;"	f	struct:sqliteparser.Order_by_expr_asc_descContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Order_by_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Order_by_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Ordering_termContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Ordering_termContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Over_clauseContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Over_clauseContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ParseContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.ParseContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Partition_byContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Partition_byContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_nameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Pragma_nameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Pragma_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Pragma_valueContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Pragma_valueContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Qualified_table_nameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) s/;"	f	struct:sqliteparser.Qualified_table_nameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Raise_functionContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string /;"	f	struct:sqliteparser.Raise_functionContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Recursive_cteContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Recursive_cteContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Recursive_selectContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) strin/;"	f	struct:sqliteparser.Recursive_selectContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Reindex_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Reindex_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Release_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Release_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Result_columnContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Result_columnContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Returning_clauseContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) strin/;"	f	struct:sqliteparser.Returning_clauseContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Rollback_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Rollback_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Savepoint_nameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string /;"	f	struct:sqliteparser.Savepoint_nameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Savepoint_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string /;"	f	struct:sqliteparser.Savepoint_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Schema_nameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Schema_nameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Select_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Signed_numberContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Signed_numberContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_funcContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Simple_funcContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_function_invocationContext) ToStringTree(ruleNames []string, recog antlr.Recogni/;"	f	struct:sqliteparser.Simple_function_invocationContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Simple_select_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) str/;"	f	struct:sqliteparser.Simple_select_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmt_listContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Sql_stmt_listContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_aliasContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Table_aliasContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) strin/;"	f	struct:sqliteparser.Table_constraintContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_function_nameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) st/;"	f	struct:sqliteparser.Table_function_nameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_nameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Table_nameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_index_nameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) st/;"	f	struct:sqliteparser.Table_or_index_nameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_or_subqueryContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) stri/;"	f	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Transaction_nameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) strin/;"	f	struct:sqliteparser.Transaction_nameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Trigger_nameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Trigger_nameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Type_nameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Type_nameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Unary_operatorContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string /;"	f	struct:sqliteparser.Unary_operatorContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) st/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Vacuum_stmtContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Vacuum_stmtContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Value_rowContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Value_rowContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Values_clauseContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Values_clauseContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *View_nameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.View_nameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_defnContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Window_defnContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_functionContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string/;"	f	struct:sqliteparser.Window_functionContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_function_invocationContext) ToStringTree(ruleNames []string, recog antlr.Recogni/;"	f	struct:sqliteparser.Window_function_invocationContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_nameContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.Window_nameContext	typeref:typename:string
ToStringTree	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *With_clauseContext) ToStringTree(ruleNames []string, recog antlr.Recognizer) string {$/;"	f	struct:sqliteparser.With_clauseContext	typeref:typename:string
ToValue	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/value.go	/^func (v Value) ToValue(columnType *string) any {$/;"	f	struct:hrana.Value	typeref:typename:any
ToValue	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/value.go	/^func ToValue(v any) (Value, error) {$/;"	f	package:hrana	typeref:typename:(Value, error)
Token	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^type Token interface {$/;"	i	package:antlr
TokenDefaultChannel	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	TokenDefaultChannel = 0$/;"	c	package:antlr
TokenEOF	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	TokenEOF = -1$/;"	c	package:antlr
TokenEpsilon	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	TokenEpsilon = -2$/;"	c	package:antlr
TokenFactory	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_factory.go	/^type TokenFactory interface {$/;"	i	package:antlr
TokenHiddenChannel	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	TokenHiddenChannel = 1$/;"	c	package:antlr
TokenInvalidType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	TokenInvalidType = 0$/;"	c	package:antlr
TokenMinUserTokenType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	TokenMinUserTokenType = 1$/;"	c	package:antlr
TokenSource	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token_source.go	/^type TokenSource interface {$/;"	i	package:antlr
TokenSourceCharStreamPair	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^type TokenSourceCharStreamPair struct {$/;"	s	package:antlr
TokenStartCharIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	TokenStartCharIndex int$/;"	m	struct:antlr.BaseLexer	typeref:typename:int
TokenStartColumn	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	TokenStartColumn    int$/;"	m	struct:antlr.BaseLexer	typeref:typename:int
TokenStartLine	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	TokenStartLine      int$/;"	m	struct:antlr.BaseLexer	typeref:typename:int
TokenStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token_stream.go	/^type TokenStream interface {$/;"	i	package:antlr
TokenStreamRewriter	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^type TokenStreamRewriter struct {$/;"	s	package:antlr
TokensStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^type TokensStartState struct {$/;"	s	package:antlr
Trace	vendor/github.com/go-chi/chi/chi.go	/^	Trace(pattern string, h http.HandlerFunc)$/;"	n	interface:chi.Router
Trace	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) Trace(pattern string, handlerFn http.HandlerFunc) {$/;"	f	struct:chi.Mux
TraceListener	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/trace_listener.go	/^type TraceListener struct {$/;"	s	package:antlr
Transaction_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Transaction_name() ITransaction_nameContext$/;"	n	interface:sqliteparser.IBegin_stmtContext	typeref:typename:ITransaction_nameContext
Transaction_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Transaction_name() (localctx ITransaction_nameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ITransaction_nameContext)
Transaction_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Begin_stmtContext) Transaction_name() ITransaction_nameContext {$/;"	f	struct:sqliteparser.Begin_stmtContext	typeref:typename:ITransaction_nameContext
Transaction_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Transaction_nameContext struct {$/;"	s	package:sqliteparser
Transition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^type Transition interface {$/;"	i	package:antlr
TransitionACTION	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	TransitionACTION     = 6$/;"	c	package:antlr
TransitionATOM	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	TransitionATOM       = 5$/;"	c	package:antlr
TransitionEPSILON	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	TransitionEPSILON    = 1$/;"	c	package:antlr
TransitionNOTSET	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	TransitionNOTSET     = 8$/;"	c	package:antlr
TransitionPRECEDENCE	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	TransitionPRECEDENCE = 10$/;"	c	package:antlr
TransitionPREDICATE	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	TransitionPREDICATE  = 4 \/\/ e.g., {isType(input.LT(1))}?$/;"	c	package:antlr
TransitionRANGE	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	TransitionRANGE      = 2$/;"	c	package:antlr
TransitionRULE	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	TransitionRULE       = 3$/;"	c	package:antlr
TransitionSET	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	TransitionSET        = 7 \/\/ ~(A|B) or ~atom, wildcard, which convert to next 2$/;"	c	package:antlr
TransitionWILDCARD	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	TransitionWILDCARD   = 9$/;"	c	package:antlr
TransitionserializationNames	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^var TransitionserializationNames = []string{$/;"	v	package:antlr
Tree	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^type Tree interface {$/;"	i	package:antlr
TreeInvalidInterval	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^var TreeInvalidInterval = NewInterval(-1, -2)$/;"	v	package:antlr
TreesDescendants	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/trees.go	/^func TreesDescendants(t ParseTree) []ParseTree {$/;"	f	package:antlr	typeref:typename:[]ParseTree
TreesFindAllTokenNodes	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/trees.go	/^func TreesFindAllTokenNodes(t ParseTree, ttype int) []ParseTree {$/;"	f	package:antlr	typeref:typename:[]ParseTree
TreesGetChildren	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/trees.go	/^func TreesGetChildren(t Tree) []Tree {$/;"	f	package:antlr	typeref:typename:[]Tree
TreesGetNodeText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/trees.go	/^func TreesGetNodeText(t Tree, ruleNames []string, recog Parser) string {$/;"	f	package:antlr	typeref:typename:string
TreesStringTree	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/trees.go	/^func TreesStringTree(tree Tree, ruleNames []string, recog Recognizer) string {$/;"	f	package:antlr	typeref:typename:string
TreesfindAllNodes	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/trees.go	/^func TreesfindAllNodes(t ParseTree, index int, findTokens bool) []ParseTree {$/;"	f	package:antlr	typeref:typename:[]ParseTree
TreesfindAllRuleNodes	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/trees.go	/^func TreesfindAllRuleNodes(t ParseTree, ruleIndex int) []ParseTree {$/;"	f	package:antlr	typeref:typename:[]ParseTree
TreesgetAncestors	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/trees.go	/^func TreesgetAncestors(t Tree) []Tree {$/;"	f	package:antlr	typeref:typename:[]Tree
TriggerEnterRuleEvent	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) TriggerEnterRuleEvent() {$/;"	f	struct:antlr.BaseParser
TriggerExitRuleEvent	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) TriggerExitRuleEvent() {$/;"	f	struct:antlr.BaseParser
Trigger_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Trigger_name() ITrigger_nameContext$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:ITrigger_nameContext
Trigger_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Trigger_name() (localctx ITrigger_nameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx ITrigger_nameContext)
Trigger_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) Trigger_name() ITrigger_nameContext {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:ITrigger_nameContext
Trigger_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Trigger_nameContext struct {$/;"	s	package:sqliteparser
TurnOffLRLoopEntryBranchOpt	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^	TurnOffLRLoopEntryBranchOpt   = false$/;"	v	package:antlr
Type	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/batch.go	/^	Type  string           `json:"type"`$/;"	m	struct:hrana.BatchCondition	typeref:typename:string
Type	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt_result.go	/^	Type *string `json:"decltype"`$/;"	m	struct:hrana.Column	typeref:typename:*string
Type	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_request.go	/^	Type  string  `json:"type"`$/;"	m	struct:hrana.StreamRequest	typeref:typename:string
Type	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_result.go	/^	Type     string          `json:"type"`$/;"	m	struct:hrana.StreamResult	typeref:typename:string
Type	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_result.go	/^	Type   string          `json:"type"`$/;"	m	struct:hrana.StreamResponse	typeref:typename:string
Type	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/value.go	/^	Type   string `json:"type"`$/;"	m	struct:hrana.Value	typeref:typename:string
Type	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^func (p *Params) Type() paramsType {$/;"	f	struct:shared.Params	typeref:typename:paramsType
Type_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Type_name() IType_nameContext$/;"	n	interface:sqliteparser.IColumn_defContext	typeref:typename:IType_nameContext
Type_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Type_name() IType_nameContext$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:IType_nameContext
Type_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Type_name() (localctx IType_nameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IType_nameContext)
Type_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_defContext) Type_name() IType_nameContext {$/;"	f	struct:sqliteparser.Column_defContext	typeref:typename:IType_nameContext
Type_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) Type_name() IType_nameContext {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:IType_nameContext
Type_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Type_nameContext struct {$/;"	s	package:sqliteparser
UNBOUNDED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	UNBOUNDED_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_leftContext	typeref:typename:antlr.TerminalNode
UNBOUNDED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	UNBOUNDED_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_rightContext	typeref:typename:antlr.TerminalNode
UNBOUNDED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	UNBOUNDED_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFrame_singleContext	typeref:typename:antlr.TerminalNode
UNBOUNDED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	UNBOUNDED_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
UNBOUNDED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_leftContext) UNBOUNDED_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_leftContext	typeref:typename:antlr.TerminalNode
UNBOUNDED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_rightContext) UNBOUNDED_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_rightContext	typeref:typename:antlr.TerminalNode
UNBOUNDED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Frame_singleContext) UNBOUNDED_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Frame_singleContext	typeref:typename:antlr.TerminalNode
UNBOUNDED_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) UNBOUNDED_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
UNION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	UNION_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICompound_operatorContext	typeref:typename:antlr.TerminalNode
UNION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	UNION_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
UNION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	UNION_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IRecursive_cteContext	typeref:typename:antlr.TerminalNode
UNION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	UNION_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.ICompound_select_stmtContext	typeref:typename:antlr.TerminalNode
UNION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_operatorContext) UNION_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Compound_operatorContext	typeref:typename:antlr.TerminalNode
UNION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Compound_select_stmtContext) UNION_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Compound_select_stmtContext	typeref:typename:antlr.TerminalNode
UNION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) UNION_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
UNION_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Recursive_cteContext) UNION_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Recursive_cteContext	typeref:typename:antlr.TerminalNode
UNIQUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	UNIQUE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:antlr.TerminalNode
UNIQUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	UNIQUE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_index_stmtContext	typeref:typename:antlr.TerminalNode
UNIQUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	UNIQUE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
UNIQUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	UNIQUE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ITable_constraintContext	typeref:typename:antlr.TerminalNode
UNIQUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) UNIQUE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:antlr.TerminalNode
UNIQUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) UNIQUE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:antlr.TerminalNode
UNIQUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) UNIQUE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
UNIQUE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Table_constraintContext) UNIQUE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Table_constraintContext	typeref:typename:antlr.TerminalNode
UPDATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	UPDATE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
UPDATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	UPDATE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
UPDATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	UPDATE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:antlr.TerminalNode
UPDATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	UPDATE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:antlr.TerminalNode
UPDATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	UPDATE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:antlr.TerminalNode
UPDATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	UPDATE_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IForeign_key_clauseContext	typeref:typename:antlr.TerminalNode
UPDATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) UPDATE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
UPDATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Foreign_key_clauseContext) UPDATE_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.TerminalNode
UPDATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) UPDATE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
UPDATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) UPDATE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:antlr.TerminalNode
UPDATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) UPDATE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:antlr.TerminalNode
UPDATE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) UPDATE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:antlr.TerminalNode
URL parameters	vendor/github.com/go-chi/chi/README.md	/^### URL parameters$/;"	S	section:<img alt="chi" src="https://cdn.rawgit.com/go-chi/chi/master/_examples/chi.svg" width="220" />""Router interface
URLParam	vendor/github.com/go-chi/chi/context.go	/^func (x *Context) URLParam(key string) string {$/;"	f	struct:chi.Context	typeref:typename:string
URLParam	vendor/github.com/go-chi/chi/context.go	/^func URLParam(r *http.Request, key string) string {$/;"	f	package:chi	typeref:typename:string
URLParamFromCtx	vendor/github.com/go-chi/chi/context.go	/^func URLParamFromCtx(ctx context.Context, key string) string {$/;"	f	package:chi	typeref:typename:string
URLParams	vendor/github.com/go-chi/chi/context.go	/^	URLParams RouteParams$/;"	m	struct:chi.Context	typeref:typename:RouteParams
URN	vendor/github.com/google/uuid/uuid.go	/^func (uuid UUID) URN() string {$/;"	f	type:uuid.UUID	typeref:typename:string
USING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	USING_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
USING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	USING_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IJoin_constraintContext	typeref:typename:antlr.TerminalNode
USING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	USING_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
USING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) USING_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
USING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Join_constraintContext) USING_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Join_constraintContext	typeref:typename:antlr.TerminalNode
USING_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) USING_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
UUID	vendor/github.com/google/uuid/null.go	/^	UUID  UUID$/;"	m	struct:uuid.NullUUID	typeref:typename:UUID
UUID	vendor/github.com/google/uuid/uuid.go	/^type UUID [16]byte$/;"	t	package:uuid	typeref:typename:[16]byte
Unary_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Unary_operator() IUnary_operatorContext$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:IUnary_operatorContext
Unary_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Unary_operator() (localctx IUnary_operatorContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IUnary_operatorContext)
Unary_operator	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) Unary_operator() IUnary_operatorContext {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:IUnary_operatorContext
Unary_operatorContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Unary_operatorContext struct {$/;"	s	package:sqliteparser
UnixTime	vendor/github.com/google/uuid/time.go	/^func (t Time) UnixTime() (sec, nsec int64) {$/;"	f	type:uuid.Time	typeref:typename:(sec, nsec int64)
Unmarshal	vendor/github.com/joho/godotenv/godotenv.go	/^func Unmarshal(str string) (envMap map[string]string, err error) {$/;"	f	package:godotenv	typeref:typename:(envMap map[string]string, err error)
UnmarshalBinary	vendor/github.com/google/uuid/marshal.go	/^func (uuid *UUID) UnmarshalBinary(data []byte) error {$/;"	f	unknown:uuid.UUID	typeref:typename:error
UnmarshalBinary	vendor/github.com/google/uuid/null.go	/^func (nu *NullUUID) UnmarshalBinary(data []byte) error {$/;"	f	struct:uuid.NullUUID	typeref:typename:error
UnmarshalBytes	vendor/github.com/joho/godotenv/godotenv.go	/^func UnmarshalBytes(src []byte) (map[string]string, error) {$/;"	f	package:godotenv	typeref:typename:(map[string]string, error)
UnmarshalJSON	vendor/github.com/google/uuid/null.go	/^func (nu *NullUUID) UnmarshalJSON(data []byte) error {$/;"	f	struct:uuid.NullUUID	typeref:typename:error
UnmarshalJSON	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/batch_result.go	/^func (b *BatchResult) UnmarshalJSON(data []byte) error {$/;"	f	struct:hrana.BatchResult	typeref:typename:error
UnmarshalJSON	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt_result.go	/^func (r *StmtResult) UnmarshalJSON(data []byte) error {$/;"	f	struct:hrana.StmtResult	typeref:typename:error
UnmarshalText	vendor/github.com/google/uuid/marshal.go	/^func (uuid *UUID) UnmarshalText(data []byte) error {$/;"	f	unknown:uuid.UUID	typeref:typename:error
UnmarshalText	vendor/github.com/google/uuid/null.go	/^func (nu *NullUUID) UnmarshalText(data []byte) error {$/;"	f	struct:uuid.NullUUID	typeref:typename:error
UnrollRecursionContexts	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) UnrollRecursionContexts(parentCtx ParserRuleContext) {$/;"	f	struct:antlr.BaseParser
Unsigned	vendor/golang.org/x/exp/constraints/constraints.go	/^type Unsigned interface {$/;"	i	package:constraints
Update_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Update_stmt() IUpdate_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:IUpdate_stmtContext
Update_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Update_stmt(i int) IUpdate_stmtContext$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:IUpdate_stmtContext
Update_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Update_stmt() (localctx IUpdate_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IUpdate_stmtContext)
Update_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) Update_stmt(i int) IUpdate_stmtContext {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:IUpdate_stmtContext
Update_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Update_stmt() IUpdate_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:IUpdate_stmtContext
Update_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Update_stmtContext struct {$/;"	s	package:sqliteparser
Update_stmt_limited	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Update_stmt_limited() IUpdate_stmt_limitedContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:IUpdate_stmt_limitedContext
Update_stmt_limited	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Update_stmt_limited() (localctx IUpdate_stmt_limitedContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IUpdate_stmt_limitedContext)
Update_stmt_limited	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Update_stmt_limited() IUpdate_stmt_limitedContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:IUpdate_stmt_limitedContext
Update_stmt_limitedContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Update_stmt_limitedContext struct {$/;"	s	package:sqliteparser
UpdatedAt	internal/database/models.go	/^	UpdatedAt string$/;"	m	struct:database.Note	typeref:typename:string
UpdatedAt	internal/database/models.go	/^	UpdatedAt string$/;"	m	struct:database.User	typeref:typename:string
UpdatedAt	internal/database/notes.sql.go	/^	UpdatedAt string$/;"	m	struct:database.CreateNoteParams	typeref:typename:string
UpdatedAt	internal/database/users.sql.go	/^	UpdatedAt string$/;"	m	struct:database.CreateUserParams	typeref:typename:string
UpdatedAt	models.go	/^	UpdatedAt time.Time `json:"updated_at"`$/;"	m	struct:main.Note	typeref:typename:time.Time
UpdatedAt	models.go	/^	UpdatedAt time.Time `json:"updated_at"`$/;"	m	struct:main.User	typeref:typename:time.Time
Upsert_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Upsert_clause() IUpsert_clauseContext$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:IUpsert_clauseContext
Upsert_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Upsert_clause() (localctx IUpsert_clauseContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IUpsert_clauseContext)
Upsert_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) Upsert_clause() IUpsert_clauseContext {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:IUpsert_clauseContext
Upsert_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Upsert_clauseContext struct {$/;"	s	package:sqliteparser
Usage	vendor/github.com/go-chi/cors/README.md	/^## Usage$/;"	s	chapter:CORS net/http middleware
Usage	vendor/github.com/joho/godotenv/README.md	/^## Usage$/;"	s	chapter:GoDotEnv ![CI](https://github.com/joho/godotenv/workflows/CI/badge.svg) [![Go Report Card](https://goreportcard.com/badge/github.com/joho/godotenv)](https://goreportcard.com/report/github.com/joho/godotenv)
Use	vendor/github.com/go-chi/chi/chi.go	/^	Use(middlewares ...func(http.Handler) http.Handler)$/;"	n	interface:chi.Router
Use	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) Use(middlewares ...func(http.Handler) http.Handler) {$/;"	f	struct:chi.Mux
User	internal/database/models.go	/^type User struct {$/;"	s	package:database
User	models.go	/^type User struct {$/;"	s	package:main
UserID	internal/database/models.go	/^	UserID    string$/;"	m	struct:database.Note	typeref:typename:string
UserID	internal/database/notes.sql.go	/^	UserID    string$/;"	m	struct:database.CreateNoteParams	typeref:typename:string
UserID	models.go	/^	UserID    string    `json:"user_id"`$/;"	m	struct:main.Note	typeref:typename:string
VACUUM_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	VACUUM_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
VACUUM_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	VACUUM_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IVacuum_stmtContext	typeref:typename:antlr.TerminalNode
VACUUM_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) VACUUM_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
VACUUM_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Vacuum_stmtContext) VACUUM_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Vacuum_stmtContext	typeref:typename:antlr.TerminalNode
VALUES_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	VALUES_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:antlr.TerminalNode
VALUES_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	VALUES_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
VALUES_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	VALUES_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IValues_clauseContext	typeref:typename:antlr.TerminalNode
VALUES_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) VALUES_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:antlr.TerminalNode
VALUES_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) VALUES_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
VALUES_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Values_clauseContext) VALUES_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Values_clauseContext	typeref:typename:antlr.TerminalNode
VIEW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	VIEW_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_view_stmtContext	typeref:typename:antlr.TerminalNode
VIEW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	VIEW_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IDrop_stmtContext	typeref:typename:antlr.TerminalNode
VIEW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	VIEW_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
VIEW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) VIEW_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_view_stmtContext	typeref:typename:antlr.TerminalNode
VIEW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Drop_stmtContext) VIEW_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Drop_stmtContext	typeref:typename:antlr.TerminalNode
VIEW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) VIEW_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
VIRTUAL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	VIRTUAL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IColumn_constraintContext	typeref:typename:antlr.TerminalNode
VIRTUAL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	VIRTUAL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
VIRTUAL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	VIRTUAL_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
VIRTUAL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Column_constraintContext) VIRTUAL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Column_constraintContext	typeref:typename:antlr.TerminalNode
VIRTUAL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_virtual_table_stmtContext) VIRTUAL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:antlr.TerminalNode
VIRTUAL_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) VIRTUAL_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
Vacuum_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Vacuum_stmt() IVacuum_stmtContext$/;"	n	interface:sqliteparser.ISql_stmtContext	typeref:typename:IVacuum_stmtContext
Vacuum_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Vacuum_stmt() (localctx IVacuum_stmtContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IVacuum_stmtContext)
Vacuum_stmt	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Sql_stmtContext) Vacuum_stmt() IVacuum_stmtContext {$/;"	f	struct:sqliteparser.Sql_stmtContext	typeref:typename:IVacuum_stmtContext
Vacuum_stmtContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Vacuum_stmtContext struct {$/;"	s	package:sqliteparser
Valid	vendor/github.com/google/uuid/null.go	/^	Valid bool \/\/ Valid is true if UUID is not NULL$/;"	m	struct:uuid.NullUUID	typeref:typename:bool
Value	vendor/github.com/go-chi/chi/tree.go	/^func (s endpoints) Value(method methodTyp) *endpoint {$/;"	f	type:chi.endpoints	typeref:typename:*endpoint
Value	vendor/github.com/google/uuid/null.go	/^func (nu NullUUID) Value() (driver.Value, error) {$/;"	f	struct:uuid.NullUUID	typeref:typename:(driver.Value, error)
Value	vendor/github.com/google/uuid/sql.go	/^func (uuid UUID) Value() (driver.Value, error) {$/;"	f	unknown:uuid.UUID	typeref:typename:(driver.Value, error)
Value	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt.go	/^	Value Value  `json:"value"`$/;"	m	struct:hrana.NamedArg	typeref:typename:Value
Value	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/value.go	/^	Value  any    `json:"value,omitempty"`$/;"	m	struct:hrana.Value	typeref:typename:any
Value	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/value.go	/^type Value struct {$/;"	s	package:hrana
Value	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^	Value any$/;"	m	struct:ws.namedParam	typeref:typename:any
Value_row	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Value_row(i int) IValue_rowContext$/;"	n	interface:sqliteparser.IValues_clauseContext	typeref:typename:IValue_rowContext
Value_row	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Value_row() (localctx IValue_rowContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IValue_rowContext)
Value_row	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Values_clauseContext) Value_row(i int) IValue_rowContext {$/;"	f	struct:sqliteparser.Values_clauseContext	typeref:typename:IValue_rowContext
Value_rowContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Value_rowContext struct {$/;"	s	package:sqliteparser
Values	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/jcollect.go	/^func (m *JMap[K, V, C]) Values() []V {$/;"	f	unknown:antlr.C	typeref:typename:[]V
Values	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/jcollect.go	/^func (s *JStore[T, C]) Values() []T {$/;"	f	unknown:antlr.C	typeref:typename:[]T
Values	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^	Values() []interface{}$/;"	n	interface:antlr.Set	typeref:typename:[]interface{}
Values	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^func (as *array2DHashSet) Values() []interface{} {$/;"	f	struct:antlr.array2DHashSet	typeref:typename:[]interface{}
Values	vendor/github.com/go-chi/chi/context.go	/^	Keys, Values []string$/;"	m	struct:chi.RouteParams	typeref:typename:[]string
Values_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Values_clause() IValues_clauseContext$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:IValues_clauseContext
Values_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Values_clause() IValues_clauseContext$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:IValues_clauseContext
Values_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Values_clause() (localctx IValues_clauseContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IValues_clauseContext)
Values_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) Values_clause() IValues_clauseContext {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:IValues_clauseContext
Values_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) Values_clause() IValues_clauseContext {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:IValues_clauseContext
Values_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Values_clauseContext struct {$/;"	s	package:sqliteparser
VarInt	vendor/github.com/klauspost/compress/flate/token.go	/^func (t *tokens) VarInt() []byte {$/;"	f	struct:flate.tokens	typeref:typename:[]byte
Variant	vendor/github.com/google/uuid/uuid.go	/^func (uuid UUID) Variant() Variant {$/;"	f	type:uuid.UUID	typeref:typename:Variant
Variant	vendor/github.com/google/uuid/uuid.go	/^type Variant byte$/;"	t	package:uuid	typeref:typename:byte
VerifyATN	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserialization_options.go	/^func (opts *ATNDeserializationOptions) VerifyATN() bool {$/;"	f	struct:antlr.ATNDeserializationOptions	typeref:typename:bool
Version	vendor/github.com/google/uuid/uuid.go	/^func (uuid UUID) Version() Version {$/;"	f	type:uuid.UUID	typeref:typename:Version
Version	vendor/github.com/google/uuid/uuid.go	/^type Version byte$/;"	t	package:uuid	typeref:typename:byte
View_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	View_name() IView_nameContext$/;"	n	interface:sqliteparser.ICreate_view_stmtContext	typeref:typename:IView_nameContext
View_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) View_name() (localctx IView_nameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IView_nameContext)
View_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_view_stmtContext) View_name() IView_nameContext {$/;"	f	struct:sqliteparser.Create_view_stmtContext	typeref:typename:IView_nameContext
View_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type View_nameContext struct {$/;"	s	package:sqliteparser
Virt	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	Virt                Lexer \/\/ The most derived lexer implementation. Allows virtual method cal/;"	m	struct:antlr.BaseLexer	typeref:typename:Lexer
Visit	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	Visit(tree ParseTree) interface{}$/;"	n	interface:antlr.ParseTreeVisitor	typeref:typename:interface{}
Visit	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (v *BaseParseTreeVisitor) Visit(tree ParseTree) interface{}            { return tree.Accept/;"	f	struct:antlr.BaseParseTreeVisitor	typeref:typename:interface{}
VisitChildren	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	VisitChildren(node RuleNode) interface{}$/;"	n	interface:antlr.ParseTreeVisitor	typeref:typename:interface{}
VisitChildren	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (v *BaseParseTreeVisitor) VisitChildren(node RuleNode) interface{}     { return nil }$/;"	f	struct:antlr.BaseParseTreeVisitor	typeref:typename:interface{}
VisitErrorNode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/trace_listener.go	/^func (t *TraceListener) VisitErrorNode(_ ErrorNode) {$/;"	f	struct:antlr.TraceListener
VisitErrorNode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	VisitErrorNode(node ErrorNode) interface{}$/;"	n	interface:antlr.ParseTreeVisitor	typeref:typename:interface{}
VisitErrorNode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	VisitErrorNode(node ErrorNode)$/;"	n	interface:antlr.ParseTreeListener
VisitErrorNode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (l *BaseParseTreeListener) VisitErrorNode(node ErrorNode)        {}$/;"	f	struct:antlr.BaseParseTreeListener
VisitErrorNode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (v *BaseParseTreeVisitor) VisitErrorNode(node ErrorNode) interface{}   { return nil }$/;"	f	struct:antlr.BaseParseTreeVisitor	typeref:typename:interface{}
VisitErrorNode	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) VisitErrorNode(node antlr.ErrorNode) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
VisitTerminal	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/trace_listener.go	/^func (t *TraceListener) VisitTerminal(node TerminalNode) {$/;"	f	struct:antlr.TraceListener
VisitTerminal	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	VisitTerminal(node TerminalNode) interface{}$/;"	n	interface:antlr.ParseTreeVisitor	typeref:typename:interface{}
VisitTerminal	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	VisitTerminal(node TerminalNode)$/;"	n	interface:antlr.ParseTreeListener
VisitTerminal	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (l *BaseParseTreeListener) VisitTerminal(node TerminalNode)      {}$/;"	f	struct:antlr.BaseParseTreeListener
VisitTerminal	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (v *BaseParseTreeVisitor) VisitTerminal(node TerminalNode) interface{} { return nil }$/;"	f	struct:antlr.BaseParseTreeVisitor	typeref:typename:interface{}
VisitTerminal	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^func (s *BaseSQLiteParserListener) VisitTerminal(node antlr.TerminalNode) {}$/;"	f	struct:sqliteparser.BaseSQLiteParserListener
WHEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	WHEN_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_trigger_stmtContext	typeref:typename:antlr.TerminalNode
WHEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	WHEN_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
WHEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	WHEN_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IExprContext	typeref:typename:antlr.TerminalNode
WHEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_trigger_stmtContext) WHEN_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.TerminalNode
WHEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *ExprContext) WHEN_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.ExprContext	typeref:typename:antlr.TerminalNode
WHEN_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) WHEN_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
WHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	WHERE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_index_stmtContext	typeref:typename:antlr.TerminalNode
WHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	WHERE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IDelete_stmtContext	typeref:typename:antlr.TerminalNode
WHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	WHERE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IDelete_stmt_limitedContext	typeref:typename:antlr.TerminalNode
WHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	WHERE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IFilter_clauseContext	typeref:typename:antlr.TerminalNode
WHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	WHERE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
WHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	WHERE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:antlr.TerminalNode
WHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	WHERE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:antlr.TerminalNode
WHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	WHERE_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:antlr.TerminalNode
WHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	WHERE_(i int) antlr.TerminalNode$/;"	n	interface:sqliteparser.IUpsert_clauseContext	typeref:typename:antlr.TerminalNode
WHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_index_stmtContext) WHERE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_index_stmtContext	typeref:typename:antlr.TerminalNode
WHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmtContext) WHERE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Delete_stmtContext	typeref:typename:antlr.TerminalNode
WHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmt_limitedContext) WHERE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Delete_stmt_limitedContext	typeref:typename:antlr.TerminalNode
WHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Filter_clauseContext) WHERE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Filter_clauseContext	typeref:typename:antlr.TerminalNode
WHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) WHERE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
WHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) WHERE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:antlr.TerminalNode
WHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) WHERE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:antlr.TerminalNode
WHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) WHERE_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:antlr.TerminalNode
WHERE_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Upsert_clauseContext) WHERE_(i int) antlr.TerminalNode {$/;"	f	struct:sqliteparser.Upsert_clauseContext	typeref:typename:antlr.TerminalNode
WINDOW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	WINDOW_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
WINDOW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	WINDOW_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:antlr.TerminalNode
WINDOW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) WINDOW_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
WINDOW_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) WINDOW_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:antlr.TerminalNode
WITHOUT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	WITHOUT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICreate_table_stmtContext	typeref:typename:antlr.TerminalNode
WITHOUT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	WITHOUT_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
WITHOUT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Create_table_stmtContext) WITHOUT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Create_table_stmtContext	typeref:typename:antlr.TerminalNode
WITHOUT_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) WITHOUT_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
WITH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	WITH_() antlr.TerminalNode$/;"	n	interface:sqliteparser.ICommon_table_stmtContext	typeref:typename:antlr.TerminalNode
WITH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	WITH_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IKeywordContext	typeref:typename:antlr.TerminalNode
WITH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	WITH_() antlr.TerminalNode$/;"	n	interface:sqliteparser.IWith_clauseContext	typeref:typename:antlr.TerminalNode
WITH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Common_table_stmtContext) WITH_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.Common_table_stmtContext	typeref:typename:antlr.TerminalNode
WITH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *KeywordContext) WITH_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.KeywordContext	typeref:typename:antlr.TerminalNode
WITH_	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *With_clauseContext) WITH_() antlr.TerminalNode {$/;"	f	struct:sqliteparser.With_clauseContext	typeref:typename:antlr.TerminalNode
Walk	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (p *ParseTreeWalker) Walk(listener ParseTreeListener, t Tree) {$/;"	f	struct:antlr.ParseTreeWalker
Walk	vendor/github.com/go-chi/chi/tree.go	/^func Walk(r Routes, walkFn WalkFunc) error {$/;"	f	package:chi	typeref:typename:error
WalkFunc	vendor/github.com/go-chi/chi/tree.go	/^type WalkFunc func(method string, route string, handler http.Handler, middlewares ...func(http.H/;"	t	package:chi	typeref:typename:func(method string, route string, handler http.Handler, middlewares ...func(http.Handler) http.Handler) error
WantRows	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt.go	/^	WantRows         bool       `json:"want_rows"`$/;"	m	struct:hrana.Stmt	typeref:typename:bool
WasClean	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^	WasClean bool$/;"	m	struct:wsjs.CloseEvent	typeref:typename:bool
WebSocket	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^type WebSocket struct {$/;"	s	package:wsjs
Who?	vendor/github.com/joho/godotenv/README.md	/^## Who?$/;"	s	chapter:GoDotEnv ![CI](https://github.com/joho/godotenv/workflows/CI/badge.svg) [![Go Report Card](https://goreportcard.com/badge/github.com/joho/godotenv)](https://goreportcard.com/report/github.com/joho/godotenv)
WildcardTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^type WildcardTransition struct {$/;"	s	package:antlr
Window_defn	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Window_defn() IWindow_defnContext$/;"	n	interface:sqliteparser.IWindow_function_invocationContext	typeref:typename:IWindow_defnContext
Window_defn	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Window_defn(i int) IWindow_defnContext$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:IWindow_defnContext
Window_defn	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Window_defn() (localctx IWindow_defnContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IWindow_defnContext)
Window_defn	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) Window_defn(i int) IWindow_defnContext {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:IWindow_defnContext
Window_defn	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_function_invocationContext) Window_defn() IWindow_defnContext {$/;"	f	struct:sqliteparser.Window_function_invocationContext	typeref:typename:IWindow_defnContext
Window_defnContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Window_defnContext struct {$/;"	s	package:sqliteparser
Window_function	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Window_function() IWindow_functionContext$/;"	n	interface:sqliteparser.IWindow_function_invocationContext	typeref:typename:IWindow_functionContext
Window_function	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Window_function() (localctx IWindow_functionContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IWindow_functionContext)
Window_function	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_function_invocationContext) Window_function() IWindow_functionContext {$/;"	f	struct:sqliteparser.Window_function_invocationContext	typeref:typename:IWindow_functionContext
Window_functionContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Window_functionContext struct {$/;"	s	package:sqliteparser
Window_function_invocation	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Window_function_invocation() (localctx IWindow_function_invocationContext/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IWindow_function_invocationContext)
Window_function_invocationContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Window_function_invocationContext struct {$/;"	s	package:sqliteparser
Window_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Window_name() IWindow_nameContext$/;"	n	interface:sqliteparser.IOver_clauseContext	typeref:typename:IWindow_nameContext
Window_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Window_name() IWindow_nameContext$/;"	n	interface:sqliteparser.IWindow_function_invocationContext	typeref:typename:IWindow_nameContext
Window_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	Window_name(i int) IWindow_nameContext$/;"	n	interface:sqliteparser.ISelect_coreContext	typeref:typename:IWindow_nameContext
Window_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) Window_name() (localctx IWindow_nameContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IWindow_nameContext)
Window_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Over_clauseContext) Window_name() IWindow_nameContext {$/;"	f	struct:sqliteparser.Over_clauseContext	typeref:typename:IWindow_nameContext
Window_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Select_coreContext) Window_name(i int) IWindow_nameContext {$/;"	f	struct:sqliteparser.Select_coreContext	typeref:typename:IWindow_nameContext
Window_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Window_function_invocationContext) Window_name() IWindow_nameContext {$/;"	f	struct:sqliteparser.Window_function_invocationContext	typeref:typename:IWindow_nameContext
Window_nameContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type Window_nameContext struct {$/;"	s	package:sqliteparser
With	vendor/github.com/go-chi/chi/chi.go	/^	With(middlewares ...func(http.Handler) http.Handler) Router$/;"	n	interface:chi.Router	typeref:typename:Router
With	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) With(middlewares ...func(http.Handler) http.Handler) Router {$/;"	f	struct:chi.Mux	typeref:typename:Router
WithAuthToken	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^func WithAuthToken(authToken string) Option {$/;"	f	package:libsql	typeref:typename:Option
WithProxy	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^func WithProxy(proxy string) Option {$/;"	f	package:libsql	typeref:typename:Option
WithTls	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^func WithTls(tls bool) Option {$/;"	f	package:libsql	typeref:typename:Option
WithTx	internal/database/db.go	/^func (q *Queries) WithTx(tx *sql.Tx) *Queries {$/;"	f	struct:database.Queries	typeref:typename:*Queries
With_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	With_clause() IWith_clauseContext$/;"	n	interface:sqliteparser.IDelete_stmtContext	typeref:typename:IWith_clauseContext
With_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	With_clause() IWith_clauseContext$/;"	n	interface:sqliteparser.IDelete_stmt_limitedContext	typeref:typename:IWith_clauseContext
With_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	With_clause() IWith_clauseContext$/;"	n	interface:sqliteparser.IInsert_stmtContext	typeref:typename:IWith_clauseContext
With_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	With_clause() IWith_clauseContext$/;"	n	interface:sqliteparser.IUpdate_stmtContext	typeref:typename:IWith_clauseContext
With_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	With_clause() IWith_clauseContext$/;"	n	interface:sqliteparser.IUpdate_stmt_limitedContext	typeref:typename:IWith_clauseContext
With_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) With_clause() (localctx IWith_clauseContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IWith_clauseContext)
With_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmtContext) With_clause() IWith_clauseContext {$/;"	f	struct:sqliteparser.Delete_stmtContext	typeref:typename:IWith_clauseContext
With_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Delete_stmt_limitedContext) With_clause() IWith_clauseContext {$/;"	f	struct:sqliteparser.Delete_stmt_limitedContext	typeref:typename:IWith_clauseContext
With_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Insert_stmtContext) With_clause() IWith_clauseContext {$/;"	f	struct:sqliteparser.Insert_stmtContext	typeref:typename:IWith_clauseContext
With_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmtContext) With_clause() IWith_clauseContext {$/;"	f	struct:sqliteparser.Update_stmtContext	typeref:typename:IWith_clauseContext
With_clause	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (s *Update_stmt_limitedContext) With_clause() IWith_clauseContext {$/;"	f	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:IWith_clauseContext
With_clauseContext	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^type With_clauseContext struct {$/;"	s	package:sqliteparser
Wrap	vendor/nhooyr.io/websocket/internal/errd/wrap.go	/^func Wrap(err *error, f string, v ...interface{}) {$/;"	f	package:errd
Write	vendor/github.com/joho/godotenv/godotenv.go	/^func Write(envMap map[string]string, filename string) error {$/;"	f	package:godotenv	typeref:typename:error
Write	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (w *Writer) Write(data []byte) (n int, err error) {$/;"	f	struct:flate.Writer	typeref:typename:(n int, err error)
Write	vendor/github.com/klauspost/compress/flate/stateless.go	/^func (s *statelessWriter) Write(p []byte) (n int, err error) {$/;"	f	struct:flate.statelessWriter	typeref:typename:(n int, err error)
Write	vendor/nhooyr.io/websocket/compress_notjs.go	/^func (tw *trimLastFourBytesWriter) Write(p []byte) (int, error) {$/;"	f	struct:websocket.trimLastFourBytesWriter	typeref:typename:(int, error)
Write	vendor/nhooyr.io/websocket/netconn.go	/^func (c *netConn) Write(p []byte) (int, error) {$/;"	f	struct:websocket.netConn	typeref:typename:(int, error)
Write	vendor/nhooyr.io/websocket/write.go	/^func (c *Conn) Write(ctx context.Context, typ MessageType, p []byte) error {$/;"	f	unknown:websocket.Conn	typeref:typename:error
Write	vendor/nhooyr.io/websocket/write.go	/^func (f writerFunc) Write(p []byte) (int, error) {$/;"	f	type:websocket.writerFunc	typeref:typename:(int, error)
Write	vendor/nhooyr.io/websocket/write.go	/^func (mw *msgWriter) Write(p []byte) (int, error) {$/;"	f	struct:websocket.msgWriter	typeref:typename:(int, error)
Write	vendor/nhooyr.io/websocket/write.go	/^func (mw *msgWriterState) Write(p []byte) (_ int, err error) {$/;"	f	struct:websocket.msgWriterState	typeref:typename:(_ int, err error)
Write	vendor/nhooyr.io/websocket/ws_js.go	/^func (c *Conn) Write(ctx context.Context, typ MessageType, p []byte) error {$/;"	f	struct:websocket.Conn	typeref:typename:error
Write	vendor/nhooyr.io/websocket/ws_js.go	/^func (w writer) Write(p []byte) (int, error) {$/;"	f	struct:websocket.writer	typeref:typename:(int, error)
Write	vendor/nhooyr.io/websocket/wsjson/wsjson.go	/^func Write(ctx context.Context, c *websocket.Conn, v interface{}) error {$/;"	f	package:wsjson	typeref:typename:error
WriteError	vendor/github.com/klauspost/compress/flate/inflate.go	/^type WriteError = flate.WriteError$/;"	a	package:flate	typeref:typename:flate.WriteError
WriteTo	vendor/github.com/klauspost/compress/flate/inflate.go	/^func (f *decompressor) WriteTo(w io.Writer) (int64, error) {$/;"	f	struct:flate.decompressor	typeref:typename:(int64, error)
Writer	vendor/github.com/klauspost/compress/flate/deflate.go	/^type Writer struct {$/;"	s	package:flate
Writer	vendor/nhooyr.io/websocket/write.go	/^func (c *Conn) Writer(ctx context.Context, typ MessageType) (io.WriteCloser, error) {$/;"	f	unknown:websocket.Conn	typeref:typename:(io.WriteCloser, error)
Writer	vendor/nhooyr.io/websocket/ws_js.go	/^func (c *Conn) Writer(ctx context.Context, typ MessageType) (io.WriteCloser, error) {$/;"	f	struct:websocket.Conn	typeref:typename:(io.WriteCloser, error)
Writing Env Files	vendor/github.com/joho/godotenv/README.md	/^### Writing Env Files$/;"	S	section:GoDotEnv ![CI](https://github.com/joho/godotenv/workflows/CI/badge.svg) [![Go Report Card](https://goreportcard.com/badge/github.com/joho/godotenv)](https://goreportcard.com/report/github.com/joho/godotenv)""Usage
Your Notes	static/index.html	/^        <h2>Your Notes<\/h2>$/;"	i
_	vendor/nhooyr.io/websocket/frame.go	/^	_$/;"	c	package:websocket
_	vendor/nhooyr.io/websocket/stringer.go	/^func _() {$/;"	f	package:websocket
_MessageType_index	vendor/nhooyr.io/websocket/stringer.go	/^var _MessageType_index = [...]uint8{0, 11, 24}$/;"	v	package:websocket
_MessageType_name	vendor/nhooyr.io/websocket/stringer.go	/^const _MessageType_name = "MessageTextMessageBinary"$/;"	c	package:websocket
_StatusCode_index	vendor/nhooyr.io/websocket/stringer.go	/^var _StatusCode_index = [...]uint16{0, 19, 34, 53, 74, 88, 106, 127, 156, 177, 196, 220, 239, 25/;"	v	package:websocket
_StatusCode_name	vendor/nhooyr.io/websocket/stringer.go	/^const _StatusCode_name = "StatusNormalClosureStatusGoingAwayStatusProtocolErrorStatusUnsupported/;"	c	package:websocket
_SyntaxErrors	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	_SyntaxErrors  int$/;"	m	struct:antlr.BaseParser	typeref:typename:int
_emptyPredictionContextHash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^var _emptyPredictionContextHash int$/;"	v	package:antlr	typeref:typename:int
_expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	_expr       IExprContext$/;"	m	struct:sqliteparser.Select_coreContext	typeref:typename:IExprContext
_initalBucketCapacity	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^	_initalBucketCapacity = 8$/;"	c	package:antlr
_initalCapacity	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^	_initalCapacity       = 16$/;"	c	package:antlr
_loadFactor	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^	_loadFactor           = 0.75$/;"	c	package:antlr
_opcode_index_0	vendor/nhooyr.io/websocket/stringer.go	/^	_opcode_index_0 = [...]uint8{0, 14, 20, 28}$/;"	v	package:websocket
_opcode_index_1	vendor/nhooyr.io/websocket/stringer.go	/^	_opcode_index_1 = [...]uint8{0, 7, 13, 19}$/;"	v	package:websocket
_opcode_name_0	vendor/nhooyr.io/websocket/stringer.go	/^	_opcode_name_0 = "opContinuationopTextopBinary"$/;"	c	package:websocket
_opcode_name_1	vendor/nhooyr.io/websocket/stringer.go	/^	_opcode_name_1 = "opCloseopPingopPong"$/;"	c	package:websocket
aConfCompInst	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/comparators.go	/^	aConfCompInst   = &ATNConfigComparator[ATNConfig]{}$/;"	v	package:antlr
aConfEqInst	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/comparators.go	/^	aConfEqInst     = &ObjEqComparator[ATNConfig]{}$/;"	v	package:antlr
aStateEqInst	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/comparators.go	/^	aStateEqInst    = &ObjEqComparator[ATNState]{}$/;"	v	package:antlr
accept	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) accept(input CharStream, lexerActionExecutor *LexerActionExecutor, s/;"	f	struct:antlr.LexerATNSimulator
accept	vendor/nhooyr.io/websocket/accept.go	/^func accept(w http.ResponseWriter, r *http.Request, opts *AcceptOptions) (_ *Conn, err error) {$/;"	f	package:websocket	typeref:typename:(_ *Conn, err error)
acceptCompression	vendor/nhooyr.io/websocket/accept.go	/^func acceptCompression(r *http.Request, w http.ResponseWriter, mode CompressionMode) (*compressi/;"	f	package:websocket	typeref:typename:(*compressionOptions, error)
acceptDeflate	vendor/nhooyr.io/websocket/accept.go	/^func acceptDeflate(w http.ResponseWriter, ext websocketExtension, mode CompressionMode) (*compre/;"	f	package:websocket	typeref:typename:(*compressionOptions, error)
acceptWebkitDeflate	vendor/nhooyr.io/websocket/accept.go	/^func acceptWebkitDeflate(w http.ResponseWriter, ext websocketExtension, mode CompressionMode) (*/;"	f	package:websocket	typeref:typename:(*compressionOptions, error)
actionIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	ruleIndex, actionIndex int$/;"	m	struct:antlr.LexerCustomAction	typeref:typename:int
actionIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	ruleIndex, actionIndex, predIndex int$/;"	m	struct:antlr.ActionTransition	typeref:typename:int
actionTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) actionTransition(config ATNConfig, t *ActionTransition) *BaseATNCon/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:*BaseATNConfig
actionType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	actionType          int$/;"	m	struct:antlr.BaseLexerAction	typeref:typename:int
activePings	vendor/nhooyr.io/websocket/conn_notjs.go	/^	activePings   map[string]chan<- struct{}$/;"	m	struct:websocket.Conn	typeref:typename:map[string]chan<- struct{}
activePingsMu	vendor/nhooyr.io/websocket/conn_notjs.go	/^	activePingsMu sync.Mutex$/;"	m	struct:websocket.Conn	typeref:typename:sync.Mutex
add	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (p *PredictionContextCache) add(ctx PredictionContext) PredictionContext {$/;"	f	struct:antlr.PredictionContextCache	typeref:typename:PredictionContext
add	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func (b *BitSet) add(value int) {$/;"	f	struct:antlr.BitSet
addBlock	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^func (e *fastGen) addBlock(src []byte) int32 {$/;"	f	struct:flate.fastGen	typeref:typename:int32
addChild	vendor/github.com/go-chi/chi/tree.go	/^func (n *node) addChild(child *node, prefix string) *node {$/;"	f	struct:chi.node	typeref:typename:*node
addContextToParseTree	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) addContextToParseTree() {$/;"	f	struct:antlr.BaseParser
addDFAEdge	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) addDFAEdge(from *DFAState, tk int, to *DFAState, cfgs ATNConfigSet) /;"	f	struct:antlr.LexerATNSimulator	typeref:typename:*DFAState
addDFAEdge	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) addDFAEdge(dfa *DFA, from *DFAState, t int, to *DFAState) *DFAState/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:*DFAState
addDFAState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) addDFAState(configs ATNConfigSet, suppressEdge bool) *DFAState {$/;"	f	struct:antlr.LexerATNSimulator	typeref:typename:*DFAState
addDFAState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) addDFAState(dfa *DFA, d *DFAState) *DFAState {$/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:*DFAState
addEventListener	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^func (c WebSocket) addEventListener(eventType string, fn func(e js.Value)) func() {$/;"	f	struct:wsjs.WebSocket	typeref:typename:func()
addInterval	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func (i *IntervalSet) addInterval(v *Interval) {$/;"	f	struct:antlr.IntervalSet
addOne	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func (i *IntervalSet) addOne(v int) {$/;"	f	struct:antlr.IntervalSet
addRange	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func (i *IntervalSet) addRange(l, h int) {$/;"	f	struct:antlr.IntervalSet
addReplicationIndex	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func addReplicationIndex(msg *hrana.PipelineRequest, replicationIndex uint64) {$/;"	f	package:hranaV2
addSet	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func (i *IntervalSet) addSet(other *IntervalSet) *IntervalSet {$/;"	f	struct:antlr.IntervalSet	typeref:typename:*IntervalSet
addState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^func (a *ATN) addState(state ATNState) {$/;"	f	struct:antlr.ATN
addTerminalNodeChild	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) addTerminalNodeChild(child TerminalNode) TerminalNode {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:TerminalNode
adjustSeekIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) adjustSeekIndex(i int) int {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:int
advancedState	vendor/github.com/klauspost/compress/flate/deflate.go	/^type advancedState struct {$/;"	s	package:flate
affectedRowCount	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^func (r *execResponse) affectedRowCount() int64 {$/;"	f	struct:ws.execResponse	typeref:typename:int64
all	vendor/github.com/go-chi/chi/Makefile	/^all:$/;"	t
allocHistory	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	allocHistory = maxStoreBlockSize * 5                            \/\/ Size to preallocate for hi/;"	c	package:flate
allowCredentials	vendor/github.com/go-chi/cors/cors.go	/^	allowCredentials  bool$/;"	m	struct:cors.Cors	typeref:typename:bool
allowOriginFunc	vendor/github.com/go-chi/cors/cors.go	/^	allowOriginFunc func(r *http.Request, origin string) bool$/;"	m	struct:cors.Cors	typeref:typename:func(r *http.Request, origin string) bool
allowedHeaders	vendor/github.com/go-chi/cors/cors.go	/^	allowedHeaders []string$/;"	m	struct:cors.Cors	typeref:typename:[]string
allowedHeadersAll	vendor/github.com/go-chi/cors/cors.go	/^	allowedHeadersAll bool$/;"	m	struct:cors.Cors	typeref:typename:bool
allowedMethods	vendor/github.com/go-chi/cors/cors.go	/^	allowedMethods []string$/;"	m	struct:cors.Cors	typeref:typename:[]string
allowedOrigins	vendor/github.com/go-chi/cors/cors.go	/^	allowedOrigins []string$/;"	m	struct:cors.Cors	typeref:typename:[]string
allowedOriginsAll	vendor/github.com/go-chi/cors/cors.go	/^	allowedOriginsAll bool$/;"	m	struct:cors.Cors	typeref:typename:bool
allowedWOrigins	vendor/github.com/go-chi/cors/cors.go	/^	allowedWOrigins []wildcard$/;"	m	struct:cors.Cors	typeref:typename:[]wildcard
alt	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^	alt                        int$/;"	m	struct:antlr.BaseATNConfig	typeref:typename:int
alt	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^	alt  int$/;"	m	struct:antlr.PredPrediction	typeref:typename:int
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/antlrdoc.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserialization_options.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_simulator.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_type.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/char_stream.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_factory.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/comparators.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_serializer.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/diagnostic_error_listener.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/file_stream.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/input_stream.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/int_stream.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/jcollect.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action_executor.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/ll1_analyzer.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_mode.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token_source.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token_stream.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/trace_listener.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/trees.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^package antlr$/;"	p
antlr	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^package antlr$/;"	p
apiConfig	main.go	/^type apiConfig struct {$/;"	s	package:main
api_key	sql/schema/001_users.sql	/^    api_key TEXT UNIQUE NOT NULL$/;"	E	table:users
apply	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^	apply(*config) error$/;"	n	interface:libsql.Option	typeref:typename:error
apply	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^func (o option) apply(c *config) error {$/;"	f	type:libsql.option	typeref:typename:error
applyPrecedenceFilter	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) applyPrecedenceFilter(configs ATNConfigSet) ATNConfigSet {$/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:ATNConfigSet
areHeadersAllowed	vendor/github.com/go-chi/cors/cors.go	/^func (c *Cors) areHeadersAllowed(requestedHeaders []string) bool {$/;"	f	struct:cors.Cors	typeref:typename:bool
array2DHashSet	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^type array2DHashSet struct {$/;"	s	package:antlr
assignEncodingAndSize	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^func (h *huffmanEncoder) assignEncodingAndSize(bitCount []int32, list []literalNode) {$/;"	f	struct:flate.huffmanEncoder
atCreateTriggerStart	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparserutils/utils.go	/^func atCreateTriggerStart(tokenStream antlr.TokenStream) bool {$/;"	f	package:sqliteparserutils	typeref:typename:bool
atIncompleteMultilineCommentStart	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparserutils/utils.go	/^func atIncompleteMultilineCommentStart(tokenStream antlr.TokenStream) bool {$/;"	f	package:sqliteparserutils	typeref:typename:bool
atLeastOne	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^func atLeastOne(v float32) float32 {$/;"	f	package:flate	typeref:typename:float32
atn	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_simulator.go	/^	atn                *ATN$/;"	m	struct:antlr.BaseATNSimulator	typeref:typename:*ATN
atn	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	atn *ATN$/;"	m	struct:antlr.BaseATNState	typeref:typename:*ATN
atn	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/ll1_analyzer.go	/^	atn *ATN$/;"	m	struct:antlr.LL1Analyzer	typeref:typename:*ATN
atnAltCfgEqInst	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/comparators.go	/^	atnAltCfgEqInst = &ATNAltConfigComparator[ATNConfig]{}$/;"	v	package:antlr
atnConfCompInst	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/comparators.go	/^	atnConfCompInst = &BaseATNConfigComparator[ATNConfig]{}$/;"	v	package:antlr
atnStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa.go	/^	atnStartState DecisionState$/;"	m	struct:antlr.DFA	typeref:typename:DecisionState
auth	internal/auth/auth.go	/^package auth$/;"	p
authToken	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^	authToken *string$/;"	m	struct:libsql.config	typeref:typename:*string
authToken	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^	authToken string$/;"	m	struct:libsql.httpConnector	typeref:typename:string
authToken	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^	authToken string$/;"	m	struct:libsql.wsConnector	typeref:typename:string
authedHandler	middleware_auth.go	/^type authedHandler func(http.ResponseWriter, *http.Request, database.User)$/;"	t	package:main	typeref:typename:func(http.ResponseWriter, *http.Request, database.User)
authenticateOrigin	vendor/nhooyr.io/websocket/accept.go	/^func authenticateOrigin(r *http.Request, originHosts []string) error {$/;"	f	package:websocket	typeref:typename:error
availRead	vendor/github.com/klauspost/compress/flate/dict_decoder.go	/^func (dd *dictDecoder) availRead() int {$/;"	f	struct:flate.dictDecoder	typeref:typename:int
availWrite	vendor/github.com/klauspost/compress/flate/dict_decoder.go	/^func (dd *dictDecoder) availWrite() int {$/;"	f	struct:flate.dictDecoder	typeref:typename:int
b	vendor/github.com/klauspost/compress/flate/inflate.go	/^	b uint32$/;"	m	struct:flate.decompressor	typeref:typename:uint32
b	vendor/nhooyr.io/websocket/ws_js.go	/^	b *bytes.Buffer$/;"	m	struct:websocket.writer	typeref:typename:*bytes.Buffer
bTable	vendor/github.com/klauspost/compress/flate/level4.go	/^	bTable [tableSize]tableEntry$/;"	m	struct:flate.fastEncL4	typeref:typename:[tableSize]tableEntry
bTable	vendor/github.com/klauspost/compress/flate/level5.go	/^	bTable [tableSize]tableEntryPrev$/;"	m	struct:flate.fastEncL5	typeref:typename:[tableSize]tableEntryPrev
bTable	vendor/github.com/klauspost/compress/flate/level6.go	/^	bTable [tableSize]tableEntryPrev$/;"	m	struct:flate.fastEncL6	typeref:typename:[tableSize]tableEntryPrev
bTableBits	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	bTableBits   = 17                                               \/\/ Bits used in the big table/;"	c	package:flate
bTableSize	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	bTableSize   = 1 << bTableBits                                  \/\/ Size of the table$/;"	c	package:flate
badCode	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	badCode          = 255$/;"	c	package:flate
baseMatchLength	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	baseMatchLength = 3              \/\/ The smallest match length per the RFC section 3.2.5$/;"	c	package:flate
baseMatchOffset	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	baseMatchOffset = 1              \/\/ The smallest match offset$/;"	c	package:flate
baton	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^	baton            string$/;"	m	struct:hranaV2.hranaV2Conn	typeref:typename:string
beginErrorCondition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (d *DefaultErrorStrategy) beginErrorCondition(recognizer Parser) {$/;"	f	struct:antlr.DefaultErrorStrategy
bitCount	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^	bitCount [17]int32$/;"	m	struct:flate.huffmanEncoder	typeref:typename:[17]int32
bitCounts	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^func (h *huffmanEncoder) bitCounts(list []literalNode, maxBits int32) []int32 {$/;"	f	struct:flate.huffmanEncoder	typeref:typename:[]int32
bitLength	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^func (h *huffmanEncoder) bitLength(freq []uint16) int {$/;"	f	struct:flate.huffmanEncoder	typeref:typename:int
bitLengthRaw	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^func (h *huffmanEncoder) bitLengthRaw(b []byte) int {$/;"	f	struct:flate.huffmanEncoder	typeref:typename:int
bitMask32	vendor/github.com/klauspost/compress/flate/inflate.go	/^var bitMask32 = [32]uint32{$/;"	v	package:flate
bitWriterPool	vendor/github.com/klauspost/compress/flate/stateless.go	/^var bitWriterPool = sync.Pool{$/;"	v	package:flate
bits	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	bits            uint64$/;"	m	struct:flate.huffmanBitWriter	typeref:typename:uint64
bits	vendor/github.com/klauspost/compress/flate/inflate.go	/^	bits     *[maxNumLit + maxNumDist]int$/;"	m	struct:flate.decompressor	typeref:typename:*[maxNumLit + maxNumDist]int
bitsPerWord	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^const bitsPerWord = 64$/;"	c	package:antlr
blockStart	vendor/github.com/klauspost/compress/flate/deflate.go	/^	blockStart int \/\/ window index where current tokens start$/;"	m	struct:flate.compressor	typeref:typename:int
blockStartStateIntPair	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^type blockStartStateIntPair struct {$/;"	s	package:antlr
bpool	vendor/nhooyr.io/websocket/internal/bpool/bpool.go	/^package bpool$/;"	p
bpool	vendor/nhooyr.io/websocket/internal/bpool/bpool.go	/^var bpool sync.Pool$/;"	v	package:bpool	typeref:typename:sync.Pool
br	vendor/nhooyr.io/websocket/conn_notjs.go	/^	br             *bufio.Reader$/;"	m	struct:websocket.Conn	typeref:typename:*bufio.Reader
br	vendor/nhooyr.io/websocket/conn_notjs.go	/^	br *bufio.Reader$/;"	m	struct:websocket.connConfig	typeref:typename:*bufio.Reader
breakPatternsLessFunc	vendor/golang.org/x/exp/slices/zsortfunc.go	/^func breakPatternsLessFunc[E any](data []E, a, b int, less func(a, b E) bool) {$/;"	f	package:slices	typeref:typename:(data []E, a, b int, less func(a, b E) bool)
breakPatternsOrdered	vendor/golang.org/x/exp/slices/zsortordered.go	/^func breakPatternsOrdered[E constraints.Ordered](data []E, a, b int) {$/;"	f	package:slices	typeref:typename:(data []E, a, b int)
buckets	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^	buckets          [][]Collectable[any]$/;"	m	struct:antlr.array2DHashSet	typeref:typename:[][]Collectable
buf	vendor/github.com/klauspost/compress/flate/inflate.go	/^	buf [4]byte$/;"	m	struct:flate.decompressor	typeref:typename:[4]byte
buf	vendor/nhooyr.io/websocket/compress_notjs.go	/^	buf []byte$/;"	m	struct:websocket.slidingWindow	typeref:typename:[]byte
bufferFlushSize	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	bufferFlushSize = 246$/;"	c	package:flate
bufferReset	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	bufferReset  = (1 << 31) - allocHistory - maxStoreBlockSize - 1 \/\/ Reset the buffer offset wh/;"	c	package:flate
bufferSize	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	bufferSize = bufferFlushSize + 8$/;"	c	package:flate
bufioReaderPool	vendor/nhooyr.io/websocket/dial.go	/^var bufioReaderPool sync.Pool$/;"	v	package:websocket	typeref:typename:sync.Pool
bufioWriterPool	vendor/nhooyr.io/websocket/dial.go	/^var bufioWriterPool sync.Pool$/;"	v	package:websocket	typeref:typename:sync.Pool
bulkHash4	vendor/github.com/klauspost/compress/flate/deflate.go	/^func bulkHash4(b []byte, dst []uint32) {$/;"	f	package:flate
bw	vendor/nhooyr.io/websocket/conn_notjs.go	/^	bw             *bufio.Writer$/;"	m	struct:websocket.Conn	typeref:typename:*bufio.Writer
bw	vendor/nhooyr.io/websocket/conn_notjs.go	/^	bw *bufio.Writer$/;"	m	struct:websocket.connConfig	typeref:typename:*bufio.Writer
bypassAltsAtnCache	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^var bypassAltsAtnCache = make(map[string]int)$/;"	v	package:antlr
byteAvailable	vendor/github.com/klauspost/compress/flate/deflate.go	/^	byteAvailable bool \/\/ if true, still need to process window[index-1].$/;"	m	struct:flate.compressor	typeref:typename:bool
bytes	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	bytes              [256 + 8]byte$/;"	m	struct:flate.huffmanBitWriter	typeref:typename:[256 + 8]byte
bytes	vendor/nhooyr.io/websocket/close_notjs.go	/^func (ce CloseError) bytes() ([]byte, error) {$/;"	f	unknown:websocket.CloseError	typeref:typename:([]byte, error)
bytesErr	vendor/nhooyr.io/websocket/close_notjs.go	/^func (ce CloseError) bytesErr() ([]byte, error) {$/;"	f	unknown:websocket.CloseError	typeref:typename:([]byte, error)
c	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^	c     *conn$/;"	m	struct:ws.stmt	typeref:typename:*conn
c	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^	c *conn$/;"	m	struct:ws.tx	typeref:typename:*conn
c	vendor/nhooyr.io/websocket/conn_notjs.go	/^	c  *Conn$/;"	m	struct:websocket.mu	typeref:typename:*Conn
c	vendor/nhooyr.io/websocket/netconn.go	/^	c       *Conn$/;"	m	struct:websocket.netConn	typeref:typename:*Conn
c	vendor/nhooyr.io/websocket/read.go	/^	c     *Conn$/;"	m	struct:websocket.limitReader	typeref:typename:*Conn
c	vendor/nhooyr.io/websocket/read.go	/^	c *Conn$/;"	m	struct:websocket.msgReader	typeref:typename:*Conn
c	vendor/nhooyr.io/websocket/write.go	/^	c *Conn$/;"	m	struct:websocket.msgWriterState	typeref:typename:*Conn
c	vendor/nhooyr.io/websocket/ws_js.go	/^	c   *Conn$/;"	m	struct:websocket.writer	typeref:typename:*Conn
cache	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^	cache map[PredictionContext]PredictionContext$/;"	m	struct:antlr.PredictionContextCache	typeref:typename:map[PredictionContext]PredictionContext
cachedHash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	cachedHash int$/;"	m	struct:antlr.BaseATNConfigSet	typeref:typename:int
cachedHash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action_executor.go	/^	cachedHash   int$/;"	m	struct:antlr.LexerActionExecutor	typeref:typename:int
cachedHash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^	cachedHash int$/;"	m	struct:antlr.BasePredictionContext	typeref:typename:int
calculateEmptyHash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func calculateEmptyHash() int {$/;"	f	package:antlr	typeref:typename:int
calculateHash	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func calculateHash(parent PredictionContext, returnState int) int {$/;"	f	package:antlr	typeref:typename:int
canDropLoopEntryEdgeInLeftRecursiveRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) canDropLoopEntryEdgeInLeftRecursiveRule(config ATNConfig) bool {$/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:bool
canReuse	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) canReuse(t *tokens) (ok bool) {$/;"	f	struct:flate.huffmanBitWriter	typeref:typename:(ok bool)
canReuseBits	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^func (h *huffmanEncoder) canReuseBits(freq []uint16) int {$/;"	f	struct:flate.huffmanEncoder	typeref:typename:int
captureSimState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) captureSimState(settings *SimState, input CharStream, dfaState *DFAS/;"	f	struct:antlr.LexerATNSimulator
ch	vendor/nhooyr.io/websocket/conn_notjs.go	/^	ch chan struct{}$/;"	m	struct:websocket.mu	typeref:typename:chan struct{}
chain	vendor/github.com/go-chi/chi/chain.go	/^	chain       http.Handler$/;"	m	struct:chi.ChainHandler	typeref:typename:http.Handler
chain	vendor/github.com/go-chi/chi/chain.go	/^func chain(middlewares []func(http.Handler) http.Handler, endpoint http.Handler) http.Handler {$/;"	f	package:chi	typeref:typename:http.Handler
chain	vendor/github.com/klauspost/compress/flate/deflate.go	/^	good, lazy, nice, chain, fastSkipHashing, level int$/;"	m	struct:flate.compressionLevel	typeref:typename:int
chainHead	vendor/github.com/klauspost/compress/flate/deflate.go	/^	chainHead      int$/;"	m	struct:flate.advancedState	typeref:typename:int
changes	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/result.go	/^	changes int64$/;"	m	struct:shared.result	typeref:typename:int64
changes	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^	changes int64$/;"	m	struct:ws.result	typeref:typename:int64
channel	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^	channel int$/;"	m	struct:antlr.CommonTokenStream	typeref:typename:int
channel	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	channel                int$/;"	m	struct:antlr.BaseLexer	typeref:typename:int
channel	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	channel int$/;"	m	struct:antlr.LexerChannelAction	typeref:typename:int
channel	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	channel    int    \/\/ The parser ignores everything not on DEFAULT_CHANNEL$/;"	m	struct:antlr.BaseToken	typeref:typename:int
channelNames	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	channelNames []string$/;"	m	struct:sqliteparser.SQLiteLexer	typeref:typename:[]string
charComment	vendor/github.com/joho/godotenv/parser.go	/^	charComment       = '#'$/;"	c	package:godotenv
charStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	charStream  CharStream$/;"	m	struct:antlr.TokenSourceCharStreamPair	typeref:typename:CharStream
checkCondition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func (a *ATNDeserializer) checkCondition(condition bool, message string) {$/;"	f	struct:antlr.ATNDeserializer
checkNonGreedyDecision	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func checkNonGreedyDecision(source *LexerATNConfig, target ATNState) bool {$/;"	f	package:antlr	typeref:typename:bool
checkVersion	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func (a *ATNDeserializer) checkVersion() {$/;"	f	struct:antlr.ATNDeserializer
checkVersion	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^func (b *BaseRecognizer) checkVersion(toolVersion string) {$/;"	f	struct:antlr.BaseRecognizer
chi	vendor/github.com/go-chi/chi/chain.go	/^package chi$/;"	p
chi	vendor/github.com/go-chi/chi/chi.go	/^package chi$/;"	p
chi	vendor/github.com/go-chi/chi/context.go	/^package chi$/;"	p
chi	vendor/github.com/go-chi/chi/mux.go	/^package chi$/;"	p
chi	vendor/github.com/go-chi/chi/tree.go	/^package chi$/;"	p
children	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^	children    []Tree$/;"	m	struct:antlr.BaseParserRuleContext	typeref:typename:[]Tree
children	vendor/github.com/go-chi/chi/tree.go	/^	children [ntCatchAll + 1]nodes$/;"	m	struct:chi.node	typeref:typename:[ntCatchAll + 1]nodes
choosePivotLessFunc	vendor/golang.org/x/exp/slices/zsortfunc.go	/^func choosePivotLessFunc[E any](data []E, a, b int, less func(a, b E) bool) (pivot int, hint sor/;"	f	package:slices	typeref:typename:(data []E, a, b int, less func(a, b E) bool) (
choosePivotOrdered	vendor/golang.org/x/exp/slices/zsortordered.go	/^func choosePivotOrdered[E constraints.Ordered](data []E, a, b int) (pivot int, hint sortedHint) /;"	f	package:slices	typeref:typename:(data []E, a, b int) (
chunks	vendor/github.com/klauspost/compress/flate/inflate.go	/^	chunks   *[huffmanNumChunks]uint16 \/\/ chunks as described above$/;"	m	struct:flate.huffmanDecoder	typeref:typename:*[huffmanNumChunks]uint16
clear	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func (b *BitSet) clear(index int) {$/;"	f	struct:antlr.BitSet
client	vendor/nhooyr.io/websocket/conn_notjs.go	/^	client         bool$/;"	m	struct:websocket.Conn	typeref:typename:bool
client	vendor/nhooyr.io/websocket/conn_notjs.go	/^	client         bool$/;"	m	struct:websocket.connConfig	typeref:typename:bool
clientNoContextTakeover	vendor/nhooyr.io/websocket/compress_notjs.go	/^	clientNoContextTakeover bool$/;"	m	struct:websocket.compressionOptions	typeref:typename:bool
clockSeq	vendor/github.com/google/uuid/time.go	/^	clockSeq uint16 \/\/ clock sequence for this run$/;"	v	package:uuid	typeref:typename:uint16
clockSequence	vendor/github.com/google/uuid/time.go	/^func clockSequence() int {$/;"	f	package:uuid	typeref:typename:int
clone	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^func (c *CommonToken) clone() *CommonToken {$/;"	f	struct:antlr.CommonToken	typeref:typename:*CommonToken
close	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (d *compressor) close() error {$/;"	f	struct:flate.compressor	typeref:typename:error
close	vendor/nhooyr.io/websocket/compress_notjs.go	/^func (sw *slidingWindow) close() {$/;"	f	struct:websocket.slidingWindow
close	vendor/nhooyr.io/websocket/conn_notjs.go	/^func (c *Conn) close(err error) {$/;"	f	struct:websocket.Conn
close	vendor/nhooyr.io/websocket/read.go	/^func (mr *msgReader) close() {$/;"	f	unknown:websocket.msgReader
close	vendor/nhooyr.io/websocket/write.go	/^func (mw *msgWriterState) close() {$/;"	f	struct:websocket.msgWriterState
close	vendor/nhooyr.io/websocket/ws_js.go	/^func (c *Conn) close(err error, wasClean bool) {$/;"	f	struct:websocket.Conn
closeErr	vendor/nhooyr.io/websocket/conn_notjs.go	/^	closeErr   error$/;"	m	struct:websocket.Conn	typeref:typename:error
closeErr	vendor/nhooyr.io/websocket/ws_js.go	/^	closeErr      error$/;"	m	struct:websocket.Conn	typeref:typename:error
closeErrOnce	vendor/nhooyr.io/websocket/ws_js.go	/^	closeErrOnce  sync.Once$/;"	m	struct:websocket.Conn	typeref:typename:sync.Once
closeHandshake	vendor/nhooyr.io/websocket/close_notjs.go	/^func (c *Conn) closeHandshake(code StatusCode, reason string) (err error) {$/;"	f	unknown:websocket.Conn	typeref:typename:(err error)
closeMu	vendor/nhooyr.io/websocket/conn_notjs.go	/^	closeMu    sync.Mutex$/;"	m	struct:websocket.Conn	typeref:typename:sync.Mutex
closeOnce	vendor/nhooyr.io/websocket/ws_js.go	/^	closeOnce     sync.Once$/;"	m	struct:websocket.Conn	typeref:typename:sync.Once
closeWasClean	vendor/nhooyr.io/websocket/ws_js.go	/^	closeWasClean bool$/;"	m	struct:websocket.Conn	typeref:typename:bool
closeWithInternal	vendor/nhooyr.io/websocket/ws_js.go	/^func (c *Conn) closeWithInternal() {$/;"	f	struct:websocket.Conn
closed	vendor/github.com/klauspost/compress/flate/stateless.go	/^	closed bool$/;"	m	struct:flate.statelessWriter	typeref:typename:bool
closed	vendor/nhooyr.io/websocket/conn_notjs.go	/^	closed     chan struct{}$/;"	m	struct:websocket.Conn	typeref:typename:chan struct{}
closed	vendor/nhooyr.io/websocket/write.go	/^	closed bool$/;"	m	struct:websocket.msgWriter	typeref:typename:bool
closed	vendor/nhooyr.io/websocket/ws_js.go	/^	closed        chan struct{}$/;"	m	struct:websocket.Conn	typeref:typename:chan struct{}
closed	vendor/nhooyr.io/websocket/ws_js.go	/^	closed bool$/;"	m	struct:websocket.writer	typeref:typename:bool
closingMu	vendor/nhooyr.io/websocket/ws_js.go	/^	closingMu     sync.Mutex$/;"	m	struct:websocket.Conn	typeref:typename:sync.Mutex
closure	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) closure(input CharStream, config *LexerATNConfig, configs ATNConfigS/;"	f	struct:antlr.LexerATNSimulator	typeref:typename:bool
closure	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) closure(config ATNConfig, configs ATNConfigSet, closureBusy *JStore/;"	f	struct:antlr.ParserATNSimulator
closureCheckingStopState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) closureCheckingStopState(config ATNConfig, configs ATNConfigSet, cl/;"	f	struct:antlr.ParserATNSimulator
closureWork	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) closureWork(config ATNConfig, configs ATNConfigSet, closureBusy *JS/;"	f	struct:antlr.ParserATNSimulator
code64	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^func (h hcode) code64() uint64 {$/;"	f	type:flate.hcode	typeref:typename:uint64
codeOrder	vendor/github.com/klauspost/compress/flate/inflate.go	/^var codeOrder = [...]int{16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15}$/;"	v	package:flate
codebits	vendor/github.com/klauspost/compress/flate/inflate.go	/^	codebits *[numCodes]int$/;"	m	struct:flate.decompressor	typeref:typename:*[numCodes]int
codegen	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	codegen [literalCount + offsetCodeCount + 1]uint8$/;"	m	struct:flate.huffmanBitWriter	typeref:typename:[literalCount + offsetCodeCount + 1]uint8
codegenCodeCount	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	codegenCodeCount = 19$/;"	c	package:flate
codegenEncoding	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	codegenEncoding *huffmanEncoder$/;"	m	struct:flate.huffmanBitWriter	typeref:typename:*huffmanEncoder
codegenFreq	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	codegenFreq        [codegenCodeCount]uint16$/;"	m	struct:flate.huffmanBitWriter	typeref:typename:[codegenCodeCount]uint16
codegenOrder	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^var codegenOrder = []uint32{16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15}$/;"	v	package:flate
codegens	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) codegens() int {$/;"	f	struct:flate.huffmanBitWriter	typeref:typename:int
codes	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^	codes    []hcode$/;"	m	struct:flate.huffmanEncoder	typeref:typename:[]hcode
column	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	column   int$/;"	m	struct:antlr.SimState	typeref:typename:int
column	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	column     int    \/\/ beginning of the line at which it occurs, 0..n-1$/;"	m	struct:antlr.BaseToken	typeref:typename:int
columns	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^func (r *execResponse) columns() []string {$/;"	f	struct:ws.execResponse	typeref:typename:[]string
combineCommonParents	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func combineCommonParents(parents []PredictionContext) {$/;"	f	package:antlr
commitHash	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^var commitHash string$/;"	v	package:hranaV2	typeref:typename:string
comparable	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^type comparable interface {$/;"	i	package:antlr
compareTo	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func (p *PrecedencePredicate) compareTo(other *PrecedencePredicate) int {$/;"	f	struct:antlr.PrecedencePredicate	typeref:typename:int
compileParseTreePattern	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) compileParseTreePattern(pattern, patternRuleIndex, lexer Lexer) {$/;"	f	struct:antlr.BaseParser
complement	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func (i *IntervalSet) complement(start int, stop int) *IntervalSet {$/;"	f	struct:antlr.IntervalSet	typeref:typename:*IntervalSet
compressionLevel	vendor/github.com/klauspost/compress/flate/deflate.go	/^	compressionLevel$/;"	M	struct:flate.compressor	typeref:typename:compressionLevel
compressionLevel	vendor/github.com/klauspost/compress/flate/deflate.go	/^type compressionLevel struct {$/;"	s	package:flate
compressionOptions	vendor/nhooyr.io/websocket/compress_notjs.go	/^type compressionOptions struct {$/;"	s	package:websocket
compressor	vendor/github.com/klauspost/compress/flate/deflate.go	/^type compressor struct {$/;"	s	package:flate
computeReachSet	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) computeReachSet(closure ATNConfigSet, t int, fullCtx bool) ATNConfi/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:ATNConfigSet
computeStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) computeStartState(input CharStream, p ATNState) *OrderedATNConfigSet/;"	f	struct:antlr.LexerATNSimulator	typeref:typename:*OrderedATNConfigSet
computeStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) computeStartState(a ATNState, ctx RuleContext, fullCtx bool) ATNCon/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:ATNConfigSet
computeTargetState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) computeTargetState(input CharStream, s *DFAState, t int) *DFAState {$/;"	f	struct:antlr.LexerATNSimulator	typeref:typename:*DFAState
computeTargetState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) computeTargetState(dfa *DFA, previousD *DFAState, t int) *DFAState /;"	f	struct:antlr.ParserATNSimulator	typeref:typename:*DFAState
config	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^type config struct {$/;"	s	package:libsql
configLookup	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	configLookup *JStore[ATNConfig, Comparator[ATNConfig]]$/;"	m	struct:antlr.BaseATNConfigSet	typeref:typename:*JStore
configs	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	configs []ATNConfig$/;"	m	struct:antlr.BaseATNConfigSet	typeref:typename:[]ATNConfig
configs	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^	configs     ATNConfigSet$/;"	m	struct:antlr.DFAState	typeref:typename:ATNConfigSet
conflictingAlts	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	conflictingAlts *BitSet$/;"	m	struct:antlr.BaseATNConfigSet	typeref:typename:*BitSet
conn	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^	conn     *hranaV2Conn$/;"	m	struct:hranaV2.hranaV2Stmt	typeref:typename:*hranaV2Conn
conn	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^	conn *hranaV2Conn$/;"	m	struct:hranaV2.hranaV2Tx	typeref:typename:*hranaV2Conn
conn	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^type conn struct {$/;"	s	package:ws
conn	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^	conn   *websocket.Conn$/;"	m	struct:ws.websocketConn	typeref:typename:*websocket.Conn
connConfig	vendor/nhooyr.io/websocket/conn_notjs.go	/^type connConfig struct {$/;"	s	package:websocket
connect	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^func connect(url string, jwt string) (*websocketConn, error) {$/;"	f	package:ws	typeref:typename:(*websocketConn, error)
connector	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^func (c config) connector(dbPath string) (driver.Connector, error) {$/;"	f	struct:libsql.config	typeref:typename:(driver.Connector, error)
constraints	vendor/golang.org/x/exp/constraints/constraints.go	/^package constraints$/;"	p
consumeUntil	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (d *DefaultErrorStrategy) consumeUntil(recognizer Parser, set *IntervalSet) {$/;"	f	struct:antlr.DefaultErrorStrategy
contains	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func (i *IntervalSet) contains(item int) bool {$/;"	f	struct:antlr.IntervalSet	typeref:typename:bool
contains	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func (b *BitSet) contains(value int) bool {$/;"	f	struct:antlr.BitSet	typeref:typename:bool
context	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^	context                    PredictionContext$/;"	m	struct:antlr.BaseATNConfig	typeref:typename:PredictionContext
context?	vendor/github.com/go-chi/chi/README.md	/^## context?$/;"	s	chapter:<img alt="chi" src="https://cdn.rawgit.com/go-chi/chi/master/_examples/chi.svg" width="220" />
contextKey	vendor/github.com/go-chi/chi/context.go	/^type contextKey struct {$/;"	s	package:chi
convert	vendor/github.com/go-chi/cors/utils.go	/^func convert(s []string, c converter) []string {$/;"	f	package:cors	typeref:typename:[]string
convertArgs	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func convertArgs(args []driver.NamedValue) params {$/;"	f	package:ws	typeref:typename:params
convertToNamed	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func convertToNamed(args []driver.Value) []driver.NamedValue {$/;"	f	package:hranaV2	typeref:typename:[]driver.NamedValue
convertToNamed	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^func convertToNamed(args []driver.Value) []driver.NamedValue {$/;"	f	package:ws	typeref:typename:[]driver.NamedValue
convertValue	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^func convertValue(v any) (map[string]interface{}, error) {$/;"	f	package:ws	typeref:typename:(map[string]interface{}, error)
converter	vendor/github.com/go-chi/cors/utils.go	/^type converter func(string) string$/;"	t	package:cors	typeref:typename:func(string) string
copts	vendor/nhooyr.io/websocket/conn_notjs.go	/^	copts          *compressionOptions$/;"	m	struct:websocket.Conn	typeref:typename:*compressionOptions
copts	vendor/nhooyr.io/websocket/conn_notjs.go	/^	copts          *compressionOptions$/;"	m	struct:websocket.connConfig	typeref:typename:*compressionOptions
copyData	vendor/github.com/klauspost/compress/flate/inflate.go	/^func (f *decompressor) copyData() {$/;"	f	struct:flate.decompressor
copyDist	vendor/github.com/klauspost/compress/flate/inflate.go	/^	copyDist  int$/;"	m	struct:flate.decompressor	typeref:typename:int
copyLen	vendor/github.com/klauspost/compress/flate/inflate.go	/^	copyLen   int$/;"	m	struct:flate.decompressor	typeref:typename:int
copyState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) copyState(simulator *LexerATNSimulator) {$/;"	f	struct:antlr.LexerATNSimulator
copyText	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_factory.go	/^	copyText bool$/;"	m	struct:antlr.CommonTokenFactory	typeref:typename:bool
cors	vendor/github.com/go-chi/cors/cors.go	/^package cors$/;"	p
cors	vendor/github.com/go-chi/cors/utils.go	/^package cors$/;"	p
createBucket	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^func (as *array2DHashSet) createBucket(cap int) []Collectable[any] {$/;"	f	struct:antlr.array2DHashSet	typeref:typename:[]Collectable[
createBuckets	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^func (as *array2DHashSet) createBuckets(cap int) [][]Collectable[any] {$/;"	f	struct:antlr.array2DHashSet	typeref:typename:[][]Collectable[
createNote	internal/database/notes.sql.go	/^const createNote = `-- name: CreateNote :exec$/;"	c	package:database
createNoteButton	static/index.html	/^        <button id="createNoteButton" onclick="createNote()">Create Note<\/button>$/;"	I
createThin	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_factory.go	/^func (c *CommonTokenFactory) createThin(ttype int, text string) Token {$/;"	f	struct:antlr.CommonTokenFactory	typeref:typename:Token
createTokenStream	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparserutils/utils.go	/^func createTokenStream(statement string) *antlr.CommonTokenStream {$/;"	f	package:sqliteparserutils	typeref:typename:*antlr.CommonTokenStream
createUser	internal/database/users.sql.go	/^const createUser = `-- name: CreateUser :exec$/;"	c	package:database
createUserButton	static/index.html	/^        <button id="createUserButton" onclick="createUser()">Create User<\/button>$/;"	I
created_at	sql/schema/001_users.sql	/^    created_at TEXT NOT NULL,$/;"	E	table:users
created_at	sql/schema/002_notes.sql	/^    created_at TEXT NOT NULL,$/;"	E	table:notes
ctx	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	ctx            ParserRuleContext$/;"	m	struct:antlr.NoViableAltException	typeref:typename:ParserRuleContext
ctx	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	ctx            RuleContext$/;"	m	struct:antlr.BaseRecognitionException	typeref:typename:RuleContext
ctx	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	ctx             ParserRuleContext$/;"	m	struct:antlr.BaseParser	typeref:typename:ParserRuleContext
ctx	vendor/nhooyr.io/websocket/read.go	/^	ctx         context.Context$/;"	m	struct:websocket.msgReader	typeref:typename:context.Context
ctx	vendor/nhooyr.io/websocket/write.go	/^	ctx    context.Context$/;"	m	struct:websocket.msgWriterState	typeref:typename:context.Context
ctx	vendor/nhooyr.io/websocket/ws_js.go	/^	ctx context.Context$/;"	m	struct:websocket.writer	typeref:typename:context.Context
cur	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	cur  int32$/;"	m	struct:flate.fastGen	typeref:typename:int32
currentPrime	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^	currentPrime          int \/\/ jump by 4 primes each expand or whatever$/;"	m	struct:antlr.array2DHashSet	typeref:typename:int
currentResultSetIndex	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/rows.go	/^	currentResultSetIndex int$/;"	m	struct:shared.rows	typeref:typename:int
currentRowIdx	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/rows.go	/^	currentRowIdx         int$/;"	m	struct:shared.rows	typeref:typename:int
currentRowIdx	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^	currentRowIdx int$/;"	m	struct:ws.rows	typeref:typename:int
d	vendor/github.com/klauspost/compress/flate/deflate.go	/^	d    compressor$/;"	m	struct:flate.Writer	typeref:typename:compressor
data	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^	data    []int32$/;"	m	struct:antlr.ATNDeserializer	typeref:typename:[]int32
data	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/input_stream.go	/^	data  []rune$/;"	m	struct:antlr.InputStream	typeref:typename:[]rune
data	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^	data []uint64$/;"	m	struct:antlr.BitSet	typeref:typename:[]uint64
data	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^	data map[int]map[int]interface{}$/;"	m	struct:antlr.DoubleDict	typeref:typename:map[int]map[int]interface{}
data	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^	data map[string]interface{}$/;"	m	struct:antlr.AltDict	typeref:typename:map[string]interface{}
dataBlock	vendor/github.com/klauspost/compress/flate/inflate.go	/^func (f *decompressor) dataBlock() {$/;"	f	struct:flate.decompressor
database	internal/database/db.go	/^package database$/;"	p
database	internal/database/models.go	/^package database$/;"	p
database	internal/database/notes.sql.go	/^package database$/;"	p
database	internal/database/users.sql.go	/^package database$/;"	p
databaseNoteToNote	models.go	/^func databaseNoteToNote(post database.Note) (Note, error) {$/;"	f	package:main	typeref:typename:(Note, error)
databasePostsToPosts	models.go	/^func databasePostsToPosts(notes []database.Note) ([]Note, error) {$/;"	f	package:main	typeref:typename:([]Note, error)
databaseUserToUser	models.go	/^func databaseUserToUser(user database.User) (User, error) {$/;"	f	package:main	typeref:typename:(User, error)
db	internal/database/db.go	/^	db DBTX$/;"	m	struct:database.Queries	typeref:typename:DBTX
deadEndConfigs	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	deadEndConfigs ATNConfigSet$/;"	m	struct:antlr.LexerNoViableAltException	typeref:typename:ATNConfigSet
deadEndConfigs	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	deadEndConfigs ATNConfigSet$/;"	m	struct:antlr.NoViableAltException	typeref:typename:ATNConfigSet
debugDecode	vendor/github.com/klauspost/compress/flate/inflate.go	/^	debugDecode = false$/;"	c	package:flate
debugDeflate	vendor/github.com/klauspost/compress/flate/deflate.go	/^	debugDeflate = false$/;"	c	package:flate
decCodeToLen	vendor/github.com/klauspost/compress/flate/inflate.go	/^var decCodeToLen = [32]lengthExtra{{length: 0x0, extra: 0x0}, {length: 0x1, extra: 0x0}, {length/;"	v	package:flate
decision	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	decision  int$/;"	m	struct:antlr.BaseDecisionState	typeref:typename:int
decision	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa.go	/^	decision int$/;"	m	struct:antlr.DFA	typeref:typename:int
decisionToDFA	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_simulator.go	/^	decisionToDFA      []*DFA$/;"	m	struct:antlr.BaseATNSimulator	typeref:typename:[]*DFA
decompressor	vendor/github.com/klauspost/compress/flate/inflate.go	/^type decompressor struct {$/;"	s	package:flate
decreasingHint	vendor/golang.org/x/exp/slices/sort.go	/^	decreasingHint$/;"	c	package:slices
defaultATNDeserializationOptions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserialization_options.go	/^var defaultATNDeserializationOptions = ATNDeserializationOptions{true, true, false}$/;"	v	package:antlr
defaultReadLimit	vendor/nhooyr.io/websocket/read.go	/^const defaultReadLimit = 32768$/;"	c	package:websocket
defaultWSTimeout	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^var defaultWSTimeout = 120 * time.Second$/;"	v	package:ws
defineDecisionState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^func (a *ATN) defineDecisionState(s DecisionState) int {$/;"	f	struct:antlr.ATN	typeref:typename:int
deflateLazy	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (d *compressor) deflateLazy() {$/;"	f	struct:flate.compressor
deflateMessageTail	vendor/nhooyr.io/websocket/compress_notjs.go	/^const deflateMessageTail = "\\x00\\x00\\xff\\xff"$/;"	c	package:websocket
delegates	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_listener.go	/^	delegates []ErrorListener$/;"	m	struct:antlr.ProxyErrorListener	typeref:typename:[]ErrorListener
dfa	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_serializer.go	/^	dfa           *DFA$/;"	m	struct:antlr.DFASerializer	typeref:typename:*DFA
dfa	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^	dfa            *DFA$/;"	m	struct:antlr.ParserATNSimulator	typeref:typename:*DFA
dfaState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	dfaState *DFAState$/;"	m	struct:antlr.SimState	typeref:typename:*DFAState
dfaStateEqInst	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/comparators.go	/^	dfaStateEqInst  = &ObjEqComparator[*DFAState]{}$/;"	v	package:antlr
dial	vendor/nhooyr.io/websocket/dial.go	/^func dial(ctx context.Context, urls string, opts *DialOptions, rand io.Reader) (_ *Conn, _ *http/;"	f	package:websocket	typeref:typename:(_ *Conn, _ *http.Response, err error)
dial	vendor/nhooyr.io/websocket/ws_js.go	/^func dial(ctx context.Context, url string, opts *DialOptions) (*Conn, *http.Response, error) {$/;"	f	package:websocket	typeref:typename:(*Conn, *http.Response, error)
dict	vendor/github.com/klauspost/compress/flate/deflate.go	/^	dict []byte$/;"	m	struct:flate.Writer	typeref:typename:[]byte
dict	vendor/github.com/klauspost/compress/flate/inflate.go	/^	dict dictDecoder$/;"	m	struct:flate.decompressor	typeref:typename:dictDecoder
dict	vendor/nhooyr.io/websocket/read.go	/^	dict        slidingWindow$/;"	m	struct:websocket.msgReader	typeref:typename:slidingWindow
dict	vendor/nhooyr.io/websocket/write.go	/^	dict       slidingWindow$/;"	m	struct:websocket.msgWriterState	typeref:typename:slidingWindow
dictDecoder	vendor/github.com/klauspost/compress/flate/dict_decoder.go	/^type dictDecoder struct {$/;"	s	package:flate
dipsIntoOuterContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	dipsIntoOuterContext bool$/;"	m	struct:antlr.BaseATNConfigSet	typeref:typename:bool
doPivot	vendor/github.com/klauspost/compress/flate/huffman_sortByLiteral.go	/^func doPivot(data []literalNode, lo, hi int) (midlo, midhi int) {$/;"	f	package:flate	typeref:typename:(midlo, midhi int)
doPivotByFreq	vendor/github.com/klauspost/compress/flate/huffman_sortByFreq.go	/^func doPivotByFreq(data []literalNode, lo, hi int) (midlo, midhi int) {$/;"	f	package:flate	typeref:typename:(midlo, midhi int)
doubleQuoteEscape	vendor/github.com/joho/godotenv/godotenv.go	/^func doubleQuoteEscape(line string) string {$/;"	f	package:godotenv	typeref:typename:string
doubleQuoteSpecialChars	vendor/github.com/joho/godotenv/godotenv.go	/^const doubleQuoteSpecialChars = "\\\\\\n\\r\\"!$`"$/;"	c	package:godotenv
driver	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^	driver driver.Driver$/;"	m	struct:libsql.fileConnector	typeref:typename:driver.Driver
dst	vendor/github.com/klauspost/compress/flate/stateless.go	/^	dst    io.Writer$/;"	m	struct:flate.statelessWriter	typeref:typename:io.Writer
dumpDeadEndConfigs	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) dumpDeadEndConfigs(nvae *NoViableAltException) {$/;"	f	struct:antlr.ParserATNSimulator
dynamicReuseSize	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) dynamicReuseSize(litEnc, offEnc *huffmanEncoder) (size int) {$/;"	f	struct:flate.huffmanBitWriter	typeref:typename:(size int)
dynamicSize	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) dynamicSize(litEnc, offEnc *huffmanEncoder, extraBits int) (size, num/;"	f	struct:flate.huffmanBitWriter	typeref:typename:(size, numCodegens int)
edgeFactory	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func (a *ATNDeserializer) edgeFactory(atn *ATN, typeIndex, src, trg, arg1, arg2, arg3 int, sets /;"	f	struct:antlr.ATNDeserializer	typeref:typename:Transition
edgeMu	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^	edgeMu  sync.RWMutex$/;"	m	struct:antlr.ATN	typeref:typename:sync.RWMutex
edges	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^	edges []*DFAState$/;"	m	struct:antlr.DFAState	typeref:typename:[]*DFAState
elementName	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func (i *IntervalSet) elementName(literalNames []string, symbolicNames []string, a int) string {$/;"	f	struct:antlr.IntervalSet	typeref:typename:string
emitLiteral	vendor/github.com/klauspost/compress/flate/token.go	/^func emitLiteral(dst *tokens, lit []byte) {$/;"	f	package:flate
encodeHex	vendor/github.com/google/uuid/uuid.go	/^func encodeHex(dst []byte, uuid UUID) {$/;"	f	package:uuid
endBlockMarker	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	endBlockMarker = 256$/;"	c	package:flate
endErrorCondition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (d *DefaultErrorStrategy) endErrorCondition(recognizer Parser) {$/;"	f	struct:antlr.DefaultErrorStrategy
endState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	endState *BlockEndState$/;"	m	struct:antlr.BaseBlockStartState	typeref:typename:*BlockEndState
endpoint	vendor/github.com/go-chi/chi/tree.go	/^type endpoint struct {$/;"	s	package:chi
endpoints	vendor/github.com/go-chi/chi/tree.go	/^	endpoints endpoints$/;"	m	struct:chi.node	typeref:typename:endpoints
endpoints	vendor/github.com/go-chi/chi/tree.go	/^type endpoints map[methodTyp]*endpoint$/;"	t	package:chi	typeref:typename:map[methodTyp]*endpoint
ensureFlate	vendor/nhooyr.io/websocket/write.go	/^func (mw *msgWriterState) ensureFlate() {$/;"	f	struct:websocket.msgWriterState
entry	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/jcollect.go	/^type entry[K, V any] struct {$/;"	t	package:antlr	typeref:typename:[K, V any] struct { key K; val V;}
eofed	vendor/nhooyr.io/websocket/netconn.go	/^	eofed  bool$/;"	m	struct:websocket.netConn	typeref:typename:bool
epoch	vendor/github.com/google/uuid/time.go	/^	epoch      = unix - lillian   \/\/ Days between epochs$/;"	c	package:uuid
epsilonOnlyTransitions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	epsilonOnlyTransitions bool$/;"	m	struct:antlr.BaseATNState	typeref:typename:bool
equalATNConfigs	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func equalATNConfigs(a, b interface{}) bool {$/;"	f	package:antlr	typeref:typename:bool
equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerIndexedCustomAction) equals(other LexerAction) bool {$/;"	f	struct:antlr.LexerIndexedCustomAction	typeref:typename:bool
equals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func (b *BitSet) equals(other interface{}) bool {$/;"	f	struct:antlr.BitSet	typeref:typename:bool
equalsFunction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^	equalsFunction   func(Collectable[any], Collectable[any]) bool$/;"	m	struct:antlr.array2DHashSet	typeref:typename:func(Collectable[any], Collectable[any]) bool
err	vendor/github.com/klauspost/compress/flate/deflate.go	/^	err        error$/;"	m	struct:flate.compressor	typeref:typename:error
err	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	err             error$/;"	m	struct:flate.huffmanBitWriter	typeref:typename:error
err	vendor/github.com/klauspost/compress/flate/inflate.go	/^	err       error$/;"	m	struct:flate.decompressor	typeref:typename:error
errAlreadyWroteClose	vendor/nhooyr.io/websocket/close_notjs.go	/^var errAlreadyWroteClose = errors.New("already wrote close")$/;"	v	package:websocket
errHandler	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	errHandler      ErrorStrategy$/;"	m	struct:antlr.BaseParser	typeref:typename:ErrorStrategy
errd	vendor/nhooyr.io/websocket/internal/errd/wrap.go	/^package errd$/;"	p
errorMsg	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^func errorMsg(errorResp interface{}) string {$/;"	f	package:ws	typeref:typename:string
errorNode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	errorNode()$/;"	n	interface:antlr.ErrorNode
errorNode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^func (e *ErrorNodeImpl) errorNode() {}$/;"	f	struct:antlr.ErrorNodeImpl
errorRecoveryMode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^	errorRecoveryMode bool$/;"	m	struct:antlr.DefaultErrorStrategy	typeref:typename:bool
escapeRegex	vendor/github.com/joho/godotenv/parser.go	/^	escapeRegex        = regexp.MustCompile(`\\\\.`)$/;"	v	package:godotenv
escapeWSAndQuote	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (d *DefaultErrorStrategy) escapeWSAndQuote(s string) string {$/;"	f	struct:antlr.DefaultErrorStrategy	typeref:typename:string
estBitsPerByte	vendor/github.com/klauspost/compress/flate/deflate.go	/^	estBitsPerByte int$/;"	m	struct:flate.advancedState	typeref:typename:int
evalPrecedence	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^	evalPrecedence(parser Recognizer, outerContext RuleContext) SemanticContext$/;"	n	interface:antlr.SemanticContext	typeref:typename:SemanticContext
evalPrecedence	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func (a *AND) evalPrecedence(parser Recognizer, outerContext RuleContext) SemanticContext {$/;"	f	struct:antlr.AND	typeref:typename:SemanticContext
evalPrecedence	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func (o *OR) evalPrecedence(parser Recognizer, outerContext RuleContext) SemanticContext {$/;"	f	struct:antlr.OR	typeref:typename:SemanticContext
evalPrecedence	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func (p *PrecedencePredicate) evalPrecedence(parser Recognizer, outerContext RuleContext) Semant/;"	f	struct:antlr.PrecedencePredicate	typeref:typename:SemanticContext
evalPrecedence	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func (p *Predicate) evalPrecedence(parser Recognizer, outerContext RuleContext) SemanticContext /;"	f	struct:antlr.Predicate	typeref:typename:SemanticContext
evalSemanticContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) evalSemanticContext(predPredictions []*PredPrediction, outerContext/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:*BitSet
evaluate	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^	evaluate(parser Recognizer, outerContext RuleContext) bool$/;"	n	interface:antlr.SemanticContext	typeref:typename:bool
evaluate	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func (a *AND) evaluate(parser Recognizer, outerContext RuleContext) bool {$/;"	f	struct:antlr.AND	typeref:typename:bool
evaluate	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func (o *OR) evaluate(parser Recognizer, outerContext RuleContext) bool {$/;"	f	struct:antlr.OR	typeref:typename:bool
evaluate	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func (p *PrecedencePredicate) evaluate(parser Recognizer, outerContext RuleContext) bool {$/;"	f	struct:antlr.PrecedencePredicate	typeref:typename:bool
evaluate	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^func (p *Predicate) evaluate(parser Recognizer, outerContext RuleContext) bool {$/;"	f	struct:antlr.Predicate	typeref:typename:bool
evaluatePredicate	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) evaluatePredicate(input CharStream, ruleIndex, predIndex int, specul/;"	f	struct:antlr.LexerATNSimulator	typeref:typename:bool
exactOnly	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/diagnostic_error_listener.go	/^	exactOnly bool$/;"	m	struct:antlr.DiagnosticErrorListener	typeref:typename:bool
exception	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^	exception   RecognitionException$/;"	m	struct:antlr.BaseParserRuleContext	typeref:typename:RecognitionException
exec	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^func (ws *websocketConn) exec(ctx context.Context, sql string, sqlParams params, wantRows bool) /;"	f	struct:ws.websocketConn	typeref:typename:(*execResponse, error)
execATN	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) execATN(input CharStream, ds0 *DFAState) int {$/;"	f	struct:antlr.LexerATNSimulator	typeref:typename:int
execATN	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) execATN(dfa *DFA, s0 *DFAState, input TokenStream, startIndex int, /;"	f	struct:antlr.ParserATNSimulator	typeref:typename:int
execATNWithFullContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) execATNWithFullContext(dfa *DFA, D *DFAState, s0 ATNConfigSet, inpu/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:int
execResponse	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^type execResponse struct {$/;"	s	package:ws
execute	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	execute(lexer Lexer)$/;"	n	interface:antlr.LexerAction
execute	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (b *BaseLexerAction) execute(lexer Lexer) {$/;"	f	struct:antlr.BaseLexerAction
execute	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerChannelAction) execute(lexer Lexer) {$/;"	f	struct:antlr.LexerChannelAction
execute	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerCustomAction) execute(lexer Lexer) {$/;"	f	struct:antlr.LexerCustomAction
execute	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerIndexedCustomAction) execute(lexer Lexer) {$/;"	f	struct:antlr.LexerIndexedCustomAction
execute	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerModeAction) execute(lexer Lexer) {$/;"	f	struct:antlr.LexerModeAction
execute	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerMoreAction) execute(lexer Lexer) {$/;"	f	struct:antlr.LexerMoreAction
execute	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerPopModeAction) execute(lexer Lexer) {$/;"	f	struct:antlr.LexerPopModeAction
execute	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerPushModeAction) execute(lexer Lexer) {$/;"	f	struct:antlr.LexerPushModeAction
execute	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerSkipAction) execute(lexer Lexer) {$/;"	f	struct:antlr.LexerSkipAction
execute	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (l *LexerTypeAction) execute(lexer Lexer) {$/;"	f	struct:antlr.LexerTypeAction
execute	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action_executor.go	/^func (l *LexerActionExecutor) execute(lexer Lexer, input CharStream, startIndex int) {$/;"	f	struct:antlr.LexerActionExecutor
executeStmt	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (h *hranaV2Conn) executeStmt(ctx context.Context, query string, args []driver.NamedValue, w/;"	f	struct:hranaV2.hranaV2Conn	typeref:typename:(*hrana.PipelineResponse, error)
expand	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^func (as *array2DHashSet) expand() {$/;"	f	struct:antlr.array2DHashSet
expandEscapes	vendor/github.com/joho/godotenv/parser.go	/^func expandEscapes(str string) string {$/;"	f	package:godotenv	typeref:typename:string
expandVarRegex	vendor/github.com/joho/godotenv/parser.go	/^	expandVarRegex     = regexp.MustCompile(`(\\\\)?(\\$)(\\()?\\{?([A-Z0-9_]+)?\\}?`)$/;"	v	package:godotenv
expandVariables	vendor/github.com/joho/godotenv/parser.go	/^func expandVariables(v string, m map[string]string) string {$/;"	f	package:godotenv	typeref:typename:string
exportPrefix	vendor/github.com/joho/godotenv/parser.go	/^	exportPrefix = "export"$/;"	c	package:godotenv
exportedClose	vendor/nhooyr.io/websocket/ws_js.go	/^func (c *Conn) exportedClose(code StatusCode, reason string) error {$/;"	f	struct:websocket.Conn	typeref:typename:error
exposedHeaders	vendor/github.com/go-chi/cors/cors.go	/^	exposedHeaders []string$/;"	m	struct:cors.Cors	typeref:typename:[]string
expr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func (p *SQLiteParser) expr(_p int) (localctx IExprContext) {$/;"	f	struct:sqliteparser.SQLiteParser	typeref:typename:(localctx IExprContext)
extra	vendor/github.com/klauspost/compress/flate/inflate.go	/^	length, extra uint8$/;"	m	struct:flate.lengthExtra	typeref:typename:uint8
extraBitSize	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) extraBitSize() int {$/;"	f	struct:flate.huffmanBitWriter	typeref:typename:int
extraHist	vendor/github.com/klauspost/compress/flate/token.go	/^	extraHist [32]uint16  \/\/ codes 256->maxnumlit$/;"	m	struct:flate.tokens	typeref:typename:[32]uint16
extractArrayBuffer	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^func extractArrayBuffer(arrayBuffer js.Value) []byte {$/;"	f	package:wsjs	typeref:typename:[]byte
extractBufioWriterBuf	vendor/nhooyr.io/websocket/write.go	/^func extractBufioWriterBuf(bw *bufio.Writer, w io.Writer) []byte {$/;"	f	package:websocket	typeref:typename:[]byte
extractJwt	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^func extractJwt(query *url.Values) (string, error) {$/;"	f	package:libsql	typeref:typename:(string, error)
extractParameters	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^func extractParameters(stmt string) (nameParams []string, positionalParamsCount int, err error) /;"	f	package:shared	typeref:typename:(nameParams []string, positionalParamsCount int, err error)
extractTls	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^func extractTls(query *url.Values, scheme string) (bool, error) {$/;"	f	package:libsql	typeref:typename:(bool, error)
extractVarValue	vendor/github.com/joho/godotenv/parser.go	/^func extractVarValue(src []byte, vars map[string]string) (value string, rest []byte, err error) /;"	f	package:godotenv	typeref:typename:(value string, rest []byte, err error)
factory	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	factory                TokenFactory$/;"	m	struct:antlr.BaseLexer	typeref:typename:TokenFactory
failOrAccept	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) failOrAccept(prevAccept *SimState, input CharStream, reach ATNConfig/;"	f	struct:antlr.LexerATNSimulator	typeref:typename:int
fast	vendor/github.com/klauspost/compress/flate/deflate.go	/^	fast   fastEnc$/;"	m	struct:flate.compressor	typeref:typename:fastEnc
fastEnc	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^type fastEnc interface {$/;"	i	package:flate
fastEncL1	vendor/github.com/klauspost/compress/flate/level1.go	/^type fastEncL1 struct {$/;"	s	package:flate
fastEncL2	vendor/github.com/klauspost/compress/flate/level2.go	/^type fastEncL2 struct {$/;"	s	package:flate
fastEncL3	vendor/github.com/klauspost/compress/flate/level3.go	/^type fastEncL3 struct {$/;"	s	package:flate
fastEncL4	vendor/github.com/klauspost/compress/flate/level4.go	/^type fastEncL4 struct {$/;"	s	package:flate
fastEncL5	vendor/github.com/klauspost/compress/flate/level5.go	/^type fastEncL5 struct {$/;"	s	package:flate
fastEncL6	vendor/github.com/klauspost/compress/flate/level6.go	/^type fastEncL6 struct {$/;"	s	package:flate
fastGen	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^type fastGen struct {$/;"	s	package:flate
fastGen	vendor/github.com/klauspost/compress/flate/level1.go	/^	fastGen$/;"	M	struct:flate.fastEncL1	typeref:typename:fastGen
fastGen	vendor/github.com/klauspost/compress/flate/level2.go	/^	fastGen$/;"	M	struct:flate.fastEncL2	typeref:typename:fastGen
fastGen	vendor/github.com/klauspost/compress/flate/level3.go	/^	fastGen$/;"	M	struct:flate.fastEncL3	typeref:typename:fastGen
fastGen	vendor/github.com/klauspost/compress/flate/level4.go	/^	fastGen$/;"	M	struct:flate.fastEncL4	typeref:typename:fastGen
fastGen	vendor/github.com/klauspost/compress/flate/level5.go	/^	fastGen$/;"	M	struct:flate.fastEncL5	typeref:typename:fastGen
fastGen	vendor/github.com/klauspost/compress/flate/level6.go	/^	fastGen$/;"	M	struct:flate.fastEncL6	typeref:typename:fastGen
fastSkipHashing	vendor/github.com/klauspost/compress/flate/deflate.go	/^	good, lazy, nice, chain, fastSkipHashing, level int$/;"	m	struct:flate.compressionLevel	typeref:typename:int
fetch	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) fetch(n int) int {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:int
fetchedEOF	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^	fetchedEOF bool$/;"	m	struct:antlr.CommonTokenStream	typeref:typename:bool
fileConnector	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^type fileConnector struct {$/;"	s	package:libsql
filename	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/file_stream.go	/^	filename string$/;"	m	struct:antlr.FileStream	typeref:typename:string
filenamesOrDefault	vendor/github.com/joho/godotenv/godotenv.go	/^func filenamesOrDefault(filenames []string) []string {$/;"	f	package:godotenv	typeref:typename:[]string
fill	vendor/github.com/klauspost/compress/flate/deflate.go	/^	fill func(*compressor, []byte) int \/\/ copy data to window$/;"	m	struct:flate.compressor	typeref:typename:func(*compressor, []byte) int
fillBlock	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (d *compressor) fillBlock(b []byte) int {$/;"	f	struct:flate.compressor	typeref:typename:int
fillDeflate	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (d *compressor) fillDeflate(b []byte) int {$/;"	f	struct:flate.compressor	typeref:typename:int
fillTokens	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) fillTokens() {$/;"	f	struct:flate.huffmanBitWriter
fillWindow	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (d *compressor) fillWindow(b []byte) {$/;"	f	struct:flate.compressor
filterForChannel	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) filterForChannel(left, right, channel int) []Token {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:[]Token
fin	vendor/nhooyr.io/websocket/frame.go	/^	fin    bool$/;"	m	struct:websocket.header	typeref:typename:bool
fin	vendor/nhooyr.io/websocket/read.go	/^	fin           bool$/;"	m	struct:websocket.msgReader	typeref:typename:bool
final	vendor/github.com/klauspost/compress/flate/inflate.go	/^	final bool$/;"	m	struct:flate.decompressor	typeref:typename:bool
findEdge	vendor/github.com/go-chi/chi/tree.go	/^func (n *node) findEdge(ntyp nodeTyp, label byte) *node {$/;"	f	struct:chi.node	typeref:typename:*node
findEdge	vendor/github.com/go-chi/chi/tree.go	/^func (ns nodes) findEdge(label byte) *node {$/;"	f	type:chi.nodes	typeref:typename:*node
findMatch	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (d *compressor) findMatch(pos int, prevHead int, lookahead int) (length, offset int, ok boo/;"	f	struct:flate.compressor	typeref:typename:(length, offset int, ok bool)
findPattern	vendor/github.com/go-chi/chi/tree.go	/^func (n *node) findPattern(pattern string) bool {$/;"	f	struct:chi.node	typeref:typename:bool
findRoute	vendor/github.com/go-chi/chi/tree.go	/^func (n *node) findRoute(rctx *Context, method methodTyp, path string) *node {$/;"	f	struct:chi.node	typeref:typename:*node
finishBlock	vendor/github.com/klauspost/compress/flate/inflate.go	/^func (f *decompressor) finishBlock() {$/;"	f	struct:flate.decompressor
first	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func (i *IntervalSet) first() int {$/;"	f	struct:antlr.IntervalSet	typeref:typename:int
fixOffsetBeforeMatch	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action_executor.go	/^func (l *LexerActionExecutor) fixOffsetBeforeMatch(offset int) *LexerActionExecutor {$/;"	f	struct:antlr.LexerActionExecutor	typeref:typename:*LexerActionExecutor
fixedHuffmanDecoder	vendor/github.com/klauspost/compress/flate/inflate.go	/^var fixedHuffmanDecoder huffmanDecoder$/;"	v	package:flate	typeref:typename:huffmanDecoder
fixedHuffmanDecoderInit	vendor/github.com/klauspost/compress/flate/inflate.go	/^func fixedHuffmanDecoderInit() {$/;"	f	package:flate
fixedLiteralEncoding	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^var fixedLiteralEncoding = generateFixedLiteralEncoding()$/;"	v	package:flate
fixedOffsetEncoding	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^var fixedOffsetEncoding = generateFixedOffsetEncoding()$/;"	v	package:flate
fixedOnce	vendor/github.com/klauspost/compress/flate/inflate.go	/^var fixedOnce sync.Once$/;"	v	package:flate	typeref:typename:sync.Once
fixedSize	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) fixedSize(extraBits int) int {$/;"	f	struct:flate.huffmanBitWriter	typeref:typename:int
flate	vendor/github.com/klauspost/compress/flate/deflate.go	/^package flate$/;"	p
flate	vendor/github.com/klauspost/compress/flate/dict_decoder.go	/^package flate$/;"	p
flate	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^package flate$/;"	p
flate	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^package flate$/;"	p
flate	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^package flate$/;"	p
flate	vendor/github.com/klauspost/compress/flate/huffman_sortByFreq.go	/^package flate$/;"	p
flate	vendor/github.com/klauspost/compress/flate/huffman_sortByLiteral.go	/^package flate$/;"	p
flate	vendor/github.com/klauspost/compress/flate/inflate.go	/^package flate$/;"	p
flate	vendor/github.com/klauspost/compress/flate/inflate_gen.go	/^package flate$/;"	p
flate	vendor/github.com/klauspost/compress/flate/level1.go	/^package flate$/;"	p
flate	vendor/github.com/klauspost/compress/flate/level2.go	/^package flate$/;"	p
flate	vendor/github.com/klauspost/compress/flate/level3.go	/^package flate$/;"	p
flate	vendor/github.com/klauspost/compress/flate/level4.go	/^package flate$/;"	p
flate	vendor/github.com/klauspost/compress/flate/level5.go	/^package flate$/;"	p
flate	vendor/github.com/klauspost/compress/flate/level6.go	/^package flate$/;"	p
flate	vendor/github.com/klauspost/compress/flate/regmask_amd64.go	/^package flate$/;"	p
flate	vendor/github.com/klauspost/compress/flate/regmask_other.go	/^package flate$/;"	p
flate	vendor/github.com/klauspost/compress/flate/stateless.go	/^package flate$/;"	p
flate	vendor/github.com/klauspost/compress/flate/token.go	/^package flate$/;"	p
flate	vendor/nhooyr.io/websocket/conn_notjs.go	/^func (c *Conn) flate() bool {$/;"	f	struct:websocket.Conn	typeref:typename:bool
flate	vendor/nhooyr.io/websocket/read.go	/^	flate       bool$/;"	m	struct:websocket.msgReader	typeref:typename:bool
flate	vendor/nhooyr.io/websocket/write.go	/^	flate  bool$/;"	m	struct:websocket.msgWriterState	typeref:typename:bool
flateBufio	vendor/nhooyr.io/websocket/read.go	/^	flateBufio  *bufio.Reader$/;"	m	struct:websocket.msgReader	typeref:typename:*bufio.Reader
flateContextTakeover	vendor/nhooyr.io/websocket/read.go	/^func (mr *msgReader) flateContextTakeover() bool {$/;"	f	unknown:websocket.msgReader	typeref:typename:bool
flateContextTakeover	vendor/nhooyr.io/websocket/write.go	/^func (mw *msgWriterState) flateContextTakeover() bool {$/;"	f	struct:websocket.msgWriterState	typeref:typename:bool
flateReader	vendor/nhooyr.io/websocket/read.go	/^	flateReader io.Reader$/;"	m	struct:websocket.msgReader	typeref:typename:io.Reader
flateReaderPool	vendor/nhooyr.io/websocket/compress_notjs.go	/^var flateReaderPool sync.Pool$/;"	v	package:websocket	typeref:typename:sync.Pool
flateTail	vendor/nhooyr.io/websocket/read.go	/^	flateTail   strings.Reader$/;"	m	struct:websocket.msgReader	typeref:typename:strings.Reader
flateThreshold	vendor/nhooyr.io/websocket/conn_notjs.go	/^	flateThreshold int$/;"	m	struct:websocket.Conn	typeref:typename:int
flateThreshold	vendor/nhooyr.io/websocket/conn_notjs.go	/^	flateThreshold int$/;"	m	struct:websocket.connConfig	typeref:typename:int
flush	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) flush() {$/;"	f	struct:flate.huffmanBitWriter
followState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	followState           ATNState$/;"	m	struct:antlr.RuleTransition	typeref:typename:ATNState
forceLock	vendor/nhooyr.io/websocket/conn_notjs.go	/^func (m *mu) forceLock() {$/;"	f	struct:websocket.mu
formatMessage	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^func (f *FailedPredicateException) formatMessage(predicate, message string) string {$/;"	f	struct:antlr.FailedPredicateException	typeref:typename:string
freq	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^	freq    uint16$/;"	m	struct:flate.literalNode	typeref:typename:uint16
freqcache	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^	freqcache [literalCount + 1]literalNode$/;"	m	struct:flate.huffmanEncoder	typeref:typename:[literalCount + 1]literalNode
full	vendor/github.com/klauspost/compress/flate/dict_decoder.go	/^	full  bool \/\/ Has a full window length been written yet?$/;"	m	struct:flate.dictDecoder	typeref:typename:bool
fullCtx	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	fullCtx bool$/;"	m	struct:antlr.BaseATNConfigSet	typeref:typename:bool
g1582	vendor/github.com/google/uuid/time.go	/^	g1582      = epoch * 86400    \/\/ seconds between epochs$/;"	c	package:uuid
g1582ns100	vendor/github.com/google/uuid/time.go	/^	g1582ns100 = g1582 * 10000000 \/\/ 100s of a nanoseconds between epochs$/;"	c	package:uuid
generate	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) generate() {$/;"	f	struct:flate.huffmanBitWriter
generate	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^func (h *huffmanEncoder) generate(freq []uint16, maxBits int32) {$/;"	f	struct:flate.huffmanEncoder
generateCodegen	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) generateCodegen(numLiterals int, numOffsets int, litEnc, offEnc *huff/;"	f	struct:flate.huffmanBitWriter
generateFixedLiteralEncoding	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^func generateFixedLiteralEncoding() *huffmanEncoder {$/;"	f	package:flate	typeref:typename:*huffmanEncoder
generateFixedOffsetEncoding	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^func generateFixedOffsetEncoding() *huffmanEncoder {$/;"	f	package:flate	typeref:typename:*huffmanEncoder
generateRandomSHA256Hash	handler_user.go	/^func generateRandomSHA256Hash() (string, error) {$/;"	f	package:main	typeref:typename:(string, error)
generateRuleBypassTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func (a *ATNDeserializer) generateRuleBypassTransition(atn *ATN, idx int) {$/;"	f	struct:antlr.ATNDeserializer
generateRuleBypassTransitions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserialization_options.go	/^	generateRuleBypassTransitions bool$/;"	m	struct:antlr.ATNDeserializationOptions	typeref:typename:bool
generateRuleBypassTransitions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func (a *ATNDeserializer) generateRuleBypassTransitions(atn *ATN) {$/;"	f	struct:antlr.ATNDeserializer
generateStatementParameters	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^func generateStatementParameters(stmt string, queryParams Params, positionalParametersOffset int/;"	f	package:shared	typeref:typename:(Params, error)
getActionType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	getActionType() int$/;"	n	interface:antlr.LexerAction	typeref:typename:int
getActionType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (b *BaseLexerAction) getActionType() int {$/;"	f	struct:antlr.BaseLexerAction	typeref:typename:int
getBuckets	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^func (as *array2DHashSet) getBuckets(value Collectable[any]) int {$/;"	f	struct:antlr.array2DHashSet	typeref:typename:int
getBufioReader	vendor/nhooyr.io/websocket/dial.go	/^func getBufioReader(r io.Reader) *bufio.Reader {$/;"	f	package:websocket	typeref:typename:*bufio.Reader
getBufioWriter	vendor/nhooyr.io/websocket/dial.go	/^func getBufioWriter(w io.Writer) *bufio.Writer {$/;"	f	package:websocket	typeref:typename:*bufio.Writer
getCachedBasePredictionContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func getCachedBasePredictionContext(context PredictionContext, contextCache *PredictionContextCa/;"	f	package:antlr	typeref:typename:PredictionContext
getCachedContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_simulator.go	/^func (b *BaseATNSimulator) getCachedContext(context PredictionContext) PredictionContext {$/;"	f	struct:antlr.BaseATNSimulator	typeref:typename:PredictionContext
getCharErrorDisplay	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) getCharErrorDisplay(c rune) string {$/;"	f	struct:antlr.BaseLexer	typeref:typename:string
getChild	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^func (prc *BaseParserRuleContext) getChild(ctxType reflect.Type, i int) RuleContext {$/;"	f	struct:antlr.BaseParserRuleContext	typeref:typename:RuleContext
getConflictingAlts	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/diagnostic_error_listener.go	/^func (d *DiagnosticErrorListener) getConflictingAlts(ReportedAlts *BitSet, set ATNConfigSet) *Bi/;"	f	struct:antlr.DiagnosticErrorListener	typeref:typename:*BitSet
getConflictingAlts	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) getConflictingAlts(configs ATNConfigSet) *BitSet {$/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:*BitSet
getConflictingAltsOrUniqueAlt	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) getConflictingAltsOrUniqueAlt(configs ATNConfigSet) *BitSet {$/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:*BitSet
getDFA	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) getDFA(mode int) *DFA {$/;"	f	struct:antlr.LexerATNSimulator	typeref:typename:*DFA
getDecision	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	getDecision() int$/;"	n	interface:antlr.DecisionState	typeref:typename:int
getDecision	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (s *BaseDecisionState) getDecision() int {$/;"	f	struct:antlr.BaseDecisionState	typeref:typename:int
getDecisionDescription	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/diagnostic_error_listener.go	/^func (d *DiagnosticErrorListener) getDecisionDescription(recognizer Parser, dfa *DFA) string {$/;"	f	struct:antlr.DiagnosticErrorListener	typeref:typename:string
getDecisionLookahead	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/ll1_analyzer.go	/^func (la *LL1Analyzer) getDecisionLookahead(s ATNState) []*IntervalSet {$/;"	f	struct:antlr.LL1Analyzer	typeref:typename:[]*IntervalSet
getDecisionState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^func (a *ATN) getDecisionState(decision int) DecisionState {$/;"	f	struct:antlr.ATN	typeref:typename:DecisionState
getEdge	vendor/github.com/go-chi/chi/tree.go	/^func (n *node) getEdge(ntyp nodeTyp, label, tail byte, prefix string) *node {$/;"	f	struct:chi.node	typeref:typename:*node
getEdgeLabel	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_serializer.go	/^func (d *DFASerializer) getEdgeLabel(i int) string {$/;"	f	struct:antlr.DFASerializer	typeref:typename:string
getEdgeLabel	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_serializer.go	/^func (l *LexerDFASerializer) getEdgeLabel(i int) string {$/;"	f	struct:antlr.LexerDFASerializer	typeref:typename:string
getEdges	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^func (d *DFAState) getEdges() []*DFAState {$/;"	f	struct:antlr.DFAState	typeref:typename:[]*DFAState
getEndState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	getEndState() *BlockEndState$/;"	n	interface:antlr.BlockStartState	typeref:typename:*BlockEndState
getEndState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (s *BaseBlockStartState) getEndState() *BlockEndState {$/;"	f	struct:antlr.BaseBlockStartState	typeref:typename:*BlockEndState
getEpsilonTarget	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) getEpsilonTarget(input CharStream, config *LexerATNConfig, trans Tra/;"	f	struct:antlr.LexerATNSimulator	typeref:typename:*LexerATNConfig
getEpsilonTarget	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) getEpsilonTarget(config ATNConfig, t Transition, collectPredicates,/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:ATNConfig
getErrorDisplayForChar	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) getErrorDisplayForChar(c rune) string {$/;"	f	struct:antlr.BaseLexer	typeref:typename:string
getErrorRecoverySet	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (d *DefaultErrorStrategy) getErrorRecoverySet(recognizer Parser) *IntervalSet {$/;"	f	struct:antlr.DefaultErrorStrategy	typeref:typename:*IntervalSet
getExistingTargetState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) getExistingTargetState(s *DFAState, t int) *DFAState {$/;"	f	struct:antlr.LexerATNSimulator	typeref:typename:*DFAState
getExistingTargetState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) getExistingTargetState(previousD *DFAState, t int) *DFAState {$/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:*DFAState
getExpectedTokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^func (a *ATN) getExpectedTokens(stateNumber int, ctx RuleContext) *IntervalSet {$/;"	f	struct:antlr.ATN	typeref:typename:*IntervalSet
getExpectedTokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^func (b *BaseRecognitionException) getExpectedTokens() *IntervalSet {$/;"	f	struct:antlr.BaseRecognitionException	typeref:typename:*IntervalSet
getFlateReader	vendor/nhooyr.io/websocket/compress_notjs.go	/^func getFlateReader(r io.Reader, dict []byte) io.Reader {$/;"	f	package:websocket	typeref:typename:io.Reader
getHardwareInterface	vendor/github.com/google/uuid/node_js.go	/^func getHardwareInterface(name string) (string, []byte) { return "", nil }$/;"	f	package:uuid	typeref:typename:(string, []byte)
getHardwareInterface	vendor/github.com/google/uuid/node_net.go	/^func getHardwareInterface(name string) (string, []byte) {$/;"	f	package:uuid	typeref:typename:(string, []byte)
getIsEpsilon	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	getIsEpsilon() bool$/;"	n	interface:antlr.Transition	typeref:typename:bool
getIsEpsilon	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *BaseTransition) getIsEpsilon() bool {$/;"	f	struct:antlr.BaseTransition	typeref:typename:bool
getIsPositionDependent	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	getIsPositionDependent() bool$/;"	n	interface:antlr.LexerAction	typeref:typename:bool
getIsPositionDependent	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^func (b *BaseLexerAction) getIsPositionDependent() bool {$/;"	f	struct:antlr.BaseLexerAction	typeref:typename:bool
getIthEdge	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^func (d *DFAState) getIthEdge(i int) *DFAState {$/;"	f	struct:antlr.DFAState	typeref:typename:*DFAState
getLabel	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	getLabel() *IntervalSet$/;"	n	interface:antlr.Transition	typeref:typename:*IntervalSet
getLabel	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *BaseTransition) getLabel() *IntervalSet {$/;"	f	struct:antlr.BaseTransition	typeref:typename:*IntervalSet
getLookaheadName	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) getLookaheadName(input TokenStream) string {$/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:string
getNonGreedy	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	getNonGreedy() bool$/;"	n	interface:antlr.DecisionState	typeref:typename:bool
getNonGreedy	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (s *BaseDecisionState) getNonGreedy() bool {$/;"	f	struct:antlr.BaseDecisionState	typeref:typename:bool
getNote	internal/database/notes.sql.go	/^const getNote = `-- name: GetNote :one$/;"	c	package:database
getNotesForUser	internal/database/notes.sql.go	/^const getNotesForUser = `-- name: GetNotesForUser :many$/;"	c	package:database
getNumberOfOnChannelTokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) getNumberOfOnChannelTokens() int {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:int
getParamType	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^func getParamType(arg *driver.NamedValue) paramsType {$/;"	f	package:shared	typeref:typename:paramsType
getPrecedenceDfa	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa.go	/^func (d *DFA) getPrecedenceDfa() bool {$/;"	f	struct:antlr.DFA	typeref:typename:bool
getPrecedenceFilterSuppressed	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^	getPrecedenceFilterSuppressed() bool$/;"	n	interface:antlr.ATNConfig	typeref:typename:bool
getPrecedenceFilterSuppressed	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func (b *BaseATNConfig) getPrecedenceFilterSuppressed() bool {$/;"	f	struct:antlr.BaseATNConfig	typeref:typename:bool
getPrecedenceStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa.go	/^func (d *DFA) getPrecedenceStartState(precedence int) *DFAState {$/;"	f	struct:antlr.DFA	typeref:typename:*DFAState
getPredicate	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *PrecedencePredicateTransition) getPredicate() *PrecedencePredicate {$/;"	f	struct:antlr.PrecedencePredicateTransition	typeref:typename:*PrecedencePredicate
getPredicate	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *PredicateTransition) getPredicate() *Predicate {$/;"	f	struct:antlr.PredicateTransition	typeref:typename:*Predicate
getPredicatePredictions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) getPredicatePredictions(ambigAlts *BitSet, altToPred []SemanticCont/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:[]*PredPrediction
getPredsForAmbigAlts	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) getPredsForAmbigAlts(ambigAlts *BitSet, configs ATNConfigSet, nalts/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:[]SemanticContext
getReachableConfigSet	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) getReachableConfigSet(input CharStream, closure ATNConfigSet, reach /;"	f	struct:antlr.LexerATNSimulator
getReachableTarget	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) getReachableTarget(trans Transition, t int) ATNState {$/;"	f	struct:antlr.LexerATNSimulator	typeref:typename:ATNState
getReachableTarget	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) getReachableTarget(trans Transition, ttype int) ATNState {$/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:ATNState
getReplicationIndex	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func getReplicationIndex(response *hrana.PipelineResponse) uint64 {$/;"	f	package:hranaV2	typeref:typename:uint64
getReturnState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^	getReturnState(int) int$/;"	n	interface:antlr.PredictionContext	typeref:typename:int
getReturnState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (a *ArrayPredictionContext) getReturnState(index int) int {$/;"	f	struct:antlr.ArrayPredictionContext	typeref:typename:int
getReturnState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (b *BaseSingletonPredictionContext) getReturnState(index int) int {$/;"	f	struct:antlr.BaseSingletonPredictionContext	typeref:typename:int
getReturnState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (e *EmptyPredictionContext) getReturnState(index int) int {$/;"	f	struct:antlr.EmptyPredictionContext	typeref:typename:int
getRuleName	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) getRuleName(index int) string {$/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:string
getS0	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa.go	/^func (d *DFA) getS0() *DFAState {$/;"	f	struct:antlr.DFA	typeref:typename:*DFAState
getSerializationType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	getSerializationType() int$/;"	n	interface:antlr.Transition	typeref:typename:int
getSerializationType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *BaseTransition) getSerializationType() int {$/;"	f	struct:antlr.BaseTransition	typeref:typename:int
getStatementStart	vendor/github.com/joho/godotenv/parser.go	/^func getStatementStart(src []byte) []byte {$/;"	f	package:godotenv	typeref:typename:[]byte
getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(configs ATN/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:int
getTarget	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	getTarget() ATNState$/;"	n	interface:antlr.Transition	typeref:typename:ATNState
getTarget	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *BaseTransition) getTarget() ATNState {$/;"	f	struct:antlr.BaseTransition	typeref:typename:ATNState
getTime	vendor/github.com/google/uuid/time.go	/^func getTime() (Time, uint16, error) {$/;"	f	package:uuid	typeref:typename:(Time, uint16, error)
getUniqueAlt	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) getUniqueAlt(configs ATNConfigSet) int {$/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:int
getUser	internal/database/users.sql.go	/^const getUser = `-- name: GetUser :one$/;"	c	package:database
gobwas/ws	vendor/nhooyr.io/websocket/README.md	/^#### gobwas\/ws$/;"	t	subsection:websocket""Comparison""gorilla/websocket
godotenv	vendor/github.com/joho/godotenv/godotenv.go	/^package godotenv$/;"	p
godotenv	vendor/github.com/joho/godotenv/parser.go	/^package godotenv$/;"	p
golang.org/x/net/websocket	vendor/nhooyr.io/websocket/README.md	/^#### golang.org\/x\/net\/websocket$/;"	t	subsection:websocket""Comparison""gorilla/websocket
good	vendor/github.com/klauspost/compress/flate/deflate.go	/^	good, lazy, nice, chain, fastSkipHashing, level int$/;"	m	struct:flate.compressionLevel	typeref:typename:int
gorilla/websocket	vendor/nhooyr.io/websocket/README.md	/^### gorilla\/websocket$/;"	S	section:websocket""Comparison
grammarType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^	grammarType int$/;"	m	struct:antlr.ATN	typeref:typename:int
greetingMessage	static/index.html	/^        <p id="greetingMessage"><\/p>$/;"	I
groupByExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	groupByExpr []IExprContext$/;"	m	struct:sqliteparser.Select_coreContext	typeref:typename:[]IExprContext
h	vendor/github.com/klauspost/compress/flate/deflate.go	/^	h *huffmanEncoder$/;"	m	struct:flate.compressor	typeref:typename:*huffmanEncoder
h1	vendor/github.com/klauspost/compress/flate/inflate.go	/^	h1, h2 huffmanDecoder$/;"	m	struct:flate.decompressor	typeref:typename:huffmanDecoder
h2	vendor/github.com/klauspost/compress/flate/inflate.go	/^	h1, h2 huffmanDecoder$/;"	m	struct:flate.decompressor	typeref:typename:huffmanDecoder
handle	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) handle(method methodTyp, pattern string, handler http.Handler) *node {$/;"	f	struct:chi.Mux	typeref:typename:*node
handleActualRequest	vendor/github.com/go-chi/cors/cors.go	/^func (c *Cors) handleActualRequest(w http.ResponseWriter, r *http.Request) {$/;"	f	struct:cors.Cors
handleControl	vendor/nhooyr.io/websocket/read.go	/^func (c *Conn) handleControl(ctx context.Context, h header) (err error) {$/;"	f	unknown:websocket.Conn	typeref:typename:(err error)
handleJSError	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^func handleJSError(err *error, onErr func()) {$/;"	f	package:wsjs
handlePreflight	vendor/github.com/go-chi/cors/cors.go	/^func (c *Cors) handlePreflight(w http.ResponseWriter, r *http.Request) {$/;"	f	struct:cors.Cors
handler	vendor/github.com/go-chi/chi/mux.go	/^	handler http.Handler$/;"	m	struct:chi.Mux	typeref:typename:http.Handler
handler	vendor/github.com/go-chi/chi/tree.go	/^	handler http.Handler$/;"	m	struct:chi.endpoint	typeref:typename:http.Handler
handlerNotesCreate	handler_notes.go	/^func (cfg *apiConfig) handlerNotesCreate(w http.ResponseWriter, r *http.Request, user database.U/;"	f	unknown:main.apiConfig
handlerNotesGet	handler_notes.go	/^func (cfg *apiConfig) handlerNotesGet(w http.ResponseWriter, r *http.Request, user database.User/;"	f	unknown:main.apiConfig
handlerReadiness	handler_ready.go	/^func handlerReadiness(w http.ResponseWriter, r *http.Request) {$/;"	f	package:main
handlerUsersCreate	handler_user.go	/^func (cfg *apiConfig) handlerUsersCreate(w http.ResponseWriter, r *http.Request) {$/;"	f	unknown:main.apiConfig
handlerUsersGet	handler_user.go	/^func (cfg *apiConfig) handlerUsersGet(w http.ResponseWriter, r *http.Request, user database.User/;"	f	unknown:main.apiConfig
handshakeRequest	vendor/nhooyr.io/websocket/dial.go	/^func handshakeRequest(ctx context.Context, urls string, opts *DialOptions, copts *compressionOpt/;"	f	package:websocket	typeref:typename:(*http.Response, error)
hasEmptyPath	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^	hasEmptyPath() bool$/;"	n	interface:antlr.PredictionContext	typeref:typename:bool
hasEmptyPath	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (a *ArrayPredictionContext) hasEmptyPath() bool {$/;"	f	struct:antlr.ArrayPredictionContext	typeref:typename:bool
hasEmptyPath	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (b *BaseSingletonPredictionContext) hasEmptyPath() bool {$/;"	f	struct:antlr.BaseSingletonPredictionContext	typeref:typename:bool
hasQuotePrefix	vendor/github.com/joho/godotenv/parser.go	/^func hasQuotePrefix(src []byte) (prefix byte, isQuored bool) {$/;"	f	package:godotenv	typeref:typename:(prefix byte, isQuored bool)
hasSemanticContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	hasSemanticContext bool$/;"	m	struct:antlr.BaseATNConfigSet	typeref:typename:bool
hash4	vendor/github.com/klauspost/compress/flate/deflate.go	/^func hash4(b []byte) uint32 {$/;"	f	package:flate	typeref:typename:uint32
hash4u	vendor/github.com/klauspost/compress/flate/deflate.go	/^func hash4u(u uint32, h uint8) uint32 {$/;"	f	package:flate	typeref:typename:uint32
hash7	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^func hash7(u uint64, h uint8) uint32 {$/;"	f	package:flate	typeref:typename:uint32
hashATNConfig	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func hashATNConfig(i interface{}) int {$/;"	f	package:antlr	typeref:typename:int
hashBits	vendor/github.com/klauspost/compress/flate/deflate.go	/^	hashBits            = 17 \/\/ After 17 performance degrades$/;"	c	package:flate
hashCodeConfigs	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^func (b *BaseATNConfigSet) hashCodeConfigs() int {$/;"	f	struct:antlr.BaseATNConfigSet	typeref:typename:int
hashHead	vendor/github.com/klauspost/compress/flate/deflate.go	/^	hashHead [hashSize]uint32$/;"	m	struct:flate.advancedState	typeref:typename:[hashSize]uint32
hashLen	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^func hashLen(u uint64, length, mls uint8) uint32 {$/;"	f	package:flate	typeref:typename:uint32
hashMask	vendor/github.com/klauspost/compress/flate/deflate.go	/^	hashMask            = (1 << hashBits) - 1$/;"	c	package:flate
hashMatch	vendor/github.com/klauspost/compress/flate/deflate.go	/^	hashMatch      [maxMatchLength + minMatchLength]uint32$/;"	m	struct:flate.advancedState	typeref:typename:[maxMatchLength + minMatchLength]uint32
hashOffset	vendor/github.com/klauspost/compress/flate/deflate.go	/^	hashOffset     int$/;"	m	struct:flate.advancedState	typeref:typename:int
hashPrev	vendor/github.com/klauspost/compress/flate/deflate.go	/^	hashPrev [windowSize]uint32$/;"	m	struct:flate.advancedState	typeref:typename:[windowSize]uint32
hashSL	vendor/github.com/klauspost/compress/flate/stateless.go	/^func hashSL(u uint32) uint32 {$/;"	f	package:flate	typeref:typename:uint32
hashShift	vendor/github.com/klauspost/compress/flate/deflate.go	/^	hashShift           = (hashBits + minMatchLength - 1) \/ minMatchLength$/;"	c	package:flate
hashSize	vendor/github.com/klauspost/compress/flate/deflate.go	/^	hashSize            = 1 << hashBits$/;"	c	package:flate
hashcodeFunction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^	hashcodeFunction func(interface{}) int$/;"	m	struct:antlr.array2DHashSet	typeref:typename:func(interface{}) int
hasher	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^type hasher interface {$/;"	i	package:antlr
havingExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	havingExpr  IExprContext$/;"	m	struct:sqliteparser.Select_coreContext	typeref:typename:IExprContext
hcode	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^type hcode uint32$/;"	t	package:flate	typeref:typename:uint32
hd	vendor/github.com/klauspost/compress/flate/inflate.go	/^	hl, hd    *huffmanDecoder$/;"	m	struct:flate.decompressor	typeref:typename:*huffmanDecoder
header	vendor/nhooyr.io/websocket/frame.go	/^type header struct {$/;"	s	package:websocket
headerContainsTokenIgnoreCase	vendor/nhooyr.io/websocket/accept.go	/^func headerContainsTokenIgnoreCase(h http.Header, key, token string) bool {$/;"	f	package:websocket	typeref:typename:bool
headerSize	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) headerSize() (size, numCodegens int) {$/;"	f	struct:flate.huffmanBitWriter	typeref:typename:(size, numCodegens int)
headerTokens	vendor/nhooyr.io/websocket/accept.go	/^func headerTokens(h http.Header, key string) []string {$/;"	f	package:websocket	typeref:typename:[]string
heapSort	vendor/github.com/klauspost/compress/flate/huffman_sortByLiteral.go	/^func heapSort(data []literalNode, a, b int) {$/;"	f	package:flate
heapSortLessFunc	vendor/golang.org/x/exp/slices/zsortfunc.go	/^func heapSortLessFunc[E any](data []E, a, b int, less func(a, b E) bool) {$/;"	f	package:slices	typeref:typename:(data []E, a, b int, less func(a, b E) bool)
heapSortOrdered	vendor/golang.org/x/exp/slices/zsortordered.go	/^func heapSortOrdered[E constraints.Ordered](data []E, a, b int) {$/;"	f	package:slices	typeref:typename:(data []E, a, b int)
hist	vendor/github.com/klauspost/compress/flate/dict_decoder.go	/^	hist []byte \/\/ Sliding window history$/;"	m	struct:flate.dictDecoder	typeref:typename:[]byte
hist	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	hist []byte$/;"	m	struct:flate.fastGen	typeref:typename:[]byte
histSize	vendor/github.com/klauspost/compress/flate/dict_decoder.go	/^func (dd *dictDecoder) histSize() int {$/;"	f	struct:flate.dictDecoder	typeref:typename:int
histogram	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^func histogram(b []byte, h []uint16) {$/;"	f	package:flate
histogramSplit	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^func histogramSplit(b []byte, h []uint16) {$/;"	f	package:flate
hitEOF	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	hitEOF                 bool$/;"	m	struct:antlr.BaseLexer	typeref:typename:bool
hl	vendor/github.com/klauspost/compress/flate/inflate.go	/^	hl, hd    *huffmanDecoder$/;"	m	struct:flate.decompressor	typeref:typename:*huffmanDecoder
host	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^	host             string$/;"	m	struct:hranaV2.hranaV2Conn	typeref:typename:string
host	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^	host      string$/;"	m	struct:libsql.httpConnector	typeref:typename:string
hrana	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/batch.go	/^package hrana$/;"	p
hrana	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/batch_result.go	/^package hrana$/;"	p
hrana	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/pipeline_request.go	/^package hrana$/;"	p
hrana	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/pipeline_response.go	/^package hrana$/;"	p
hrana	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt.go	/^package hrana$/;"	p
hrana	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stmt_result.go	/^package hrana$/;"	p
hrana	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_request.go	/^package hrana$/;"	p
hrana	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/stream_result.go	/^package hrana$/;"	p
hrana	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/hrana/value.go	/^package hrana$/;"	p
hranaV2	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^package hranaV2$/;"	p
hranaV2Conn	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^type hranaV2Conn struct {$/;"	s	package:hranaV2
hranaV2Stmt	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^type hranaV2Stmt struct {$/;"	s	package:hranaV2
hranaV2Tx	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^type hranaV2Tx struct {$/;"	s	package:hranaV2
http	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/driver.go	/^package http$/;"	p
httpConnector	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^type httpConnector struct {$/;"	s	package:libsql
huffOffset	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^var huffOffset *huffmanEncoder$/;"	v	package:flate	typeref:typename:*huffmanEncoder
huffSym	vendor/github.com/klauspost/compress/flate/inflate.go	/^func (f *decompressor) huffSym(h *huffmanDecoder) (int, error) {$/;"	f	struct:flate.decompressor	typeref:typename:(int, error)
huffmanBitWriter	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^type huffmanBitWriter struct {$/;"	s	package:flate
huffmanBlockDecoder	vendor/github.com/klauspost/compress/flate/inflate_gen.go	/^func (f *decompressor) huffmanBlockDecoder() func() {$/;"	f	unknown:flate.decompressor	typeref:typename:func()
huffmanBufioReader	vendor/github.com/klauspost/compress/flate/inflate_gen.go	/^func (f *decompressor) huffmanBufioReader() {$/;"	f	unknown:flate.decompressor
huffmanBytesBuffer	vendor/github.com/klauspost/compress/flate/inflate_gen.go	/^func (f *decompressor) huffmanBytesBuffer() {$/;"	f	unknown:flate.decompressor
huffmanBytesReader	vendor/github.com/klauspost/compress/flate/inflate_gen.go	/^func (f *decompressor) huffmanBytesReader() {$/;"	f	unknown:flate.decompressor
huffmanChunkBits	vendor/github.com/klauspost/compress/flate/inflate.go	/^	huffmanChunkBits  = 9$/;"	c	package:flate
huffmanCountMask	vendor/github.com/klauspost/compress/flate/inflate.go	/^	huffmanCountMask  = 15$/;"	c	package:flate
huffmanDecoder	vendor/github.com/klauspost/compress/flate/inflate.go	/^type huffmanDecoder struct {$/;"	s	package:flate
huffmanEncoder	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^type huffmanEncoder struct {$/;"	s	package:flate
huffmanGenericReader	vendor/github.com/klauspost/compress/flate/inflate_gen.go	/^func (f *decompressor) huffmanGenericReader() {$/;"	f	unknown:flate.decompressor
huffmanNumChunks	vendor/github.com/klauspost/compress/flate/inflate.go	/^	huffmanNumChunks  = 1 << huffmanChunkBits$/;"	c	package:flate
huffmanStringsReader	vendor/github.com/klauspost/compress/flate/inflate_gen.go	/^func (f *decompressor) huffmanStringsReader() {$/;"	f	unknown:flate.decompressor
huffmanValueShift	vendor/github.com/klauspost/compress/flate/inflate.go	/^	huffmanValueShift = 4$/;"	c	package:flate
i	vendor/nhooyr.io/websocket/internal/xsync/int64.go	/^	i atomic.Value$/;"	m	struct:xsync.Int64	typeref:typename:atomic.Value
id	sql/schema/001_users.sql	/^    id TEXT PRIMARY KEY,$/;"	E	table:users
id	sql/schema/002_notes.sql	/^    id TEXT PRIMARY KEY,$/;"	E	table:notes
id	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/result.go	/^	id      int64$/;"	m	struct:shared.result	typeref:typename:int64
id	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^	id      int64$/;"	m	struct:ws.result	typeref:typename:int64
idPool	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^	idPool *idPool$/;"	m	struct:ws.websocketConn	typeref:typename:*idPool
idPool	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^type idPool struct {$/;"	s	package:ws
ifname	vendor/github.com/google/uuid/node.go	/^	ifname string  \/\/ name of interface being used$/;"	v	package:uuid	typeref:typename:string
ii	vendor/github.com/klauspost/compress/flate/deflate.go	/^	ii uint16 \/\/ position of last match, intended to overflow to reset.$/;"	m	struct:flate.advancedState	typeref:typename:uint16
inContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) inContext(context ParserRuleContext) bool {$/;"	f	struct:antlr.BaseParser	typeref:typename:bool
increasingHint	vendor/golang.org/x/exp/slices/sort.go	/^	increasingHint$/;"	c	package:slices
index	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^	index int$/;"	m	struct:antlr.CommonTokenStream	typeref:typename:int
index	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/input_stream.go	/^	index int$/;"	m	struct:antlr.InputStream	typeref:typename:int
index	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	index    int$/;"	m	struct:antlr.SimState	typeref:typename:int
index	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	index int$/;"	m	struct:antlr.BaseRewriteOperation	typeref:typename:int
index	vendor/github.com/klauspost/compress/flate/deflate.go	/^	index          int$/;"	m	struct:flate.advancedState	typeref:typename:int
indexForBit	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func indexForBit(bit int) int {$/;"	f	package:antlr	typeref:typename:int
indexOfNonSpaceChar	vendor/github.com/joho/godotenv/parser.go	/^func indexOfNonSpaceChar(src []byte) int {$/;"	f	package:godotenv	typeref:typename:int
indexTokens	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) indexTokens(t *tokens, filled bool) (numLiterals, numOffsets int) {$/;"	f	struct:flate.huffmanBitWriter	typeref:typename:(numLiterals, numOffsets int)
indexTokens	vendor/github.com/klauspost/compress/flate/token.go	/^func (t *tokens) indexTokens(in []token) {$/;"	f	struct:flate.tokens
indexTokens	vendor/github.com/klauspost/compress/flate/token.go	/^func indexTokens(in []token) tokens {$/;"	f	package:flate	typeref:typename:tokens
init	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func init() {$/;"	f	package:antlr
init	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (d *compressor) init(w io.Writer, level int) (err error) {$/;"	f	struct:flate.compressor	typeref:typename:(err error)
init	vendor/github.com/klauspost/compress/flate/dict_decoder.go	/^func (dd *dictDecoder) init(size int, dict []byte) {$/;"	f	struct:flate.dictDecoder
init	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func init() {$/;"	f	package:flate
init	vendor/github.com/klauspost/compress/flate/inflate.go	/^func (h *huffmanDecoder) init(lengths []int) bool {$/;"	f	struct:flate.huffmanDecoder	typeref:typename:bool
init	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func init() {$/;"	f	package:hranaV2
init	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^func init() {$/;"	f	package:libsql
init	vendor/nhooyr.io/websocket/compress_notjs.go	/^func (sw *slidingWindow) init(n int) {$/;"	f	struct:websocket.slidingWindow
init	vendor/nhooyr.io/websocket/ws_js.go	/^func (c *Conn) init() {$/;"	f	struct:websocket.Conn
initDeflate	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (d *compressor) initDeflate() {$/;"	f	struct:flate.compressor
initialBucketCapacity	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^	initialBucketCapacity int$/;"	m	struct:antlr.array2DHashSet	typeref:typename:int
inline	vendor/github.com/go-chi/chi/mux.go	/^	inline bool$/;"	m	struct:chi.Mux	typeref:typename:bool
innerAdd	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^func (as *array2DHashSet) innerAdd(o Collectable[any]) interface{} {$/;"	f	struct:antlr.array2DHashSet	typeref:typename:interface{}
input	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	input          IntStream$/;"	m	struct:antlr.BaseRecognitionException	typeref:typename:IntStream
input	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	input                  CharStream$/;"	m	struct:antlr.BaseLexer	typeref:typename:CharStream
input	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	input           TokenStream$/;"	m	struct:antlr.BaseParser	typeref:typename:TokenStream
input	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^	input          TokenStream$/;"	m	struct:antlr.ParserATNSimulator	typeref:typename:TokenStream
inputStream	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) inputStream() CharStream {$/;"	f	struct:antlr.BaseLexer	typeref:typename:CharStream
insertionSort	vendor/github.com/klauspost/compress/flate/huffman_sortByLiteral.go	/^func insertionSort(data []literalNode, a, b int) {$/;"	f	package:flate
insertionSortByFreq	vendor/github.com/klauspost/compress/flate/huffman_sortByFreq.go	/^func insertionSortByFreq(data []literalNode, a, b int) {$/;"	f	package:flate
insertionSortLessFunc	vendor/golang.org/x/exp/slices/zsortfunc.go	/^func insertionSortLessFunc[E any](data []E, a, b int, less func(a, b E) bool) {$/;"	f	package:slices	typeref:typename:(data []E, a, b int, less func(a, b E) bool)
insertionSortOrdered	vendor/golang.org/x/exp/slices/zsortordered.go	/^func insertionSortOrdered[E constraints.Ordered](data []E, a, b int) {$/;"	f	package:slices	typeref:typename:(data []E, a, b int)
instruction_index	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	instruction_index int$/;"	m	struct:antlr.BaseRewriteOperation	typeref:typename:int
intMax	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func intMax(a, b int) int {$/;"	f	package:antlr	typeref:typename:int
intMin	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func intMin(a, b int) int {$/;"	f	package:antlr	typeref:typename:int
interfaces	vendor/github.com/google/uuid/node_net.go	/^var interfaces []net.Interface \/\/ cached list of interfaces$/;"	v	package:uuid	typeref:typename:[]net.Interface
intervalSet	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	intervalSet       *IntervalSet$/;"	m	struct:antlr.BaseTransition	typeref:typename:*IntervalSet
intervals	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^	intervals []*Interval$/;"	m	struct:antlr.IntervalSet	typeref:typename:[]*Interval
invalidLengthError	vendor/github.com/google/uuid/uuid.go	/^type invalidLengthError struct{ len int }$/;"	s	package:uuid
invokingState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^	invokingState int$/;"	m	struct:antlr.BaseRuleContext	typeref:typename:int
isAcceptState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^	isAcceptState bool$/;"	m	struct:antlr.DFAState	typeref:typename:bool
isCharFunc	vendor/github.com/joho/godotenv/parser.go	/^func isCharFunc(char rune) func(rune) bool {$/;"	f	package:godotenv	typeref:typename:func(rune) bool
isClosed	vendor/nhooyr.io/websocket/close_notjs.go	/^func (c *Conn) isClosed() bool {$/;"	f	unknown:websocket.Conn	typeref:typename:bool
isClosed	vendor/nhooyr.io/websocket/ws_js.go	/^func (c *Conn) isClosed() bool {$/;"	f	struct:websocket.Conn	typeref:typename:bool
isCtxDependent	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^	isCtxDependent bool$/;"	m	struct:antlr.Predicate	typeref:typename:bool
isCtxDependent	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	isCtxDependent                    bool$/;"	m	struct:antlr.ActionTransition	typeref:typename:bool
isCtxDependent	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	isCtxDependent       bool$/;"	m	struct:antlr.PredicateTransition	typeref:typename:bool
isEmpty	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^	isEmpty() bool$/;"	n	interface:antlr.PredictionContext	typeref:typename:bool
isEmpty	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (a *ArrayPredictionContext) isEmpty() bool {$/;"	f	struct:antlr.ArrayPredictionContext	typeref:typename:bool
isEmpty	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (b *BasePredictionContext) isEmpty() bool {$/;"	f	struct:antlr.BasePredictionContext	typeref:typename:bool
isEmpty	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (e *EmptyPredictionContext) isEmpty() bool {$/;"	f	struct:antlr.EmptyPredictionContext	typeref:typename:bool
isEpsilon	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	isEpsilon         bool$/;"	m	struct:antlr.BaseTransition	typeref:typename:bool
isErrorResp	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^func isErrorResp(resp interface{}) bool {$/;"	f	package:ws	typeref:typename:bool
isLeaf	vendor/github.com/go-chi/chi/tree.go	/^func (n *node) isLeaf() bool {$/;"	f	struct:chi.node	typeref:typename:bool
isLineEnd	vendor/github.com/joho/godotenv/parser.go	/^func isLineEnd(r rune) bool {$/;"	f	package:godotenv	typeref:typename:bool
isMethodAllowed	vendor/github.com/go-chi/cors/cors.go	/^func (c *Cors) isMethodAllowed(method string) bool {$/;"	f	struct:cors.Cors	typeref:typename:bool
isNonGreedyExitState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (as *BaseATNState) isNonGreedyExitState() bool {$/;"	f	struct:antlr.BaseATNState	typeref:typename:bool
isOriginAllowed	vendor/github.com/go-chi/cors/cors.go	/^func (c *Cors) isOriginAllowed(r *http.Request, origin string) bool {$/;"	f	struct:cors.Cors	typeref:typename:bool
isPositionDependent	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	isPositionDependent bool$/;"	m	struct:antlr.BaseLexerAction	typeref:typename:bool
isPositionDependent	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	isPositionDependent bool$/;"	m	struct:antlr.LexerIndexedCustomAction	typeref:typename:bool
isPositionalParameter	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^func isPositionalParameter(param string) (ok bool, err error) {$/;"	f	package:shared	typeref:typename:(ok bool, err error)
isPrecedenceRule	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	isPrecedenceRule bool$/;"	m	struct:antlr.RuleStartState	typeref:typename:bool
isReadClosed	vendor/nhooyr.io/websocket/ws_js.go	/^	isReadClosed  xsync.Int64$/;"	m	struct:websocket.Conn	typeref:typename:xsync.Int64
isSpace	vendor/github.com/joho/godotenv/parser.go	/^func isSpace(r rune) bool {$/;"	f	package:godotenv	typeref:typename:bool
item0	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^	item0 *LoopEndState$/;"	m	struct:antlr.loopEndStateIntPair	typeref:typename:*LoopEndState
item0	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^	item0 BlockStartState$/;"	m	struct:antlr.blockStartStateIntPair	typeref:typename:BlockStartState
item0	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^	item0, item1 ATNConfigSet$/;"	m	struct:antlr.ATNConfigSetPair	typeref:typename:ATNConfigSet
item1	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^	item1 int$/;"	m	struct:antlr.blockStartStateIntPair	typeref:typename:int
item1	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^	item1 int$/;"	m	struct:antlr.loopEndStateIntPair	typeref:typename:int
item1	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^	item0, item1 ATNConfigSet$/;"	m	struct:antlr.ATNConfigSetPair	typeref:typename:ATNConfigSet
jsonNull	vendor/github.com/google/uuid/null.go	/^var jsonNull = []byte("null")$/;"	v	package:uuid
just addin this for a lil bit of fun	README.md	/^# just addin this for a lil bit of fun$/;"	c
jwt	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^	jwt              string$/;"	m	struct:hranaV2.hranaV2Conn	typeref:typename:string
keyGUID	vendor/nhooyr.io/websocket/accept.go	/^var keyGUID = []byte("258EAFA5-E914-47DA-95CA-C5AB0DC85B11")$/;"	v	package:websocket
label	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	label             int$/;"	m	struct:antlr.BaseTransition	typeref:typename:int
label	vendor/github.com/go-chi/chi/tree.go	/^	label byte$/;"	m	struct:chi.node	typeref:typename:byte
lastErrorIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^	lastErrorIndex    int$/;"	m	struct:antlr.DefaultErrorStrategy	typeref:typename:int
lastErrorStates	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^	lastErrorStates   *IntervalSet$/;"	m	struct:antlr.DefaultErrorStrategy	typeref:typename:*IntervalSet
lastFreq	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^	lastFreq int32$/;"	m	struct:flate.levelInfo	typeref:typename:int32
lastHeader	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	lastHeader      int$/;"	m	struct:flate.huffmanBitWriter	typeref:typename:int
lastHuffMan	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	lastHuffMan     bool$/;"	m	struct:flate.huffmanBitWriter	typeref:typename:bool
lastInsertId	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^func (r *execResponse) lastInsertId() int64 {$/;"	f	struct:ws.execResponse	typeref:typename:int64
last_rewrite_token_indexes	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	last_rewrite_token_indexes map[string]int$/;"	m	struct:antlr.TokenStreamRewriter	typeref:typename:map[string]int
lasttime	vendor/github.com/google/uuid/time.go	/^	lasttime uint64 \/\/ last time we returned$/;"	v	package:uuid	typeref:typename:uint64
lazy	vendor/github.com/klauspost/compress/flate/deflate.go	/^	good, lazy, nice, chain, fastSkipHashing, level int$/;"	m	struct:flate.compressionLevel	typeref:typename:int
lazyInit	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) lazyInit() {$/;"	f	struct:antlr.CommonTokenStream
learn-cicd-starter (Notely)	README.md	/^# learn-cicd-starter (Notely)$/;"	c
len	vendor/github.com/google/uuid/uuid.go	/^type invalidLengthError struct{ len int }$/;"	m	struct:uuid.invalidLengthError	typeref:typename:int
len	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^func (h hcode) len() uint8 {$/;"	f	type:flate.hcode	typeref:typename:uint8
length	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func (i *Interval) length() int {$/;"	f	struct:antlr.Interval	typeref:typename:int
length	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func (i *IntervalSet) length() int {$/;"	f	struct:antlr.IntervalSet	typeref:typename:int
length	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^	length() int$/;"	n	interface:antlr.PredictionContext	typeref:typename:int
length	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (a *ArrayPredictionContext) length() int {$/;"	f	struct:antlr.ArrayPredictionContext	typeref:typename:int
length	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (b *BaseSingletonPredictionContext) length() int {$/;"	f	struct:antlr.BaseSingletonPredictionContext	typeref:typename:int
length	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func (p *PredictionContextCache) length() int {$/;"	f	struct:antlr.PredictionContextCache	typeref:typename:int
length	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func (b *BitSet) length() int {$/;"	f	struct:antlr.BitSet	typeref:typename:int
length	vendor/github.com/klauspost/compress/flate/deflate.go	/^	length         int$/;"	m	struct:flate.advancedState	typeref:typename:int
length	vendor/github.com/klauspost/compress/flate/inflate.go	/^	length, extra uint8$/;"	m	struct:flate.lengthExtra	typeref:typename:uint8
length	vendor/github.com/klauspost/compress/flate/token.go	/^func (t token) length() uint8 { return uint8(t >> lengthShift) }$/;"	f	type:flate.token	typeref:typename:uint8
lengthBase	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^var lengthBase = [32]uint8{$/;"	v	package:flate
lengthCode	vendor/github.com/klauspost/compress/flate/token.go	/^func lengthCode(len uint8) uint8 { return lengthCodes[len] }$/;"	f	package:flate	typeref:typename:uint8
lengthCodes	vendor/github.com/klauspost/compress/flate/token.go	/^var lengthCodes = [256]uint8{$/;"	v	package:flate
lengthCodes1	vendor/github.com/klauspost/compress/flate/token.go	/^var lengthCodes1 = [256]uint8{$/;"	v	package:flate
lengthCodesStart	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	lengthCodesStart = 257$/;"	c	package:flate
lengthExtra	vendor/github.com/klauspost/compress/flate/inflate.go	/^type lengthExtra struct {$/;"	s	package:flate
lengthExtraBits	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^var lengthExtraBits = [32]uint8{$/;"	v	package:flate
lengthExtraBitsMinCode	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^const lengthExtraBitsMinCode = 8$/;"	c	package:flate
lengthShift	vendor/github.com/klauspost/compress/flate/token.go	/^	lengthShift         = 22$/;"	c	package:flate
level	vendor/github.com/klauspost/compress/flate/deflate.go	/^	good, lazy, nice, chain, fastSkipHashing, level int$/;"	m	struct:flate.compressionLevel	typeref:typename:int
level	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^	level int32$/;"	m	struct:flate.levelInfo	typeref:typename:int32
levelInfo	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^type levelInfo struct {$/;"	s	package:flate
levels	vendor/github.com/klauspost/compress/flate/deflate.go	/^var levels = []compressionLevel{$/;"	v	package:flate
lexerAction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	lexerAction         LexerAction$/;"	m	struct:antlr.LexerIndexedCustomAction	typeref:typename:LexerAction
lexerActionExecutor	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^	lexerActionExecutor            *LexerActionExecutor$/;"	m	struct:antlr.LexerATNConfig	typeref:typename:*LexerActionExecutor
lexerActionExecutor	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^	lexerActionExecutor *LexerActionExecutor$/;"	m	struct:antlr.DFAState	typeref:typename:*LexerActionExecutor
lexerActionFactory	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func (a *ATNDeserializer) lexerActionFactory(typeIndex, data1, data2 int) LexerAction {$/;"	f	struct:antlr.ATNDeserializer	typeref:typename:LexerAction
lexerActions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^	lexerActions []LexerAction$/;"	m	struct:antlr.ATN	typeref:typename:[]LexerAction
lexerActions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action_executor.go	/^	lexerActions []LexerAction$/;"	m	struct:antlr.LexerActionExecutor	typeref:typename:[]LexerAction
libsql	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^package libsql$/;"	p
lillian	vendor/github.com/google/uuid/time.go	/^	lillian    = 2299160          \/\/ Julian day of 15 Oct 1582$/;"	c	package:uuid
limit	vendor/nhooyr.io/websocket/read.go	/^	limit xsync.Int64$/;"	m	struct:websocket.limitReader	typeref:typename:xsync.Int64
limitReader	vendor/nhooyr.io/websocket/read.go	/^	limitReader *limitReader$/;"	m	struct:websocket.msgReader	typeref:typename:*limitReader
limitReader	vendor/nhooyr.io/websocket/read.go	/^type limitReader struct {$/;"	s	package:websocket
line	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	line     int$/;"	m	struct:antlr.SimState	typeref:typename:int
line	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	line       int    \/\/ line=1..n of the 1st character$/;"	m	struct:antlr.BaseToken	typeref:typename:int
linkMask	vendor/github.com/klauspost/compress/flate/inflate.go	/^	linkMask uint32                    \/\/ mask the width of the link table$/;"	m	struct:flate.huffmanDecoder	typeref:typename:uint32
links	vendor/github.com/klauspost/compress/flate/inflate.go	/^	links    [][]uint16                \/\/ overflow links$/;"	m	struct:flate.huffmanDecoder	typeref:typename:[][]uint16
listeners	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^	listeners []ErrorListener$/;"	m	struct:antlr.BaseRecognizer	typeref:typename:[]ErrorListener
litHist	vendor/github.com/klauspost/compress/flate/token.go	/^	litHist   [256]uint16 \/\/ codes 0->255$/;"	m	struct:flate.tokens	typeref:typename:[256]uint16
literal	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^	literal uint16$/;"	m	struct:flate.literalNode	typeref:typename:uint16
literal	vendor/github.com/klauspost/compress/flate/token.go	/^func (t token) literal() uint8 { return uint8(t) }$/;"	f	type:flate.token	typeref:typename:uint8
literalCount	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^	literalCount = 286$/;"	c	package:flate
literalEncoding	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	literalEncoding *huffmanEncoder$/;"	m	struct:flate.huffmanBitWriter	typeref:typename:*huffmanEncoder
literalFreq	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	literalFreq        [lengthCodesStart + 32]uint16$/;"	m	struct:flate.huffmanBitWriter	typeref:typename:[lengthCodesStart + 32]uint16
literalNames	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_serializer.go	/^	literalNames  []string$/;"	m	struct:antlr.DFASerializer	typeref:typename:[]string
literalNode	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^type literalNode struct {$/;"	s	package:flate
literalType	vendor/github.com/klauspost/compress/flate/token.go	/^	literalType         = 0 << 30$/;"	c	package:flate
load3216	vendor/github.com/klauspost/compress/flate/stateless.go	/^func load3216(b []byte, i int16) uint32 {$/;"	f	package:flate	typeref:typename:uint32
load3232	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^func load3232(b []byte, i int32) uint32 {$/;"	f	package:flate	typeref:typename:uint32
load6416	vendor/github.com/klauspost/compress/flate/stateless.go	/^func load6416(b []byte, i int16) uint64 {$/;"	f	package:flate	typeref:typename:uint64
load6432	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^func load6432(b []byte, i int32) uint64 {$/;"	f	package:flate	typeref:typename:uint64
loadFile	vendor/github.com/joho/godotenv/godotenv.go	/^func loadFile(filename string, overload bool) error {$/;"	f	package:godotenv	typeref:typename:error
locateKeyName	vendor/github.com/joho/godotenv/parser.go	/^func locateKeyName(src []byte) (key string, cutset []byte, err error) {$/;"	f	package:godotenv	typeref:typename:(key string, cutset []byte, err error)
lock	vendor/nhooyr.io/websocket/conn_notjs.go	/^func (m *mu) lock(ctx context.Context) error {$/;"	f	struct:websocket.mu	typeref:typename:error
logMaxOffsetSize	vendor/github.com/klauspost/compress/flate/deflate.go	/^	logMaxOffsetSize = 15  \/\/ Standard DEFLATE$/;"	c	package:flate
logNewTablePenalty	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	logNewTablePenalty uint$/;"	m	struct:flate.huffmanBitWriter	typeref:typename:uint
logWindowSize	vendor/github.com/klauspost/compress/flate/deflate.go	/^	logWindowSize    = 15$/;"	c	package:flate
logf	vendor/github.com/go-chi/cors/cors.go	/^func (c *Cors) logf(format string, a ...interface{}) {$/;"	f	struct:cors.Cors
longestPrefix	vendor/github.com/go-chi/chi/tree.go	/^func longestPrefix(k1, k2 string) int {$/;"	f	package:chi	typeref:typename:int
look1	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/ll1_analyzer.go	/^func (la *LL1Analyzer) look1(s, stopState ATNState, ctx PredictionContext, look *IntervalSet, lo/;"	f	struct:antlr.LL1Analyzer
look2	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/ll1_analyzer.go	/^func (la *LL1Analyzer) look2(s, stopState ATNState, ctx PredictionContext, look *IntervalSet, lo/;"	f	struct:antlr.LL1Analyzer
look3	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/ll1_analyzer.go	/^func (la *LL1Analyzer) look3(stopState ATNState, ctx PredictionContext, look *IntervalSet, lookB/;"	f	struct:antlr.LL1Analyzer
loopBackState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	loopBackState          ATNState$/;"	m	struct:antlr.StarLoopEntryState	typeref:typename:ATNState
loopBackState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	loopBackState ATNState$/;"	m	struct:antlr.LoopEndState	typeref:typename:ATNState
loopBackState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	loopBackState ATNState$/;"	m	struct:antlr.PlusBlockStartState	typeref:typename:ATNState
loopEndStateIntPair	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^type loopEndStateIntPair struct {$/;"	s	package:antlr
mALL	vendor/github.com/go-chi/chi/tree.go	/^var mALL = mCONNECT | mDELETE | mGET | mHEAD |$/;"	v	package:chi
mCONNECT	vendor/github.com/go-chi/chi/tree.go	/^	mCONNECT$/;"	c	package:chi
mDELETE	vendor/github.com/go-chi/chi/tree.go	/^	mDELETE$/;"	c	package:chi
mFastLog2	vendor/github.com/klauspost/compress/flate/token.go	/^func mFastLog2(val float32) float32 {$/;"	f	package:flate	typeref:typename:float32
mGET	vendor/github.com/go-chi/chi/tree.go	/^	mGET$/;"	c	package:chi
mHEAD	vendor/github.com/go-chi/chi/tree.go	/^	mHEAD$/;"	c	package:chi
mOPTIONS	vendor/github.com/go-chi/chi/tree.go	/^	mOPTIONS$/;"	c	package:chi
mPATCH	vendor/github.com/go-chi/chi/tree.go	/^	mPATCH$/;"	c	package:chi
mPOST	vendor/github.com/go-chi/chi/tree.go	/^	mPOST$/;"	c	package:chi
mPUT	vendor/github.com/go-chi/chi/tree.go	/^	mPUT$/;"	c	package:chi
mSTUB	vendor/github.com/go-chi/chi/tree.go	/^	mSTUB methodTyp = 1 << iota$/;"	c	package:chi	typeref:type:methodTyp
mTRACE	vendor/github.com/go-chi/chi/tree.go	/^	mTRACE$/;"	c	package:chi
main	handler_notes.go	/^package main$/;"	p
main	handler_ready.go	/^package main$/;"	p
main	handler_user.go	/^package main$/;"	p
main	json.go	/^package main$/;"	p
main	main.go	/^func main() {$/;"	f	package:main
main	main.go	/^package main$/;"	p
main	middleware_auth.go	/^package main$/;"	p
main	models.go	/^package main$/;"	p
makeLabel	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *AtomTransition) makeLabel() *IntervalSet {$/;"	f	struct:antlr.AtomTransition	typeref:typename:*IntervalSet
makeLabel	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *RangeTransition) makeLabel() *IntervalSet {$/;"	f	struct:antlr.RangeTransition	typeref:typename:*IntervalSet
makeReader	vendor/github.com/klauspost/compress/flate/inflate.go	/^func makeReader(r io.Reader) Reader {$/;"	f	package:flate	typeref:typename:Reader
markPrecedenceDecisions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func (a *ATNDeserializer) markPrecedenceDecisions(atn *ATN) {$/;"	f	struct:antlr.ATNDeserializer
mask	vendor/nhooyr.io/websocket/frame.go	/^func mask(key uint32, b []byte) uint32 {$/;"	f	package:websocket	typeref:typename:uint32
maskForBit	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func maskForBit(bit int) uint64 {$/;"	f	package:antlr	typeref:typename:uint64
maskKey	vendor/nhooyr.io/websocket/frame.go	/^	maskKey uint32$/;"	m	struct:websocket.header	typeref:typename:uint32
maskKey	vendor/nhooyr.io/websocket/read.go	/^	maskKey       uint32$/;"	m	struct:websocket.msgReader	typeref:typename:uint32
masked	vendor/nhooyr.io/websocket/frame.go	/^	masked  bool$/;"	m	struct:websocket.header	typeref:typename:bool
match	vendor/github.com/go-chi/cors/utils.go	/^func (w wildcard) match(s string) bool {$/;"	f	struct:cors.wildcard	typeref:typename:bool
match	vendor/nhooyr.io/websocket/accept.go	/^func match(pattern, s string) (bool, error) {$/;"	f	package:websocket	typeref:typename:(bool, error)
matchLen	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^func matchLen(a, b []byte) int {$/;"	f	package:flate	typeref:typename:int
matchOffsetOnlyMask	vendor/github.com/klauspost/compress/flate/token.go	/^	matchOffsetOnlyMask = 0xffff$/;"	c	package:flate
matchType	vendor/github.com/klauspost/compress/flate/token.go	/^	matchType           = 1 << 30$/;"	c	package:flate
matchlen	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^func (e *fastGen) matchlen(s, t int32, src []byte) int32 {$/;"	f	struct:flate.fastGen	typeref:typename:int32
matchlenLong	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^func (e *fastGen) matchlenLong(s, t int32, src []byte) int32 {$/;"	f	struct:flate.fastGen	typeref:typename:int32
max	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func max(a, b int) int {$/;"	f	package:antlr	typeref:typename:int
maxAge	vendor/github.com/go-chi/cors/cors.go	/^	maxAge         int$/;"	m	struct:cors.Cors	typeref:typename:int
maxBitsLimit	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^	maxBitsLimit = 16$/;"	c	package:flate
maxCloseReason	vendor/nhooyr.io/websocket/close_notjs.go	/^const maxCloseReason = maxControlPayload - 2$/;"	c	package:websocket
maxCodeLen	vendor/github.com/klauspost/compress/flate/inflate.go	/^	maxCodeLen     = 16 \/\/ max length of Huffman code$/;"	c	package:flate
maxCodeLenMask	vendor/github.com/klauspost/compress/flate/inflate.go	/^	maxCodeLenMask = 15 \/\/ mask for max length of Huffman code$/;"	c	package:flate
maxControlPayload	vendor/nhooyr.io/websocket/frame.go	/^const maxControlPayload = 125$/;"	c	package:websocket
maxDepth	vendor/github.com/klauspost/compress/flate/huffman_sortByLiteral.go	/^func maxDepth(n int) int {$/;"	f	package:flate	typeref:typename:int
maxFlateBlockTokens	vendor/github.com/klauspost/compress/flate/deflate.go	/^	maxFlateBlockTokens = 1 << 15$/;"	c	package:flate
maxHashOffset	vendor/github.com/klauspost/compress/flate/deflate.go	/^	maxHashOffset       = 1 << 28$/;"	c	package:flate
maxInsertIndex	vendor/github.com/klauspost/compress/flate/deflate.go	/^	maxInsertIndex int$/;"	m	struct:flate.advancedState	typeref:typename:int
maxMatchLength	vendor/github.com/klauspost/compress/flate/deflate.go	/^	maxMatchLength   = 258 \/\/ The longest match for the compressor$/;"	c	package:flate
maxMatchOffset	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	maxMatchOffset  = 1 << 15        \/\/ The largest match offset$/;"	c	package:flate
maxNode	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^func maxNode() literalNode { return literalNode{math.MaxUint16, math.MaxUint16} }$/;"	f	package:flate	typeref:typename:literalNode
maxNumDist	vendor/github.com/klauspost/compress/flate/inflate.go	/^	maxNumDist = 30$/;"	c	package:flate
maxNumLit	vendor/github.com/klauspost/compress/flate/inflate.go	/^	maxNumLit  = 286$/;"	c	package:flate
maxPredefinedTokens	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	maxPredefinedTokens = 250$/;"	c	package:flate
maxRead	vendor/github.com/klauspost/compress/flate/inflate.go	/^	maxRead  int                       \/\/ the maximum number of bits we can read and not overread$/;"	m	struct:flate.huffmanDecoder	typeref:typename:int
maxStatelessBlock	vendor/github.com/klauspost/compress/flate/stateless.go	/^	maxStatelessBlock = math.MaxInt16$/;"	c	package:flate
maxStatelessDict	vendor/github.com/klauspost/compress/flate/stateless.go	/^	maxStatelessDict = 8 << 10$/;"	c	package:flate
maxStoreBlockSize	vendor/github.com/klauspost/compress/flate/deflate.go	/^	maxStoreBlockSize   = 65535$/;"	c	package:flate
maxTokenType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^	maxTokenType int$/;"	m	struct:antlr.ATN	typeref:typename:int
maxUsed	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^	maxUsed uint32$/;"	m	struct:ws.idPool	typeref:typename:uint32
medianAdjacentLessFunc	vendor/golang.org/x/exp/slices/zsortfunc.go	/^func medianAdjacentLessFunc[E any](data []E, a int, swaps *int, less func(a, b E) bool) int {$/;"	f	package:slices	typeref:typename:(data []E, a int, swaps *int, less func(a, b E) bool) int
medianAdjacentOrdered	vendor/golang.org/x/exp/slices/zsortordered.go	/^func medianAdjacentOrdered[E constraints.Ordered](data []E, a int, swaps *int) int {$/;"	f	package:slices	typeref:typename:(data []E, a int, swaps *int) int
medianLessFunc	vendor/golang.org/x/exp/slices/zsortfunc.go	/^func medianLessFunc[E any](data []E, a, b, c int, swaps *int, less func(a, b E) bool) int {$/;"	f	package:slices	typeref:typename:(data []E, a, b, c int, swaps *int, less func(a, b E) bool) int
medianOfThree	vendor/github.com/klauspost/compress/flate/huffman_sortByLiteral.go	/^func medianOfThree(data []literalNode, m1, m0, m2 int) {$/;"	f	package:flate
medianOfThreeSortByFreq	vendor/github.com/klauspost/compress/flate/huffman_sortByFreq.go	/^func medianOfThreeSortByFreq(data []literalNode, m1, m0, m2 int) {$/;"	f	package:flate
medianOrdered	vendor/golang.org/x/exp/slices/zsortordered.go	/^func medianOrdered[E constraints.Ordered](data []E, a, b, c int, swaps *int) int {$/;"	f	package:slices	typeref:typename:(data []E, a, b, c int, swaps *int) int
merge	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func merge(a, b PredictionContext, rootIsWildcard bool, mergeCache *DoubleDict) PredictionContex/;"	f	package:antlr	typeref:typename:PredictionContext
mergeArrays	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func mergeArrays(a, b *ArrayPredictionContext, rootIsWildcard bool, mergeCache *DoubleDict) Pred/;"	f	package:antlr	typeref:typename:PredictionContext
mergeCache	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	mergeCache         DoubleDict$/;"	m	struct:antlr.LexerATNSimulator	typeref:typename:DoubleDict
mergeCache	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^	mergeCache     *DoubleDict$/;"	m	struct:antlr.ParserATNSimulator	typeref:typename:*DoubleDict
mergeRoot	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func mergeRoot(a, b SingletonPredictionContext, rootIsWildcard bool) PredictionContext {$/;"	f	package:antlr	typeref:typename:PredictionContext
mergeSingletons	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func mergeSingletons(a, b *BaseSingletonPredictionContext, rootIsWildcard bool, mergeCache *Doub/;"	f	package:antlr	typeref:typename:PredictionContext
message	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	message        string$/;"	m	struct:antlr.BaseRecognitionException	typeref:typename:string
methodMap	vendor/github.com/go-chi/chi/tree.go	/^var methodMap = map[string]methodTyp{$/;"	v	package:chi
methodNotAllowed	vendor/github.com/go-chi/chi/context.go	/^	methodNotAllowed bool$/;"	m	struct:chi.Context	typeref:typename:bool
methodNotAllowedHandler	vendor/github.com/go-chi/chi/mux.go	/^	methodNotAllowedHandler http.HandlerFunc$/;"	m	struct:chi.Mux	typeref:typename:http.HandlerFunc
methodNotAllowedHandler	vendor/github.com/go-chi/chi/mux.go	/^func methodNotAllowedHandler(w http.ResponseWriter, r *http.Request) {$/;"	f	package:chi
methodTyp	vendor/github.com/go-chi/chi/tree.go	/^type methodTyp int$/;"	t	package:chi	typeref:typename:int
methodTypString	vendor/github.com/go-chi/chi/tree.go	/^func methodTypString(method methodTyp) string {$/;"	f	package:chi	typeref:typename:string
middlewareAuth	middleware_auth.go	/^func (cfg *apiConfig) middlewareAuth(handler authedHandler) http.HandlerFunc {$/;"	f	unknown:main.apiConfig	typeref:typename:http.HandlerFunc
middlewares	vendor/github.com/go-chi/chi/mux.go	/^	middlewares []func(http.Handler) http.Handler$/;"	m	struct:chi.Mux	typeref:typename:[]func(http.Handler) http.Handler
min	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func min(a, b int) int {$/;"	f	package:antlr	typeref:typename:int
minLen	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func (b *BitSet) minLen() int {$/;"	f	struct:antlr.BitSet	typeref:typename:int
minMatchLength	vendor/github.com/klauspost/compress/flate/deflate.go	/^	minMatchLength   = 4   \/\/ The smallest match that the compressor looks for$/;"	c	package:flate
minOffsetSize	vendor/github.com/klauspost/compress/flate/deflate.go	/^	minOffsetSize    = 1   \/\/ The shortest offset that makes any sense$/;"	c	package:flate
minValue	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func (b *BitSet) minValue() int {$/;"	f	struct:antlr.BitSet	typeref:typename:int
mode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	mode                   int$/;"	m	struct:antlr.BaseLexer	typeref:typename:int
mode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	mode int$/;"	m	struct:antlr.LexerModeAction	typeref:typename:int
mode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	mode int$/;"	m	struct:antlr.LexerPushModeAction	typeref:typename:int
mode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	mode               int$/;"	m	struct:antlr.LexerATNSimulator	typeref:typename:int
modeNameToStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^	modeNameToStartState map[string]*TokensStartState$/;"	m	struct:antlr.ATN	typeref:typename:map[string]*TokensStartState
modeNames	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^	modeNames    []string$/;"	m	struct:sqliteparser.SQLiteLexer	typeref:typename:[]string
modeStack	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	modeStack              IntStack$/;"	m	struct:antlr.BaseLexer	typeref:typename:IntStack
modeToStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^	modeToStartState []*TokensStartState$/;"	m	struct:antlr.ATN	typeref:typename:[]*TokensStartState
moreBits	vendor/github.com/klauspost/compress/flate/inflate.go	/^func (f *decompressor) moreBits() error {$/;"	f	struct:flate.decompressor	typeref:typename:error
msgReadLimit	vendor/nhooyr.io/websocket/ws_js.go	/^	msgReadLimit xsync.Int64$/;"	m	struct:websocket.Conn	typeref:typename:xsync.Int64
msgReader	vendor/nhooyr.io/websocket/conn_notjs.go	/^	msgReader         *msgReader$/;"	m	struct:websocket.Conn	typeref:typename:*msgReader
msgReader	vendor/nhooyr.io/websocket/read.go	/^type msgReader struct {$/;"	s	package:websocket
msgType	vendor/nhooyr.io/websocket/netconn.go	/^	msgType MessageType$/;"	m	struct:websocket.netConn	typeref:typename:MessageType
msgWriter	vendor/nhooyr.io/websocket/write.go	/^type msgWriter struct {$/;"	s	package:websocket
msgWriterState	vendor/nhooyr.io/websocket/conn_notjs.go	/^	msgWriterState *msgWriterState$/;"	m	struct:websocket.Conn	typeref:typename:*msgWriterState
msgWriterState	vendor/nhooyr.io/websocket/write.go	/^type msgWriterState struct {$/;"	s	package:websocket
mu	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^	mu      sync.Mutex$/;"	m	struct:antlr.ATN	typeref:typename:sync.Mutex
mu	vendor/nhooyr.io/websocket/conn_notjs.go	/^type mu struct {$/;"	s	package:websocket
mu	vendor/nhooyr.io/websocket/write.go	/^	mu      *mu$/;"	m	struct:websocket.msgWriterState	typeref:typename:*mu
murmurFinish	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func murmurFinish(h int, numberOfWords int) int {$/;"	f	package:antlr	typeref:typename:int
murmurInit	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func murmurInit(seed int) int {$/;"	f	package:antlr	typeref:typename:int
murmurUpdate	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func murmurUpdate(h int, value int) int {$/;"	f	package:antlr	typeref:typename:int
mw	vendor/nhooyr.io/websocket/write.go	/^	mw     *msgWriterState$/;"	m	struct:websocket.msgWriter	typeref:typename:*msgWriterState
n	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^	n         int \/\/ How many elements in set$/;"	m	struct:antlr.array2DHashSet	typeref:typename:int
n	vendor/github.com/klauspost/compress/flate/token.go	/^	n         uint16 \/\/ Must be able to contain maxStoreBlockSize$/;"	m	struct:flate.tokens	typeref:typename:uint16
n	vendor/nhooyr.io/websocket/read.go	/^	n     int64$/;"	m	struct:websocket.limitReader	typeref:typename:int64
nFilled	vendor/github.com/klauspost/compress/flate/token.go	/^	nFilled   int$/;"	m	struct:flate.tokens	typeref:typename:int
name	sql/schema/001_users.sql	/^    name TEXT NOT NULL,$/;"	E	table:users
name	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/input_stream.go	/^	name  string$/;"	m	struct:antlr.InputStream	typeref:typename:string
name	vendor/github.com/go-chi/chi/context.go	/^	name string$/;"	m	struct:chi.contextKey	typeref:typename:string
name	vendor/nhooyr.io/websocket/accept.go	/^	name   string$/;"	m	struct:websocket.websocketExtension	typeref:typename:string
nameField	static/index.html	/^        <input id="nameField" type="text" placeholder="Enter your name">$/;"	I
named	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^	named      map[string]any$/;"	m	struct:shared.Params	typeref:typename:map[string]any
namedParam	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^type namedParam struct {$/;"	s	package:ws
namedParameters	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^	namedParameters paramsType = iota$/;"	c	package:shared	typeref:type:paramsType
nb	vendor/github.com/klauspost/compress/flate/inflate.go	/^	nb    uint$/;"	m	struct:flate.decompressor	typeref:typename:uint
nbits	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	nbits           uint8$/;"	m	struct:flate.huffmanBitWriter	typeref:typename:uint8
nbytes	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	nbytes          uint8$/;"	m	struct:flate.huffmanBitWriter	typeref:typename:uint8
needed	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^	needed int32$/;"	m	struct:flate.levelInfo	typeref:typename:int32
netConn	vendor/nhooyr.io/websocket/netconn.go	/^type netConn struct {$/;"	s	package:websocket
net_url	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^	net_url "net\/url"$/;"	P	package:net/url
newArray2DHashSet	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^func newArray2DHashSet($/;"	f	package:antlr	typeref:typename:*array2DHashSet
newArray2DHashSetWithCap	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^func newArray2DHashSetWithCap($/;"	f	package:antlr	typeref:typename:*array2DHashSet
newConn	vendor/nhooyr.io/websocket/conn_notjs.go	/^func newConn(cfg connConfig) *Conn {$/;"	f	package:websocket	typeref:typename:*Conn
newFastEnc	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^func newFastEnc(level int) fastEnc {$/;"	f	package:flate	typeref:typename:fastEnc
newHuffmanBitWriter	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func newHuffmanBitWriter(w io.Writer) *huffmanBitWriter {$/;"	f	package:flate	typeref:typename:*huffmanBitWriter
newHuffmanEncoder	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^func newHuffmanEncoder(size int) *huffmanEncoder {$/;"	f	package:flate	typeref:typename:*huffmanEncoder
newIDPool	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^func newIDPool() *idPool {$/;"	f	package:ws	typeref:typename:*idPool
newLimitReader	vendor/nhooyr.io/websocket/read.go	/^func newLimitReader(c *Conn, r io.Reader, limit int64) *limitReader {$/;"	f	package:websocket	typeref:typename:*limitReader
newMsgReader	vendor/nhooyr.io/websocket/read.go	/^func newMsgReader(c *Conn) *msgReader {$/;"	f	package:websocket	typeref:typename:*msgReader
newMsgWriterState	vendor/nhooyr.io/websocket/write.go	/^func newMsgWriterState(c *Conn) *msgWriterState {$/;"	f	package:websocket	typeref:typename:*msgWriterState
newMu	vendor/nhooyr.io/websocket/conn_notjs.go	/^func newMu(c *Conn) *mu {$/;"	f	package:websocket	typeref:typename:*mu
newNoteContent	static/index.html	/^        <textarea id="newNoteContent"><\/textarea>$/;"	I
newRandomFromPool	vendor/github.com/google/uuid/version4.go	/^func newRandomFromPool() (UUID, error) {$/;"	f	package:uuid	typeref:typename:(UUID, error)
new_column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	new_column_name IColumn_nameContext$/;"	m	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:IColumn_nameContext
new_table_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	new_table_name  ITable_nameContext$/;"	m	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:ITable_nameContext
newhcode	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^func newhcode(code uint16, length uint8) hcode {$/;"	f	package:flate	typeref:typename:hcode
nextBlock	vendor/github.com/klauspost/compress/flate/inflate.go	/^func (f *decompressor) nextBlock() {$/;"	f	struct:flate.decompressor
nextCharFreq	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^	nextCharFreq int32$/;"	m	struct:flate.levelInfo	typeref:typename:int32
nextPairFreq	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^	nextPairFreq int32$/;"	m	struct:flate.levelInfo	typeref:typename:int32
nextPowerOfTwo	vendor/golang.org/x/exp/slices/sort.go	/^func nextPowerOfTwo(length int) uint {$/;"	f	package:slices	typeref:typename:uint
nextRoutePath	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) nextRoutePath(rctx *Context) string {$/;"	f	struct:chi.Mux	typeref:typename:string
nice	vendor/github.com/klauspost/compress/flate/deflate.go	/^	good, lazy, nice, chain, fastSkipHashing, level int$/;"	m	struct:flate.compressionLevel	typeref:typename:int
noEOF	vendor/github.com/klauspost/compress/flate/inflate.go	/^func noEOF(e error) error {$/;"	f	package:flate	typeref:typename:error
noViableAlt	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) noViableAlt(input TokenStream, outerContext ParserRuleContext, conf/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:*NoViableAltException
node	vendor/github.com/go-chi/chi/tree.go	/^type node struct {$/;"	s	package:chi
nodeID	vendor/github.com/google/uuid/node.go	/^	nodeID [6]byte \/\/ hardware for version 1 UUIDs$/;"	v	package:uuid	typeref:typename:[6]byte
nodeMu	vendor/github.com/google/uuid/node.go	/^	nodeMu sync.Mutex$/;"	v	package:uuid	typeref:typename:sync.Mutex
nodeTyp	vendor/github.com/go-chi/chi/tree.go	/^type nodeTyp uint8$/;"	t	package:chi	typeref:typename:uint8
nodes	vendor/github.com/go-chi/chi/tree.go	/^type nodes []*node$/;"	t	package:chi	typeref:typename:[]*node
nonGreedy	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	nonGreedy bool$/;"	m	struct:antlr.BaseDecisionState	typeref:typename:bool
notFoundHandler	vendor/github.com/go-chi/chi/mux.go	/^	notFoundHandler http.HandlerFunc$/;"	m	struct:chi.Mux	typeref:typename:http.HandlerFunc
note	sql/schema/002_notes.sql	/^    note TEXT NOT NULL,$/;"	E	table:notes
noteSection	static/index.html	/^    <div id="noteSection" class="section" style="display: none;">$/;"	I
notes	sql/schema/002_notes.sql	/^CREATE TABLE notes ($/;"	t
notes	static/index.html	/^        <div id="notes"><\/div>$/;"	I
notifyListeners	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) notifyListeners(e RecognitionException) {$/;"	f	struct:antlr.BaseLexer
ntCatchAll	vendor/github.com/go-chi/chi/tree.go	/^	ntCatchAll                \/\/ \/api\/v1\/*$/;"	c	package:chi
ntParam	vendor/github.com/go-chi/chi/tree.go	/^	ntParam                   \/\/ \/{user}$/;"	c	package:chi
ntRegexp	vendor/github.com/go-chi/chi/tree.go	/^	ntRegexp                  \/\/ \/{id:[0-9]+}$/;"	c	package:chi
ntStatic	vendor/github.com/go-chi/chi/tree.go	/^	ntStatic   nodeTyp = iota \/\/ \/home$/;"	c	package:chi	typeref:type:nodeTyp
numCodes	vendor/github.com/klauspost/compress/flate/inflate.go	/^	numCodes   = 19 \/\/ number of codes in Huffman meta-code$/;"	c	package:flate
numEdges	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^func (d *DFAState) numEdges() int {$/;"	f	struct:antlr.DFAState	typeref:typename:int
numInput	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^	numInput int$/;"	m	struct:hranaV2.hranaV2Stmt	typeref:typename:int
numstates	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa.go	/^	numstates int$/;"	m	struct:antlr.DFA	typeref:typename:int
object	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	object antlr.Token$/;"	m	struct:sqliteparser.Drop_stmtContext	typeref:typename:antlr.Token
offHist	vendor/github.com/klauspost/compress/flate/token.go	/^	offHist   [32]uint16  \/\/ offset codes$/;"	m	struct:flate.tokens	typeref:typename:[32]uint16
offendingState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	offendingState int$/;"	m	struct:antlr.BaseRecognitionException	typeref:typename:int
offendingToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	offendingToken Token$/;"	m	struct:antlr.BaseRecognitionException	typeref:typename:Token
offendingToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	offendingToken Token$/;"	m	struct:antlr.NoViableAltException	typeref:typename:Token
offset	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	offset              int$/;"	m	struct:antlr.LexerIndexedCustomAction	typeref:typename:int
offset	vendor/github.com/klauspost/compress/flate/deflate.go	/^	offset         int$/;"	m	struct:flate.advancedState	typeref:typename:int
offset	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	offset int32$/;"	m	struct:flate.tableEntry	typeref:typename:int32
offset	vendor/github.com/klauspost/compress/flate/token.go	/^func (t token) offset() uint32 { return uint32(t) & offsetMask }$/;"	f	type:flate.token	typeref:typename:uint32
offsetCode	vendor/github.com/klauspost/compress/flate/token.go	/^func offsetCode(off uint32) uint32 {$/;"	f	package:flate	typeref:typename:uint32
offsetCodeCount	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	offsetCodeCount = 30$/;"	c	package:flate
offsetCodes	vendor/github.com/klauspost/compress/flate/token.go	/^var offsetCodes = [256]uint32{$/;"	v	package:flate
offsetCodes14	vendor/github.com/klauspost/compress/flate/token.go	/^var offsetCodes14 = [256]uint32{$/;"	v	package:flate
offsetCombined	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^var offsetCombined = [32]uint32{}$/;"	v	package:flate
offsetEncoding	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	offsetEncoding  *huffmanEncoder$/;"	m	struct:flate.huffmanBitWriter	typeref:typename:*huffmanEncoder
offsetExtraBits	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^var offsetExtraBits = [32]int8{$/;"	v	package:flate
offsetExtraBitsMinCode	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^const offsetExtraBitsMinCode = 4$/;"	c	package:flate
offsetFreq	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	offsetFreq         [32]uint16$/;"	m	struct:flate.huffmanBitWriter	typeref:typename:[32]uint16
offsetMask	vendor/github.com/klauspost/compress/flate/token.go	/^	offsetMask          = 1<<lengthShift - 1$/;"	c	package:flate
old_column_name	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	old_column_name IColumn_nameContext$/;"	m	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:IColumn_nameContext
opBinary	vendor/nhooyr.io/websocket/frame.go	/^	opBinary$/;"	c	package:websocket
opClose	vendor/nhooyr.io/websocket/frame.go	/^	opClose$/;"	c	package:websocket
opContinuation	vendor/nhooyr.io/websocket/frame.go	/^	opContinuation opcode = iota$/;"	c	package:websocket	typeref:type:opcode
opPing	vendor/nhooyr.io/websocket/frame.go	/^	opPing$/;"	c	package:websocket
opPong	vendor/nhooyr.io/websocket/frame.go	/^	opPong$/;"	c	package:websocket
opText	vendor/nhooyr.io/websocket/frame.go	/^	opText$/;"	c	package:websocket
op_name	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	op_name string$/;"	m	struct:antlr.BaseRewriteOperation	typeref:typename:string
opcode	vendor/nhooyr.io/websocket/frame.go	/^	opcode opcode$/;"	m	struct:websocket.header	typeref:typename:opcode
opcode	vendor/nhooyr.io/websocket/frame.go	/^type opcode int$/;"	t	package:websocket	typeref:typename:int
opcode	vendor/nhooyr.io/websocket/write.go	/^	opcode opcode$/;"	m	struct:websocket.msgWriterState	typeref:typename:opcode
opnds	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^	opnds []SemanticContext$/;"	m	struct:antlr.AND	typeref:typename:[]SemanticContext
opnds	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^	opnds []SemanticContext$/;"	m	struct:antlr.OR	typeref:typename:[]SemanticContext
option	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^type option func(*config) error$/;"	t	package:libsql	typeref:typename:func(*config) error
optionPassthrough	vendor/github.com/go-chi/cors/cors.go	/^	optionPassthrough bool$/;"	m	struct:cors.Cors	typeref:typename:bool
options	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^	options *ATNDeserializationOptions$/;"	m	struct:antlr.ATNDeserializer	typeref:typename:*ATNDeserializationOptions
opts	vendor/nhooyr.io/websocket/compress_notjs.go	/^func (m CompressionMode) opts() *compressionOptions {$/;"	f	unknown:websocket.CompressionMode	typeref:typename:*compressionOptions
or	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func (b *BitSet) or(set *BitSet) {$/;"	f	struct:antlr.BitSet
order2LessFunc	vendor/golang.org/x/exp/slices/zsortfunc.go	/^func order2LessFunc[E any](data []E, a, b int, swaps *int, less func(a, b E) bool) (int, int) {$/;"	f	package:slices	typeref:typename:(data []E, a, b int, swaps *int, less func(a, b E) bool) (
order2Ordered	vendor/golang.org/x/exp/slices/zsortordered.go	/^func order2Ordered[E constraints.Ordered](data []E, a, b int, swaps *int) (int, int) {$/;"	f	package:slices	typeref:typename:(data []E, a, b int, swaps *int) (
outerContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^	outerContext   ParserRuleContext$/;"	m	struct:antlr.ParserATNSimulator	typeref:typename:ParserRuleContext
outermostPrecedenceReturn	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	outermostPrecedenceReturn int$/;"	m	struct:antlr.EpsilonTransition	typeref:typename:int
paramKeys	vendor/github.com/go-chi/chi/tree.go	/^	paramKeys []string$/;"	m	struct:chi.endpoint	typeref:typename:[]string
params	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^type params struct {$/;"	s	package:ws
params	vendor/nhooyr.io/websocket/accept.go	/^	params []string$/;"	m	struct:websocket.websocketExtension	typeref:typename:[]string
paramsType	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^type paramsType int$/;"	t	package:shared	typeref:typename:int
parent	vendor/github.com/go-chi/chi/mux.go	/^	parent *Mux$/;"	m	struct:chi.Mux	typeref:typename:*Mux
parentCtx	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^	parentCtx   PredictionContext$/;"	m	struct:antlr.BaseSingletonPredictionContext	typeref:typename:PredictionContext
parentCtx	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/rule_context.go	/^	parentCtx     RuleContext$/;"	m	struct:antlr.BaseRuleContext	typeref:typename:RuleContext
parentCtx	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	parentCtx RuleContext$/;"	m	struct:antlr.TerminalNodeImpl	typeref:typename:RuleContext
parentCtx	vendor/github.com/go-chi/chi/context.go	/^	parentCtx context.Context$/;"	m	struct:chi.Context	typeref:typename:context.Context
parents	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^	parents      []PredictionContext$/;"	m	struct:antlr.ArrayPredictionContext	typeref:typename:[]PredictionContext
parseBytes	vendor/github.com/joho/godotenv/parser.go	/^func parseBytes(src []byte, out map[string]string) error {$/;"	f	package:godotenv	typeref:typename:error
parseClosePayload	vendor/nhooyr.io/websocket/close_notjs.go	/^func parseClosePayload(p []byte) (CloseError, error) {$/;"	f	package:websocket	typeref:typename:(CloseError, error)
parseHeaderList	vendor/github.com/go-chi/cors/utils.go	/^func parseHeaderList(headerList string) []string {$/;"	f	package:cors	typeref:typename:[]string
parseListeners	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	parseListeners []ParseTreeListener$/;"	m	struct:antlr.BaseParser	typeref:typename:[]ParseTreeListener
parser	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^	parser         Parser$/;"	m	struct:antlr.ParserATNSimulator	typeref:typename:Parser
parser	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/trace_listener.go	/^	parser *BaseParser$/;"	m	struct:antlr.TraceListener	typeref:typename:*BaseParser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser          antlr.Parser$/;"	m	struct:sqliteparser.Alter_table_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser      antlr.Parser$/;"	m	struct:sqliteparser.Select_coreContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser     antlr.Parser$/;"	m	struct:sqliteparser.Create_table_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Aggregate_funcContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Aggregate_function_invocationContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.AliasContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Analyze_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Any_nameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Asc_descContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Attach_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Base_window_nameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Begin_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Collation_nameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Column_aliasContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Column_constraintContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Column_defContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Column_nameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Column_name_listContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Commit_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Common_table_expressionContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Common_table_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Compound_operatorContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Compound_select_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Conflict_clauseContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Create_index_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Create_trigger_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Create_view_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Create_virtual_table_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Cte_table_nameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Default_valueContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Delete_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Delete_stmt_limitedContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Detach_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Drop_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Error_messageContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.ExprContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Expr_asc_descContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Factored_select_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.FilenameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Filter_clauseContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Foreign_key_clauseContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Foreign_tableContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Frame_clauseContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Frame_leftContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Frame_rightContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Frame_singleContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Frame_specContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Function_nameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Index_nameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Indexed_columnContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Initial_selectContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Insert_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Join_clauseContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Join_constraintContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Join_operatorContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.KeywordContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Limit_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Literal_valueContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Module_argumentContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Module_nameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.NameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.OffsetContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Order_by_exprContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Order_by_expr_asc_descContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Order_by_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Ordering_termContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Over_clauseContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.ParseContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Partition_byContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Pragma_nameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Pragma_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Pragma_valueContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Qualified_table_nameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Raise_functionContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Recursive_cteContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Recursive_selectContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Reindex_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Release_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Result_columnContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Returning_clauseContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Rollback_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Savepoint_nameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Savepoint_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Schema_nameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Select_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Signed_numberContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Simple_funcContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Simple_function_invocationContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Simple_select_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Sql_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Sql_stmt_listContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Table_aliasContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Table_constraintContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Table_function_nameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Table_nameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Table_or_index_nameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Table_or_subqueryContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Transaction_nameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Trigger_nameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Type_nameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Unary_operatorContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Update_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Update_stmt_limitedContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Upsert_clauseContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Vacuum_stmtContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Value_rowContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Values_clauseContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.View_nameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Window_defnContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Window_functionContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Window_function_invocationContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.Window_nameContext	typeref:typename:antlr.Parser
parser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	parser antlr.Parser$/;"	m	struct:sqliteparser.With_clauseContext	typeref:typename:antlr.Parser
partialInsertionSortLessFunc	vendor/golang.org/x/exp/slices/zsortfunc.go	/^func partialInsertionSortLessFunc[E any](data []E, a, b int, less func(a, b E) bool) bool {$/;"	f	package:slices	typeref:typename:(data []E, a, b int, less func(a, b E) bool) bool
partialInsertionSortOrdered	vendor/golang.org/x/exp/slices/zsortordered.go	/^func partialInsertionSortOrdered[E constraints.Ordered](data []E, a, b int) bool {$/;"	f	package:slices	typeref:typename:(data []E, a, b int) bool
partitionEqualLessFunc	vendor/golang.org/x/exp/slices/zsortfunc.go	/^func partitionEqualLessFunc[E any](data []E, a, b, pivot int, less func(a, b E) bool) (newpivot /;"	f	package:slices	typeref:typename:(data []E, a, b, pivot int, less func(a, b E) bool) (
partitionEqualOrdered	vendor/golang.org/x/exp/slices/zsortordered.go	/^func partitionEqualOrdered[E constraints.Ordered](data []E, a, b, pivot int) (newpivot int) {$/;"	f	package:slices	typeref:typename:(data []E, a, b, pivot int) (
partitionLessFunc	vendor/golang.org/x/exp/slices/zsortfunc.go	/^func partitionLessFunc[E any](data []E, a, b, pivot int, less func(a, b E) bool) (newpivot int, /;"	f	package:slices	typeref:typename:(data []E, a, b, pivot int, less func(a, b E) bool) (
partitionOrdered	vendor/golang.org/x/exp/slices/zsortordered.go	/^func partitionOrdered[E constraints.Ordered](data []E, a, b, pivot int) (newpivot int, alreadyPa/;"	f	package:slices	typeref:typename:(data []E, a, b, pivot int) (
passedThroughNonGreedyDecision	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^	passedThroughNonGreedyDecision bool$/;"	m	struct:antlr.LexerATNConfig	typeref:typename:bool
patNextSegment	vendor/github.com/go-chi/chi/tree.go	/^func patNextSegment(pattern string) (nodeTyp, string, string, byte, int, int) {$/;"	f	package:chi	typeref:typename:(nodeTyp, string, string, byte, int, int)
patParamKeys	vendor/github.com/go-chi/chi/tree.go	/^func patParamKeys(pattern string) []string {$/;"	f	package:chi	typeref:typename:[]string
pattern	vendor/github.com/go-chi/chi/tree.go	/^	pattern string$/;"	m	struct:chi.endpoint	typeref:typename:string
payloadLength	vendor/nhooyr.io/websocket/frame.go	/^	payloadLength int64$/;"	m	struct:websocket.header	typeref:typename:int64
payloadLength	vendor/nhooyr.io/websocket/read.go	/^	payloadLength int64$/;"	m	struct:websocket.msgReader	typeref:typename:int64
pdqsortLessFunc	vendor/golang.org/x/exp/slices/zsortfunc.go	/^func pdqsortLessFunc[E any](data []E, a, b, limit int, less func(a, b E) bool) {$/;"	f	package:slices	typeref:typename:(data []E, a, b, limit int, less func(a, b E) bool)
pdqsortOrdered	vendor/golang.org/x/exp/slices/zsortordered.go	/^func pdqsortOrdered[E constraints.Ordered](data []E, a, b, limit int) {$/;"	f	package:slices	typeref:typename:(data []E, a, b, limit int)
ping	vendor/nhooyr.io/websocket/conn_notjs.go	/^func (c *Conn) ping(ctx context.Context, p string) error {$/;"	f	struct:websocket.Conn	typeref:typename:error
pingCounter	vendor/nhooyr.io/websocket/conn_notjs.go	/^	pingCounter   int32$/;"	m	struct:websocket.Conn	typeref:typename:int32
pool	vendor/github.com/go-chi/chi/mux.go	/^	pool *sync.Pool$/;"	m	struct:chi.Mux	typeref:typename:*sync.Pool
pool	vendor/github.com/google/uuid/uuid.go	/^	pool        [randPoolSize]byte \/\/ protected with poolMu$/;"	v	package:uuid	typeref:typename:[randPoolSize]byte
poolEnabled	vendor/github.com/google/uuid/uuid.go	/^	poolEnabled = false$/;"	v	package:uuid
poolMu	vendor/github.com/google/uuid/uuid.go	/^	poolMu      sync.Mutex$/;"	v	package:uuid	typeref:typename:sync.Mutex
poolPos	vendor/github.com/google/uuid/uuid.go	/^	poolPos     = randPoolSize     \/\/ protected with poolMu$/;"	v	package:uuid
pos	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^	pos     int$/;"	m	struct:antlr.ATNDeserializer	typeref:typename:int
positional	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^	positional []any$/;"	m	struct:shared.Params	typeref:typename:[]any
positionalParameters	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^	positionalParameters$/;"	c	package:shared
precedence	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^	precedence int$/;"	m	struct:antlr.PrecedencePredicate	typeref:typename:int
precedence	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	precedence int$/;"	m	struct:antlr.PrecedencePredicateTransition	typeref:typename:int
precedence	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	ruleIndex, precedence int$/;"	m	struct:antlr.RuleTransition	typeref:typename:int
precedenceDfa	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa.go	/^	precedenceDfa bool$/;"	m	struct:antlr.DFA	typeref:typename:bool
precedenceFilterSuppressed	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^	precedenceFilterSuppressed bool$/;"	m	struct:antlr.BaseATNConfig	typeref:typename:bool
precedenceRuleDecision	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	precedenceRuleDecision bool$/;"	m	struct:antlr.StarLoopEntryState	typeref:typename:bool
precedenceStack	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	precedenceStack IntStack$/;"	m	struct:antlr.BaseParser	typeref:typename:IntStack
precedenceTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) precedenceTransition(config ATNConfig,$/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:*BaseATNConfig
pred	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^	pred SemanticContext$/;"	m	struct:antlr.PredPrediction	typeref:typename:SemanticContext
predIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^	predIndex      int$/;"	m	struct:antlr.Predicate	typeref:typename:int
predIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	ruleIndex, actionIndex, predIndex int$/;"	m	struct:antlr.ActionTransition	typeref:typename:int
predIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	ruleIndex, predIndex int$/;"	m	struct:antlr.PredicateTransition	typeref:typename:int
predTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) predTransition(config ATNConfig, pt *PredicateTransition, collectPr/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:*BaseATNConfig
predicate	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	predicate      string$/;"	m	struct:antlr.FailedPredicateException	typeref:typename:string
predicateDFAState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) predicateDFAState(dfaState *DFAState, decisionState DecisionState) /;"	f	struct:antlr.ParserATNSimulator
predicateIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	predicateIndex int$/;"	m	struct:antlr.FailedPredicateException	typeref:typename:int
predicates	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^	predicates []*PredPrediction$/;"	m	struct:antlr.DFAState	typeref:typename:[]*PredPrediction
prediction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^	prediction int$/;"	m	struct:antlr.DFAState	typeref:typename:int
predictionContextFromRuleContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^func predictionContextFromRuleContext(a *ATN, outerContext RuleContext) PredictionContext {$/;"	f	package:antlr	typeref:typename:PredictionContext
predictionMode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	predictionMode     int$/;"	m	struct:antlr.LexerATNSimulator	typeref:typename:int
predictionMode	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^	predictionMode int$/;"	m	struct:antlr.ParserATNSimulator	typeref:typename:int
prefix	vendor/github.com/go-chi/chi/tree.go	/^	prefix string$/;"	m	struct:chi.node	typeref:typename:string
prefix	vendor/github.com/go-chi/cors/utils.go	/^	prefix string$/;"	m	struct:cors.wildcard	typeref:typename:string
prefixDoubleQuote	vendor/github.com/joho/godotenv/parser.go	/^	prefixDoubleQuote = '"'$/;"	c	package:godotenv
prefixSingleQuote	vendor/github.com/joho/godotenv/parser.go	/^	prefixSingleQuote = '\\''$/;"	c	package:godotenv
prevAccept	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	prevAccept         *SimState$/;"	m	struct:antlr.LexerATNSimulator	typeref:typename:*SimState
previousTokenOnChannel	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) previousTokenOnChannel(i, channel int) int {$/;"	f	struct:antlr.CommonTokenStream	typeref:typename:int
prime3bytes	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	prime3bytes = 506832829$/;"	c	package:flate
prime4bytes	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	prime4bytes = 2654435761$/;"	c	package:flate
prime5bytes	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	prime5bytes = 889523592379$/;"	c	package:flate
prime6bytes	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	prime6bytes = 227718039650203$/;"	c	package:flate
prime7bytes	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	prime7bytes = 58295818150454627$/;"	c	package:flate
prime8bytes	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	prime8bytes = 0xcf1bbcdcb7a56463$/;"	c	package:flate
programs	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	programs                   map[string][]RewriteOperation$/;"	m	struct:antlr.TokenStreamRewriter	typeref:typename:map[string][]RewriteOperation
proxy	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^	proxy     *string$/;"	m	struct:libsql.config	typeref:typename:*string
put	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func (a *AltDict) put(key string, value interface{}) {$/;"	f	struct:antlr.AltDict
putBufioReader	vendor/nhooyr.io/websocket/dial.go	/^func putBufioReader(br *bufio.Reader) {$/;"	f	package:websocket
putBufioWriter	vendor/nhooyr.io/websocket/dial.go	/^func putBufioWriter(bw *bufio.Writer) {$/;"	f	package:websocket
putFlateReader	vendor/nhooyr.io/websocket/compress_notjs.go	/^func putFlateReader(fr io.Reader) {$/;"	f	package:websocket
putFlateReader	vendor/nhooyr.io/websocket/read.go	/^func (mr *msgReader) putFlateReader() {$/;"	f	unknown:websocket.msgReader
query	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^	query string$/;"	m	struct:ws.stmt	typeref:typename:string
quickSort	vendor/github.com/klauspost/compress/flate/huffman_sortByLiteral.go	/^func quickSort(data []literalNode, a, b, maxDepth int) {$/;"	f	package:flate
quickSortByFreq	vendor/github.com/klauspost/compress/flate/huffman_sortByFreq.go	/^func quickSortByFreq(data []literalNode, a, b, maxDepth int) {$/;"	f	package:flate
r	vendor/github.com/klauspost/compress/flate/inflate.go	/^	r       Reader$/;"	m	struct:flate.decompressor	typeref:typename:Reader
r	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^	r *hrana.BatchResult$/;"	m	struct:hranaV2.BatchResultRowsProvider	typeref:typename:*hrana.BatchResult
r	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^	r *hrana.StmtResult$/;"	m	struct:hranaV2.StmtResultRowsProvider	typeref:typename:*hrana.StmtResult
r	vendor/nhooyr.io/websocket/read.go	/^	r     io.Reader$/;"	m	struct:websocket.limitReader	typeref:typename:io.Reader
randPoolSize	vendor/github.com/google/uuid/uuid.go	/^const randPoolSize = 16 * 16$/;"	c	package:uuid
rander	vendor/github.com/google/uuid/uuid.go	/^	rander      = rand.Reader \/\/ random function$/;"	v	package:uuid
randomBits	vendor/github.com/google/uuid/util.go	/^func randomBits(b []byte) {$/;"	f	package:uuid
rdPos	vendor/github.com/klauspost/compress/flate/dict_decoder.go	/^	rdPos int  \/\/ Have emitted hist[:rdPos] already$/;"	m	struct:flate.dictDecoder	typeref:typename:int
reachesIntoOuterContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^	reachesIntoOuterContext    int$/;"	m	struct:antlr.BaseATNConfig	typeref:typename:int
read	vendor/nhooyr.io/websocket/read.go	/^func (mr *msgReader) read(p []byte) (int, error) {$/;"	f	struct:websocket.msgReader	typeref:typename:(int, error)
read	vendor/nhooyr.io/websocket/ws_js.go	/^func (c *Conn) read(ctx context.Context) (MessageType, []byte, error) {$/;"	f	struct:websocket.Conn	typeref:typename:(MessageType, []byte, error)
read	vendor/nhooyr.io/websocket/wsjson/wsjson.go	/^func read(ctx context.Context, c *websocket.Conn, v interface{}) (err error) {$/;"	f	package:wsjson	typeref:typename:(err error)
readATN	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func (a *ATNDeserializer) readATN() *ATN {$/;"	f	struct:antlr.ATNDeserializer	typeref:typename:*ATN
readBuf	vendor/nhooyr.io/websocket/ws_js.go	/^	readBuf    []wsjs.MessageEvent$/;"	m	struct:websocket.Conn	typeref:typename:[]wsjs.MessageEvent
readBufMu	vendor/nhooyr.io/websocket/ws_js.go	/^	readBufMu  sync.Mutex$/;"	m	struct:websocket.Conn	typeref:typename:sync.Mutex
readCloseFrameErr	vendor/nhooyr.io/websocket/conn_notjs.go	/^	readCloseFrameErr error$/;"	m	struct:websocket.Conn	typeref:typename:error
readContext	vendor/nhooyr.io/websocket/netconn.go	/^	readContext context.Context$/;"	m	struct:websocket.netConn	typeref:typename:context.Context
readControlBuf	vendor/nhooyr.io/websocket/conn_notjs.go	/^	readControlBuf    [maxControlPayload]byte$/;"	m	struct:websocket.Conn	typeref:typename:[maxControlPayload]byte
readDecisions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func (a *ATNDeserializer) readDecisions(atn *ATN) {$/;"	f	struct:antlr.ATNDeserializer
readEdges	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func (a *ATNDeserializer) readEdges(atn *ATN, sets []*IntervalSet) {$/;"	f	struct:antlr.ATNDeserializer
readFile	vendor/github.com/joho/godotenv/godotenv.go	/^func readFile(filename string) (envMap map[string]string, err error) {$/;"	f	package:godotenv	typeref:typename:(envMap map[string]string, err error)
readFlush	vendor/github.com/klauspost/compress/flate/dict_decoder.go	/^func (dd *dictDecoder) readFlush() []byte {$/;"	f	struct:flate.dictDecoder	typeref:typename:[]byte
readFrameHeader	vendor/nhooyr.io/websocket/frame.go	/^func readFrameHeader(r *bufio.Reader, readBuf []byte) (h header, err error) {$/;"	f	package:websocket	typeref:typename:(h header, err error)
readFrameHeader	vendor/nhooyr.io/websocket/read.go	/^func (c *Conn) readFrameHeader(ctx context.Context) (header, error) {$/;"	f	unknown:websocket.Conn	typeref:typename:(header, error)
readFramePayload	vendor/nhooyr.io/websocket/read.go	/^func (c *Conn) readFramePayload(ctx context.Context, p []byte) (int, error) {$/;"	f	unknown:websocket.Conn	typeref:typename:(int, error)
readFunc	vendor/nhooyr.io/websocket/read.go	/^	readFunc readerFunc$/;"	m	struct:websocket.msgReader	typeref:typename:readerFunc
readHeaderBuf	vendor/nhooyr.io/websocket/conn_notjs.go	/^	readHeaderBuf     [8]byte$/;"	m	struct:websocket.Conn	typeref:typename:[8]byte
readHuffman	vendor/github.com/klauspost/compress/flate/inflate.go	/^func (f *decompressor) readHuffman() error {$/;"	f	struct:flate.decompressor	typeref:typename:error
readInt	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func (a *ATNDeserializer) readInt() int {$/;"	f	struct:antlr.ATNDeserializer	typeref:typename:int
readLexerActions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func (a *ATNDeserializer) readLexerActions(atn *ATN) {$/;"	f	struct:antlr.ATNDeserializer
readLoop	vendor/nhooyr.io/websocket/read.go	/^func (c *Conn) readLoop(ctx context.Context) (header, error) {$/;"	f	unknown:websocket.Conn	typeref:typename:(header, error)
readModes	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func (a *ATNDeserializer) readModes(atn *ATN) {$/;"	f	struct:antlr.ATNDeserializer
readMu	vendor/nhooyr.io/websocket/conn_notjs.go	/^	readMu            *mu$/;"	m	struct:websocket.Conn	typeref:typename:*mu
readMu	vendor/nhooyr.io/websocket/netconn.go	/^	readMu sync.Mutex$/;"	m	struct:websocket.netConn	typeref:typename:sync.Mutex
readOnly	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	readOnly bool$/;"	m	struct:antlr.BaseATNConfigSet	typeref:typename:bool
readOnly	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserialization_options.go	/^	readOnly                      bool$/;"	m	struct:antlr.ATNDeserializationOptions	typeref:typename:bool
readOnly	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^	readOnly  bool$/;"	m	struct:antlr.IntervalSet	typeref:typename:bool
readOnly	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	readOnly   bool$/;"	m	struct:antlr.BaseToken	typeref:typename:bool
readRSV1Illegal	vendor/nhooyr.io/websocket/read.go	/^func (c *Conn) readRSV1Illegal(h header) bool {$/;"	f	unknown:websocket.Conn	typeref:typename:bool
readRules	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func (a *ATNDeserializer) readRules(atn *ATN) {$/;"	f	struct:antlr.ATNDeserializer
readSets	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func (a *ATNDeserializer) readSets(atn *ATN, sets []*IntervalSet) []*IntervalSet {$/;"	f	struct:antlr.ATNDeserializer	typeref:typename:[]*IntervalSet
readSignal	vendor/nhooyr.io/websocket/ws_js.go	/^	readSignal chan struct{}$/;"	m	struct:websocket.Conn	typeref:typename:chan struct{}
readStates	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func (a *ATNDeserializer) readStates(atn *ATN) {$/;"	f	struct:antlr.ATNDeserializer
readTimeout	vendor/nhooyr.io/websocket/conn_notjs.go	/^	readTimeout  chan context.Context$/;"	m	struct:websocket.Conn	typeref:typename:chan context.Context
readTimer	vendor/nhooyr.io/websocket/netconn.go	/^	readTimer   *time.Timer$/;"	m	struct:websocket.netConn	typeref:typename:*time.Timer
reader	vendor/nhooyr.io/websocket/netconn.go	/^	reader io.Reader$/;"	m	struct:websocket.netConn	typeref:typename:io.Reader
reader	vendor/nhooyr.io/websocket/read.go	/^func (c *Conn) reader(ctx context.Context) (_ MessageType, _ io.Reader, err error) {$/;"	f	unknown:websocket.Conn	typeref:typename:(_ MessageType, _ io.Reader, err error)
readerFunc	vendor/nhooyr.io/websocket/read.go	/^type readerFunc func(p []byte) (int, error)$/;"	t	package:websocket	typeref:typename:func(p []byte) (int, error)
recog	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	recog              Lexer$/;"	m	struct:antlr.LexerATNSimulator	typeref:typename:Lexer
recognizer	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	recognizer     Recognizer$/;"	m	struct:antlr.BaseRecognitionException	typeref:typename:Recognizer
reduceToSingleOperationPerIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^func reduceToSingleOperationPerIndex(rewrites []RewriteOperation) map[int]RewriteOperation {$/;"	f	package:antlr	typeref:typename:map[int]RewriteOperation
reg16SizeMask16	vendor/github.com/klauspost/compress/flate/regmask_amd64.go	/^	reg16SizeMask16 = reg8SizeMask16$/;"	c	package:flate
reg16SizeMask16	vendor/github.com/klauspost/compress/flate/regmask_other.go	/^	reg16SizeMask16 = 0xffff$/;"	c	package:flate
reg16SizeMask32	vendor/github.com/klauspost/compress/flate/regmask_amd64.go	/^	reg16SizeMask32 = reg8SizeMask32$/;"	c	package:flate
reg16SizeMask32	vendor/github.com/klauspost/compress/flate/regmask_other.go	/^	reg16SizeMask32 = 0xffff$/;"	c	package:flate
reg16SizeMask64	vendor/github.com/klauspost/compress/flate/regmask_amd64.go	/^	reg16SizeMask64 = reg8SizeMask64$/;"	c	package:flate
reg16SizeMask64	vendor/github.com/klauspost/compress/flate/regmask_other.go	/^	reg16SizeMask64 = 0xffff$/;"	c	package:flate
reg16SizeMask8	vendor/github.com/klauspost/compress/flate/regmask_amd64.go	/^	reg16SizeMask8  = reg8SizeMask8$/;"	c	package:flate
reg16SizeMask8	vendor/github.com/klauspost/compress/flate/regmask_other.go	/^	reg16SizeMask8  = 0xffff$/;"	c	package:flate
reg32SizeMask16	vendor/github.com/klauspost/compress/flate/regmask_amd64.go	/^	reg32SizeMask16 = reg8SizeMask16$/;"	c	package:flate
reg32SizeMask16	vendor/github.com/klauspost/compress/flate/regmask_other.go	/^	reg32SizeMask16 = 0xffffffff$/;"	c	package:flate
reg32SizeMask32	vendor/github.com/klauspost/compress/flate/regmask_amd64.go	/^	reg32SizeMask32 = reg8SizeMask32$/;"	c	package:flate
reg32SizeMask32	vendor/github.com/klauspost/compress/flate/regmask_other.go	/^	reg32SizeMask32 = 0xffffffff$/;"	c	package:flate
reg32SizeMask64	vendor/github.com/klauspost/compress/flate/regmask_amd64.go	/^	reg32SizeMask64 = reg8SizeMask64$/;"	c	package:flate
reg32SizeMask64	vendor/github.com/klauspost/compress/flate/regmask_other.go	/^	reg32SizeMask64 = 0xffffffff$/;"	c	package:flate
reg32SizeMask8	vendor/github.com/klauspost/compress/flate/regmask_amd64.go	/^	reg32SizeMask8  = reg8SizeMask8$/;"	c	package:flate
reg32SizeMask8	vendor/github.com/klauspost/compress/flate/regmask_other.go	/^	reg32SizeMask8  = 0xffffffff$/;"	c	package:flate
reg64SizeMask16	vendor/github.com/klauspost/compress/flate/regmask_amd64.go	/^	reg64SizeMask16 = reg8SizeMask16$/;"	c	package:flate
reg64SizeMask16	vendor/github.com/klauspost/compress/flate/regmask_other.go	/^	reg64SizeMask16 = 0xffffffffffffffff$/;"	c	package:flate
reg64SizeMask32	vendor/github.com/klauspost/compress/flate/regmask_amd64.go	/^	reg64SizeMask32 = reg8SizeMask32$/;"	c	package:flate
reg64SizeMask32	vendor/github.com/klauspost/compress/flate/regmask_other.go	/^	reg64SizeMask32 = 0xffffffffffffffff$/;"	c	package:flate
reg64SizeMask64	vendor/github.com/klauspost/compress/flate/regmask_amd64.go	/^	reg64SizeMask64 = reg8SizeMask64$/;"	c	package:flate
reg64SizeMask64	vendor/github.com/klauspost/compress/flate/regmask_other.go	/^	reg64SizeMask64 = 0xffffffffffffffff$/;"	c	package:flate
reg64SizeMask8	vendor/github.com/klauspost/compress/flate/regmask_amd64.go	/^	reg64SizeMask8  = reg8SizeMask8$/;"	c	package:flate
reg64SizeMask8	vendor/github.com/klauspost/compress/flate/regmask_other.go	/^	reg64SizeMask8  = 0xffffffffffffffff$/;"	c	package:flate
reg8SizeMask16	vendor/github.com/klauspost/compress/flate/regmask_amd64.go	/^	reg8SizeMask16 = 15$/;"	c	package:flate
reg8SizeMask16	vendor/github.com/klauspost/compress/flate/regmask_other.go	/^	reg8SizeMask16 = 0xff$/;"	c	package:flate
reg8SizeMask32	vendor/github.com/klauspost/compress/flate/regmask_amd64.go	/^	reg8SizeMask32 = 31$/;"	c	package:flate
reg8SizeMask32	vendor/github.com/klauspost/compress/flate/regmask_other.go	/^	reg8SizeMask32 = 0xff$/;"	c	package:flate
reg8SizeMask64	vendor/github.com/klauspost/compress/flate/regmask_amd64.go	/^	reg8SizeMask64 = 63$/;"	c	package:flate
reg8SizeMask64	vendor/github.com/klauspost/compress/flate/regmask_other.go	/^	reg8SizeMask64 = 0xff$/;"	c	package:flate
reg8SizeMask8	vendor/github.com/klauspost/compress/flate/regmask_amd64.go	/^	reg8SizeMask8  = 7$/;"	c	package:flate
reg8SizeMask8	vendor/github.com/klauspost/compress/flate/regmask_other.go	/^	reg8SizeMask8  = 0xff$/;"	c	package:flate
regSizeMaskUint16	vendor/github.com/klauspost/compress/flate/regmask_amd64.go	/^	regSizeMaskUint16 = reg8SizeMask16$/;"	c	package:flate
regSizeMaskUint16	vendor/github.com/klauspost/compress/flate/regmask_other.go	/^	regSizeMaskUint16 = ^uint(0)$/;"	c	package:flate
regSizeMaskUint32	vendor/github.com/klauspost/compress/flate/regmask_amd64.go	/^	regSizeMaskUint32 = reg8SizeMask32$/;"	c	package:flate
regSizeMaskUint32	vendor/github.com/klauspost/compress/flate/regmask_other.go	/^	regSizeMaskUint32 = ^uint(0)$/;"	c	package:flate
regSizeMaskUint64	vendor/github.com/klauspost/compress/flate/regmask_amd64.go	/^	regSizeMaskUint64 = reg8SizeMask64$/;"	c	package:flate
regSizeMaskUint64	vendor/github.com/klauspost/compress/flate/regmask_other.go	/^	regSizeMaskUint64 = ^uint(0)$/;"	c	package:flate
regSizeMaskUint8	vendor/github.com/klauspost/compress/flate/regmask_amd64.go	/^	regSizeMaskUint8  = reg8SizeMask8$/;"	c	package:flate
regSizeMaskUint8	vendor/github.com/klauspost/compress/flate/regmask_other.go	/^	regSizeMaskUint8  = ^uint(0)$/;"	c	package:flate
releaseOnClose	vendor/nhooyr.io/websocket/ws_js.go	/^	releaseOnClose   func()$/;"	m	struct:websocket.Conn	typeref:typename:func()
releaseOnMessage	vendor/nhooyr.io/websocket/ws_js.go	/^	releaseOnMessage func()$/;"	m	struct:websocket.Conn	typeref:typename:func()
remove	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func (b *BitSet) remove(value int) {$/;"	f	struct:antlr.BitSet
removeAllConfigsNotInRuleStopState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) removeAllConfigsNotInRuleStopState(configs ATNConfigSet, lookToEndO/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:ATNConfigSet
removeOne	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func (i *IntervalSet) removeOne(v int) {$/;"	f	struct:antlr.IntervalSet
removeParamPrefix	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^func removeParamPrefix(paramName string) (string, error) {$/;"	f	package:shared	typeref:typename:(string, error)
removeParseListeners	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) removeParseListeners() {$/;"	f	struct:antlr.BaseParser
removeRange	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func (i *IntervalSet) removeRange(v *Interval) {$/;"	f	struct:antlr.IntervalSet
removeState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^func (a *ATN) removeState(state ATNState) {$/;"	f	struct:antlr.ATN
replaceChild	vendor/github.com/go-chi/chi/tree.go	/^func (n *node) replaceChild(label, tail byte, child *node) {$/;"	f	struct:chi.node
replaceWildcards	vendor/github.com/go-chi/chi/context.go	/^func replaceWildcards(p string) string {$/;"	f	package:chi	typeref:typename:string
replicationIndex	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^	replicationIndex uint64$/;"	m	struct:hranaV2.hranaV2Conn	typeref:typename:uint64
requiresFullContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^	requiresFullContext bool$/;"	m	struct:antlr.DFAState	typeref:typename:bool
res	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^	res           *execResponse$/;"	m	struct:ws.rows	typeref:typename:*execResponse
reset	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) reset() {$/;"	f	struct:antlr.CommonTokenStream
reset	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^	reset(Parser)$/;"	n	interface:antlr.ErrorStrategy
reset	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/error_strategy.go	/^func (d *DefaultErrorStrategy) reset(recognizer Parser) {$/;"	f	struct:antlr.DefaultErrorStrategy
reset	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/input_stream.go	/^func (is *InputStream) reset() {$/;"	f	struct:antlr.InputStream
reset	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) reset() {$/;"	f	struct:antlr.BaseLexer
reset	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	reset()$/;"	n	interface:antlr.ILexerATNSimulator
reset	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (l *LexerATNSimulator) reset() {$/;"	f	struct:antlr.LexerATNSimulator
reset	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func (s *SimState) reset() {$/;"	f	struct:antlr.SimState
reset	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) reset() {$/;"	f	struct:antlr.BaseParser
reset	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) reset() {$/;"	f	struct:antlr.ParserATNSimulator
reset	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (d *compressor) reset(w io.Writer) {$/;"	f	struct:flate.compressor
reset	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) reset(writer io.Writer) {$/;"	f	struct:flate.huffmanBitWriter
reset	vendor/nhooyr.io/websocket/compress_notjs.go	/^func (tw *trimLastFourBytesWriter) reset() {$/;"	f	struct:websocket.trimLastFourBytesWriter
reset	vendor/nhooyr.io/websocket/read.go	/^func (lr *limitReader) reset(r io.Reader) {$/;"	f	struct:websocket.limitReader
reset	vendor/nhooyr.io/websocket/read.go	/^func (mr *msgReader) reset(ctx context.Context, h header) {$/;"	f	struct:websocket.msgReader
reset	vendor/nhooyr.io/websocket/write.go	/^func (mw *msgWriterState) reset(ctx context.Context, typ MessageType) error {$/;"	f	struct:websocket.msgWriterState	typeref:typename:error
resetFlate	vendor/nhooyr.io/websocket/read.go	/^func (mr *msgReader) resetFlate() {$/;"	f	unknown:websocket.msgReader
resetSimState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^func resetSimState(sim *SimState) {$/;"	f	package:antlr
resp	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^	resp map[string]interface{}$/;"	m	struct:ws.execResponse	typeref:typename:map[string]interface{}
respondWithError	json.go	/^func respondWithError(w http.ResponseWriter, code int, msg string) {$/;"	f	package:main
respondWithJSON	json.go	/^func respondWithJSON(w http.ResponseWriter, code int, payload interface{}) {$/;"	f	package:main
result	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/result.go	/^type result struct {$/;"	s	package:shared
result	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/rows.go	/^	result                rowsProvider$/;"	m	struct:shared.rows	typeref:typename:rowsProvider
result	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^type result struct {$/;"	s	package:ws
returnState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^	returnState int$/;"	m	struct:antlr.BaseSingletonPredictionContext	typeref:typename:int
returnStates	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/prediction_context.go	/^	returnStates []int$/;"	m	struct:antlr.ArrayPredictionContext	typeref:typename:[]int
reverseBits	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^func reverseBits(number uint16, bitLength byte) uint16 {$/;"	f	package:flate	typeref:typename:uint16
reverseRangeLessFunc	vendor/golang.org/x/exp/slices/zsortfunc.go	/^func reverseRangeLessFunc[E any](data []E, a, b int, less func(a, b E) bool) {$/;"	f	package:slices	typeref:typename:(data []E, a, b int, less func(a, b E) bool)
reverseRangeOrdered	vendor/golang.org/x/exp/slices/zsortordered.go	/^func reverseRangeOrdered[E constraints.Ordered](data []E, a, b int) {$/;"	f	package:slices	typeref:typename:(data []E, a, b int)
rex	vendor/github.com/go-chi/chi/tree.go	/^	rex *regexp.Regexp$/;"	m	struct:chi.node	typeref:typename:*regexp.Regexp
roffset	vendor/github.com/klauspost/compress/flate/inflate.go	/^	roffset int64$/;"	m	struct:flate.decompressor	typeref:typename:int64
rotateLessFunc	vendor/golang.org/x/exp/slices/zsortfunc.go	/^func rotateLessFunc[E any](data []E, a, m, b int, less func(a, b E) bool) {$/;"	f	package:slices	typeref:typename:(data []E, a, m, b int, less func(a, b E) bool)
rotateOrdered	vendor/golang.org/x/exp/slices/zsortordered.go	/^func rotateOrdered[E constraints.Ordered](data []E, a, m, b int) {$/;"	f	package:slices	typeref:typename:(data []E, a, m, b int)
routeHTTP	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) routeHTTP(w http.ResponseWriter, r *http.Request) {$/;"	f	struct:chi.Mux
routeParams	vendor/github.com/go-chi/chi/context.go	/^	routeParams RouteParams$/;"	m	struct:chi.Context	typeref:typename:RouteParams
routePattern	vendor/github.com/go-chi/chi/context.go	/^	routePattern string$/;"	m	struct:chi.Context	typeref:typename:string
routes	vendor/github.com/go-chi/chi/tree.go	/^func (n *node) routes() []Route {$/;"	f	struct:chi.node	typeref:typename:[]Route
rowLen	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^func (r *execResponse) rowLen(rowIdx int) int {$/;"	f	struct:ws.execResponse	typeref:typename:int
row_ROW_ID	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	row_ROW_ID antlr.Token$/;"	m	struct:sqliteparser.Create_table_stmtContext	typeref:typename:antlr.Token
rows	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/rows.go	/^type rows struct {$/;"	s	package:shared
rows	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^type rows struct {$/;"	s	package:ws
rowsCount	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^func (r *execResponse) rowsCount() int {$/;"	f	struct:ws.execResponse	typeref:typename:int
rowsProvider	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/rows.go	/^type rowsProvider interface {$/;"	i	package:shared
rsv1	vendor/nhooyr.io/websocket/frame.go	/^	rsv1   bool$/;"	m	struct:websocket.header	typeref:typename:bool
rsv2	vendor/nhooyr.io/websocket/frame.go	/^	rsv2   bool$/;"	m	struct:websocket.header	typeref:typename:bool
rsv3	vendor/nhooyr.io/websocket/frame.go	/^	rsv3   bool$/;"	m	struct:websocket.header	typeref:typename:bool
ruleIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	ruleIndex int$/;"	m	struct:antlr.BaseATNState	typeref:typename:int
ruleIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	ruleIndex      int$/;"	m	struct:antlr.FailedPredicateException	typeref:typename:int
ruleIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	ruleIndex, actionIndex int$/;"	m	struct:antlr.LexerCustomAction	typeref:typename:int
ruleIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/semantic_context.go	/^	ruleIndex      int$/;"	m	struct:antlr.Predicate	typeref:typename:int
ruleIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	ruleIndex, actionIndex, predIndex int$/;"	m	struct:antlr.ActionTransition	typeref:typename:int
ruleIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	ruleIndex, precedence int$/;"	m	struct:antlr.RuleTransition	typeref:typename:int
ruleIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	ruleIndex, predIndex int$/;"	m	struct:antlr.PredicateTransition	typeref:typename:int
ruleIndexMapCache	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^var ruleIndexMapCache = make(map[string]int)$/;"	v	package:antlr
ruleToStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^	ruleToStartState []*RuleStartState$/;"	m	struct:antlr.ATN	typeref:typename:[]*RuleStartState
ruleToStopState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^	ruleToStopState []*RuleStopState$/;"	m	struct:antlr.ATN	typeref:typename:[]*RuleStopState
ruleToTokenType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^	ruleToTokenType []int$/;"	m	struct:antlr.ATN	typeref:typename:[]int
ruleTransition	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) ruleTransition(config ATNConfig, t *RuleTransition) *BaseATNConfig /;"	f	struct:antlr.ParserATNSimulator	typeref:typename:*BaseATNConfig
rwc	vendor/nhooyr.io/websocket/conn_notjs.go	/^	rwc            io.ReadWriteCloser$/;"	m	struct:websocket.Conn	typeref:typename:io.ReadWriteCloser
rwc	vendor/nhooyr.io/websocket/conn_notjs.go	/^	rwc            io.ReadWriteCloser$/;"	m	struct:websocket.connConfig	typeref:typename:io.ReadWriteCloser
s0	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa.go	/^	s0 *DFAState$/;"	m	struct:antlr.DFA	typeref:typename:*DFAState
safeMatch	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) safeMatch() (ret int) {$/;"	f	struct:antlr.BaseLexer	typeref:typename:(ret int)
search	vendor/golang.org/x/exp/slices/sort.go	/^func search(n int, f func(int) bool) int {$/;"	f	package:slices	typeref:typename:int
secWebSocketAccept	vendor/nhooyr.io/websocket/accept.go	/^func secWebSocketAccept(secWebSocketKey string) string {$/;"	f	package:websocket	typeref:typename:string
secWebSocketKey	vendor/nhooyr.io/websocket/dial.go	/^func secWebSocketKey(rr io.Reader) (string, error) {$/;"	f	package:websocket	typeref:typename:(string, error)
selectSubprotocol	vendor/nhooyr.io/websocket/accept.go	/^func selectSubprotocol(r *http.Request, subprotocols []string) string {$/;"	f	package:websocket	typeref:typename:string
semanticContext	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^	semanticContext            SemanticContext$/;"	m	struct:antlr.BaseATNConfig	typeref:typename:SemanticContext
semctxEqInst	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/comparators.go	/^	semctxEqInst    = &ObjEqComparator[SemanticContext]{}$/;"	v	package:antlr
sendPipelineRequest	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func (h *hranaV2Conn) sendPipelineRequest(ctx context.Context, msg *hrana.PipelineRequest, strea/;"	f	struct:hranaV2.hranaV2Conn	typeref:typename:(*hrana.PipelineResponse, error)
sendPipelineRequest	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^func sendPipelineRequest(ctx context.Context, msg *hrana.PipelineRequest, url string, jwt string/;"	f	package:hranaV2	typeref:typename:(result hrana.PipelineResponse, streamClosed bool, err error)
serializationType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	serializationType int$/;"	m	struct:antlr.BaseTransition	typeref:typename:int
serializedVersion	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^const serializedVersion = 4$/;"	c	package:antlr
serverNoContextTakeover	vendor/nhooyr.io/websocket/compress_notjs.go	/^	serverNoContextTakeover bool$/;"	m	struct:websocket.compressionOptions	typeref:typename:bool
set	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func (d *DoubleDict) set(a, b int, o interface{}) {$/;"	f	struct:antlr.DoubleDict
set	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^func (h *hcode) set(code uint16, length uint8) {$/;"	f	type:flate.hcode
setBinaryType	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^func (c WebSocket) setBinaryType(typ string) {$/;"	f	struct:wsjs.WebSocket
setClockSequence	vendor/github.com/google/uuid/time.go	/^func setClockSequence(seq int) {$/;"	f	package:uuid
setCloseErr	vendor/nhooyr.io/websocket/close_notjs.go	/^func (c *Conn) setCloseErr(err error) {$/;"	f	unknown:websocket.Conn
setCloseErr	vendor/nhooyr.io/websocket/ws_js.go	/^func (c *Conn) setCloseErr(err error) {$/;"	f	struct:websocket.Conn
setCloseErrLocked	vendor/nhooyr.io/websocket/close_notjs.go	/^func (c *Conn) setCloseErrLocked(err error) {$/;"	f	unknown:websocket.Conn
setDecision	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	setDecision(int)$/;"	n	interface:antlr.DecisionState
setDecision	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (s *BaseDecisionState) setDecision(b int) {$/;"	f	struct:antlr.BaseDecisionState
setEdges	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^func (d *DFAState) setEdges(newEdges []*DFAState) {$/;"	f	struct:antlr.DFAState
setEndState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	setEndState(*BlockEndState)$/;"	n	interface:antlr.BlockStartState
setEndState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (s *BaseBlockStartState) setEndState(b *BlockEndState) {$/;"	f	struct:antlr.BaseBlockStartState
setEndpoint	vendor/github.com/go-chi/chi/tree.go	/^func (n *node) setEndpoint(method methodTyp, handler http.Handler, pattern string) {$/;"	f	struct:chi.node
setFrame	vendor/nhooyr.io/websocket/read.go	/^func (mr *msgReader) setFrame(h header) {$/;"	f	struct:websocket.msgReader
setHeader	vendor/nhooyr.io/websocket/compress_notjs.go	/^func (copts *compressionOptions) setHeader(h http.Header) {$/;"	f	struct:websocket.compressionOptions
setIthEdge	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^func (d *DFAState) setIthEdge(i int, edge *DFAState) {$/;"	f	struct:antlr.DFAState
setNodeInterface	vendor/github.com/google/uuid/node.go	/^func setNodeInterface(name string) bool {$/;"	f	package:uuid	typeref:typename:bool
setNonGreedy	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	setNonGreedy(bool)$/;"	n	interface:antlr.DecisionState
setNonGreedy	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^func (s *BaseDecisionState) setNonGreedy(b bool) {$/;"	f	struct:antlr.BaseDecisionState
setPrecedenceDfa	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa.go	/^func (d *DFA) setPrecedenceDfa(precedenceDfa bool) {$/;"	f	struct:antlr.DFA
setPrecedenceFilterSuppressed	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^	setPrecedenceFilterSuppressed(bool)$/;"	n	interface:antlr.ATNConfig
setPrecedenceFilterSuppressed	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^func (b *BaseATNConfig) setPrecedenceFilterSuppressed(v bool) {$/;"	f	struct:antlr.BaseATNConfig
setPrecedenceStartState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa.go	/^func (d *DFA) setPrecedenceStartState(precedence int, startState *DFAState) {$/;"	f	struct:antlr.DFA
setPrediction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^func (d *DFAState) setPrediction(v int) {$/;"	f	struct:antlr.DFAState
setS0	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa.go	/^func (d *DFA) setS0(s *DFAState) {$/;"	f	struct:antlr.DFA
setTarget	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	setTarget(ATNState)$/;"	n	interface:antlr.Transition
setTarget	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^func (t *BaseTransition) setTarget(s ATNState) {$/;"	f	struct:antlr.BaseTransition
setTokenFactory	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^func (b *BaseLexer) setTokenFactory(f TokenFactory) {$/;"	f	struct:antlr.BaseLexer
setTokenFactory	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^func (p *BaseParser) setTokenFactory(factory TokenFactory) {$/;"	f	struct:antlr.BaseParser
setTokenFactory	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token_source.go	/^	setTokenFactory(factory TokenFactory)$/;"	n	interface:antlr.TokenSource
setup	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^func (c *CommonTokenStream) setup() {$/;"	f	struct:antlr.CommonTokenStream
shared	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/result.go	/^package shared$/;"	p
shared	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/rows.go	/^package shared$/;"	p
shared	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/shared/statement.go	/^package shared$/;"	p
sharedContextCache	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_simulator.go	/^	sharedContextCache *PredictionContextCache$/;"	m	struct:antlr.BaseATNSimulator	typeref:typename:*PredictionContextCache
siftDown	vendor/github.com/klauspost/compress/flate/huffman_sortByLiteral.go	/^func siftDown(data []literalNode, lo, hi, first int) {$/;"	f	package:flate
siftDownByFreq	vendor/github.com/klauspost/compress/flate/huffman_sortByFreq.go	/^func siftDownByFreq(data []literalNode, lo, hi, first int) {$/;"	f	package:flate
siftDownLessFunc	vendor/golang.org/x/exp/slices/zsortfunc.go	/^func siftDownLessFunc[E any](data []E, lo, hi, first int, less func(a, b E) bool) {$/;"	f	package:slices	typeref:typename:(data []E, lo, hi, first int, less func(a, b E) bool)
siftDownOrdered	vendor/golang.org/x/exp/slices/zsortordered.go	/^func siftDownOrdered[E constraints.Ordered](data []E, lo, hi, first int) {$/;"	f	package:slices	typeref:typename:(data []E, lo, hi, first int)
size	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/input_stream.go	/^	size  int$/;"	m	struct:antlr.InputStream	typeref:typename:int
skipNever	vendor/github.com/klauspost/compress/flate/deflate.go	/^	skipNever = math.MaxInt32$/;"	c	package:flate
slTableBits	vendor/github.com/klauspost/compress/flate/stateless.go	/^	slTableBits  = 13$/;"	c	package:flate
slTableShift	vendor/github.com/klauspost/compress/flate/stateless.go	/^	slTableShift = 32 - slTableBits$/;"	c	package:flate
slTableSize	vendor/github.com/klauspost/compress/flate/stateless.go	/^	slTableSize  = 1 << slTableBits$/;"	c	package:flate
slices	vendor/golang.org/x/exp/slices/slices.go	/^package slices$/;"	p
slices	vendor/golang.org/x/exp/slices/sort.go	/^package slices$/;"	p
slices	vendor/golang.org/x/exp/slices/zsortfunc.go	/^package slices$/;"	p
slices	vendor/golang.org/x/exp/slices/zsortordered.go	/^package slices$/;"	p
slidingWindow	vendor/nhooyr.io/websocket/compress_notjs.go	/^type slidingWindow struct {$/;"	s	package:websocket
slidingWindowPool	vendor/nhooyr.io/websocket/compress_notjs.go	/^func slidingWindowPool(n int) *sync.Pool {$/;"	f	package:websocket	typeref:typename:*sync.Pool
sortByFreq	vendor/github.com/klauspost/compress/flate/huffman_sortByFreq.go	/^func sortByFreq(data []literalNode) {$/;"	f	package:flate
sortByLiteral	vendor/github.com/klauspost/compress/flate/huffman_sortByLiteral.go	/^func sortByLiteral(data []literalNode) {$/;"	f	package:flate
sortedHint	vendor/golang.org/x/exp/slices/sort.go	/^type sortedHint int \/\/ hint for pdqsort when choosing the pivot$/;"	t	package:slices	typeref:typename:int
sortedStates	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa.go	/^func (d *DFA) sortedStates() []*DFAState {$/;"	f	struct:antlr.DFA	typeref:typename:[]*DFAState
source	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	source     *TokenSourceCharStreamPair$/;"	m	struct:antlr.BaseToken	typeref:typename:*TokenSourceCharStreamPair
splitAccordingToSemanticValidity	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^func (p *ParserATNSimulator) splitAccordingToSemanticValidity(configs ATNConfigSet, outerContext/;"	f	struct:antlr.ParserATNSimulator	typeref:typename:[]ATNConfigSet
sql	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^	sql      string$/;"	m	struct:hranaV2.hranaV2Stmt	typeref:typename:string
sqlitelexerLexerInit	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^func sqlitelexerLexerInit() {$/;"	f	package:sqliteparser
sqlitelexerLexerStaticData	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^var sqlitelexerLexerStaticData struct {$/;"	v	package:sqliteparser	typeref:typename:struct { once sync.Once; serializedATN []int32; channelNames []string; modeNames []string; literalNames []string; symbolicNames []string; ruleNames []string; predictionContextCache *antlr.PredictionContextCache; atn *antlr.ATN; decisionToDFA []*antlr.DFA;}
sqliteparser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_lexer.go	/^package sqliteparser$/;"	p
sqliteparser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^package sqliteparser \/\/ SQLiteParser$/;"	p
sqliteparser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_base_listener.go	/^package sqliteparser \/\/ SQLiteParser$/;"	p
sqliteparser	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqliteparser_listener.go	/^package sqliteparser \/\/ SQLiteParser$/;"	p
sqliteparserParserInit	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^func sqliteparserParserInit() {$/;"	f	package:sqliteparser
sqliteparserParserStaticData	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^var sqliteparserParserStaticData struct {$/;"	v	package:sqliteparser	typeref:typename:struct { once sync.Once; serializedATN []int32; literalNames []string; symbolicNames []string; ruleNames []string; predictionContextCache *antlr.PredictionContextCache; atn *antlr.ATN; decisionToDFA []*antlr.DFA;}
sqliteparserutils	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparserutils/utils.go	/^package sqliteparserutils$/;"	p
stableLessFunc	vendor/golang.org/x/exp/slices/zsortfunc.go	/^func stableLessFunc[E any](data []E, n int, less func(a, b E) bool) {$/;"	f	package:slices	typeref:typename:(data []E, n int, less func(a, b E) bool)
stableOrdered	vendor/golang.org/x/exp/slices/zsortordered.go	/^func stableOrdered[E constraints.Ordered](data []E, n int) {$/;"	f	package:slices	typeref:typename:(data []E, n int)
standardEqualsFunction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func standardEqualsFunction(a Collectable[any], b Collectable[any]) bool {$/;"	f	package:antlr	typeref:typename:bool
standardHashFunction	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func standardHashFunction(a interface{}) int {$/;"	f	package:antlr	typeref:typename:int
start	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^	start, stop Token$/;"	m	struct:antlr.BaseParserRuleContext	typeref:typename:Token
start	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	start      int    \/\/ optional return -1 if not implemented.$/;"	m	struct:antlr.BaseToken	typeref:typename:int
start	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	start, stop int$/;"	m	struct:antlr.RangeTransition	typeref:typename:int
startIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	startIndex     int$/;"	m	struct:antlr.LexerNoViableAltException	typeref:typename:int
startIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_atn_simulator.go	/^	startIndex         int$/;"	m	struct:antlr.LexerATNSimulator	typeref:typename:int
startIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_atn_simulator.go	/^	startIndex     int$/;"	m	struct:antlr.ParserATNSimulator	typeref:typename:int
startState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	startState ATNState$/;"	m	struct:antlr.BlockEndState	typeref:typename:ATNState
startToken	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/errors.go	/^	startToken     Token$/;"	m	struct:antlr.NoViableAltException	typeref:typename:Token
state	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config.go	/^	state                      ATNState$/;"	m	struct:antlr.BaseATNConfig	typeref:typename:ATNState
state	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^	state     int$/;"	m	struct:antlr.BaseRecognizer	typeref:typename:int
state	vendor/github.com/klauspost/compress/flate/deflate.go	/^	state  *advancedState$/;"	m	struct:flate.compressor	typeref:typename:*advancedState
stateFactory	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func (a *ATNDeserializer) stateFactory(typeIndex, ruleIndex int) ATNState {$/;"	f	struct:antlr.ATNDeserializer	typeref:typename:ATNState
stateIsEndStateFor	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func (a *ATNDeserializer) stateIsEndStateFor(state ATNState, idx int) ATNState {$/;"	f	struct:antlr.ATNDeserializer	typeref:typename:ATNState
stateMu	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^	stateMu sync.RWMutex$/;"	m	struct:antlr.ATN	typeref:typename:sync.RWMutex
stateNumber	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	stateNumber int$/;"	m	struct:antlr.BaseATNState	typeref:typename:int
stateNumber	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_state.go	/^	stateNumber int$/;"	m	struct:antlr.DFAState	typeref:typename:int
stateType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	stateType int$/;"	m	struct:antlr.BaseATNState	typeref:typename:int
statelessEnc	vendor/github.com/klauspost/compress/flate/stateless.go	/^func statelessEnc(dst *tokens, src []byte, startAt int16) {$/;"	f	package:flate
statelessWriter	vendor/github.com/klauspost/compress/flate/stateless.go	/^type statelessWriter struct {$/;"	s	package:flate
states	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn.go	/^	states []ATNState$/;"	m	struct:antlr.ATN	typeref:typename:[]ATNState
states	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa.go	/^	states *JStore[*DFAState, *ObjEqComparator[*DFAState]]$/;"	m	struct:antlr.DFA	typeref:typename:*JStore
staticFiles	main.go	/^var staticFiles embed.FS$/;"	v	package:main	typeref:typename:embed.FS
statusReserved	vendor/nhooyr.io/websocket/close.go	/^	statusReserved StatusCode = 1004$/;"	c	package:websocket	typeref:type:StatusCode
step	vendor/github.com/klauspost/compress/flate/deflate.go	/^	step func(*compressor)             \/\/ process window$/;"	m	struct:flate.compressor	typeref:typename:func(*compressor)
step	vendor/github.com/klauspost/compress/flate/inflate.go	/^	step      func(*decompressor)$/;"	m	struct:flate.decompressor	typeref:typename:func(*decompressor)
stepState	vendor/github.com/klauspost/compress/flate/inflate.go	/^	stepState int$/;"	m	struct:flate.decompressor	typeref:typename:int
stmt	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^type stmt struct {$/;"	s	package:ws
stop	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser_rule_context.go	/^	start, stop Token$/;"	m	struct:antlr.BaseParserRuleContext	typeref:typename:Token
stop	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	stop       int    \/\/ optional return -1 if not implemented.$/;"	m	struct:antlr.BaseToken	typeref:typename:int
stop	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	start, stop int$/;"	m	struct:antlr.RangeTransition	typeref:typename:int
stopState	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	stopState        ATNState$/;"	m	struct:antlr.RuleStartState	typeref:typename:ATNState
store	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (d *compressor) store() {$/;"	f	struct:flate.compressor
storeFast	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (d *compressor) storeFast() {$/;"	f	struct:flate.compressor
storeHuff	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (d *compressor) storeHuff() {$/;"	f	struct:flate.compressor
storedSize	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) storedSize(in []byte) (int, bool) {$/;"	f	struct:flate.huffmanBitWriter	typeref:typename:(int, bool)
streamClosed	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^	streamClosed     bool$/;"	m	struct:hranaV2.hranaV2Conn	typeref:typename:bool
stringInSlice	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func stringInSlice(a string, list []string) int {$/;"	f	package:antlr	typeref:typename:int
subprotocol	vendor/nhooyr.io/websocket/conn_notjs.go	/^	subprotocol    string$/;"	m	struct:websocket.Conn	typeref:typename:string
subprotocol	vendor/nhooyr.io/websocket/conn_notjs.go	/^	subprotocol    string$/;"	m	struct:websocket.connConfig	typeref:typename:string
subroutes	vendor/github.com/go-chi/chi/tree.go	/^	subroutes Routes$/;"	m	struct:chi.node	typeref:typename:Routes
suffix	vendor/github.com/go-chi/cors/utils.go	/^	suffix string$/;"	m	struct:cors.wildcard	typeref:typename:string
swPool	vendor/nhooyr.io/websocket/compress_notjs.go	/^var swPool = map[int]*sync.Pool{}$/;"	v	package:websocket
swPoolMu	vendor/nhooyr.io/websocket/compress_notjs.go	/^var swPoolMu sync.RWMutex$/;"	v	package:websocket	typeref:typename:sync.RWMutex
swapRangeLessFunc	vendor/golang.org/x/exp/slices/zsortfunc.go	/^func swapRangeLessFunc[E any](data []E, a, b, n int, less func(a, b E) bool) {$/;"	f	package:slices	typeref:typename:(data []E, a, b, n int, less func(a, b E) bool)
swapRangeOrdered	vendor/golang.org/x/exp/slices/zsortordered.go	/^func swapRangeOrdered[E constraints.Ordered](data []E, a, b, n int) {$/;"	f	package:slices	typeref:typename:(data []E, a, b, n int)
symMergeLessFunc	vendor/golang.org/x/exp/slices/zsortfunc.go	/^func symMergeLessFunc[E any](data []E, a, m, b int, less func(a, b E) bool) {$/;"	f	package:slices	typeref:typename:(data []E, a, m, b int, less func(a, b E) bool)
symMergeOrdered	vendor/golang.org/x/exp/slices/zsortordered.go	/^func symMergeOrdered[E constraints.Ordered](data []E, a, m, b int) {$/;"	f	package:slices	typeref:typename:(data []E, a, m, b int)
symbol	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tree.go	/^	symbol Token$/;"	m	struct:antlr.TerminalNodeImpl	typeref:typename:Token
symbolicNames	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/dfa_serializer.go	/^	symbolicNames []string$/;"	m	struct:antlr.DFASerializer	typeref:typename:[]string
sync	vendor/github.com/klauspost/compress/flate/deflate.go	/^	sync          bool \/\/ requesting flush$/;"	m	struct:flate.compressor	typeref:typename:bool
syncFlush	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (d *compressor) syncFlush() error {$/;"	f	struct:flate.compressor	typeref:typename:error
table	vendor/github.com/klauspost/compress/flate/level1.go	/^	table [tableSize]tableEntry$/;"	m	struct:flate.fastEncL1	typeref:typename:[tableSize]tableEntry
table	vendor/github.com/klauspost/compress/flate/level2.go	/^	table [bTableSize]tableEntry$/;"	m	struct:flate.fastEncL2	typeref:typename:[bTableSize]tableEntry
table	vendor/github.com/klauspost/compress/flate/level3.go	/^	table [1 << 16]tableEntryPrev$/;"	m	struct:flate.fastEncL3	typeref:typename:[1 << 16]tableEntryPrev
table	vendor/github.com/klauspost/compress/flate/level4.go	/^	table  [tableSize]tableEntry$/;"	m	struct:flate.fastEncL4	typeref:typename:[tableSize]tableEntry
table	vendor/github.com/klauspost/compress/flate/level5.go	/^	table  [tableSize]tableEntry$/;"	m	struct:flate.fastEncL5	typeref:typename:[tableSize]tableEntry
table	vendor/github.com/klauspost/compress/flate/level6.go	/^	table  [tableSize]tableEntry$/;"	m	struct:flate.fastEncL6	typeref:typename:[tableSize]tableEntry
tableBits	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	tableBits       = 15             \/\/ Bits used in the table$/;"	c	package:flate
tableEntry	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^type tableEntry struct {$/;"	s	package:flate
tableEntryPrev	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^type tableEntryPrev struct {$/;"	s	package:flate
tableShift	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	tableShift      = 32 - tableBits \/\/ Right-shift to get the tableBits most significant bits of/;"	c	package:flate
tableSize	vendor/github.com/klauspost/compress/flate/fast_encoder.go	/^	tableSize       = 1 << tableBits \/\/ Size of the table$/;"	c	package:flate
tail	vendor/github.com/go-chi/chi/tree.go	/^	tail byte$/;"	m	struct:chi.node	typeref:typename:byte
tail	vendor/nhooyr.io/websocket/compress_notjs.go	/^	tail []byte$/;"	m	struct:websocket.trimLastFourBytesWriter	typeref:typename:[]byte
tailSort	vendor/github.com/go-chi/chi/tree.go	/^func (ns nodes) tailSort() {$/;"	f	type:chi.nodes
target	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/transition.go	/^	target            ATNState$/;"	m	struct:antlr.BaseTransition	typeref:typename:ATNState
test	vendor/github.com/go-chi/chi/Makefile	/^test:$/;"	t
test-middleware	vendor/github.com/go-chi/chi/Makefile	/^test-middleware:$/;"	t
test-router	vendor/github.com/go-chi/chi/Makefile	/^test-router:$/;"	t
text	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	text                   string$/;"	m	struct:antlr.BaseLexer	typeref:typename:string
text	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	text       string \/\/ text of the token.$/;"	m	struct:antlr.BaseToken	typeref:typename:string
text	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	text string$/;"	m	struct:antlr.BaseRewriteOperation	typeref:typename:string
thetype	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	thetype                int$/;"	m	struct:antlr.BaseLexer	typeref:typename:int
thetype	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer_action.go	/^	thetype int$/;"	m	struct:antlr.LexerTypeAction	typeref:typename:int
threshold	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils_set.go	/^	threshold int \/\/ when to expand$/;"	m	struct:antlr.array2DHashSet	typeref:typename:int
timeMu	vendor/github.com/google/uuid/time.go	/^	timeMu   sync.Mutex$/;"	v	package:uuid	typeref:typename:sync.Mutex
timeNow	vendor/github.com/google/uuid/time.go	/^	timeNow = time.Now \/\/ for testing$/;"	v	package:uuid
timeoutLoop	vendor/nhooyr.io/websocket/conn_notjs.go	/^func (c *Conn) timeoutLoop() {$/;"	f	struct:websocket.Conn
tls	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^	tls       *bool$/;"	m	struct:libsql.config	typeref:typename:*bool
tmpLitEncoding	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	tmpLitEncoding  *huffmanEncoder$/;"	m	struct:flate.huffmanBitWriter	typeref:typename:*huffmanEncoder
toCharString	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func (i *IntervalSet) toCharString() string {$/;"	f	struct:antlr.IntervalSet	typeref:typename:string
toIndexString	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func (i *IntervalSet) toIndexString() string {$/;"	f	struct:antlr.IntervalSet	typeref:typename:string
toLower	vendor/github.com/go-chi/cors/utils.go	/^const toLower = 'a' - 'A'$/;"	c	package:cors
toRead	vendor/github.com/klauspost/compress/flate/inflate.go	/^	toRead    []byte$/;"	m	struct:flate.decompressor	typeref:typename:[]byte
toTokenString	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/interval_set.go	/^func (i *IntervalSet) toTokenString(literalNames []string, symbolicNames []string) string {$/;"	f	struct:antlr.IntervalSet	typeref:typename:string
token	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	token                  Token$/;"	m	struct:antlr.BaseLexer	typeref:typename:Token
token	vendor/github.com/klauspost/compress/flate/token.go	/^type token uint32$/;"	t	package:flate	typeref:typename:uint32
tokenFactorySourcePair	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/lexer.go	/^	tokenFactorySourcePair *TokenSourceCharStreamPair$/;"	m	struct:antlr.BaseLexer	typeref:typename:*TokenSourceCharStreamPair
tokenIndex	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	tokenIndex int    \/\/ from 0..n-1 of the token object in the input stream$/;"	m	struct:antlr.BaseToken	typeref:typename:int
tokenSource	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^	tokenSource TokenSource$/;"	m	struct:antlr.CommonTokenStream	typeref:typename:TokenSource
tokenSource	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	tokenSource TokenSource$/;"	m	struct:antlr.TokenSourceCharStreamPair	typeref:typename:TokenSource
tokenType	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/token.go	/^	tokenType  int    \/\/ token type of the token$/;"	m	struct:antlr.BaseToken	typeref:typename:int
tokenTypeMapCache	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/recognizer.go	/^var tokenTypeMapCache = make(map[string]int)$/;"	v	package:antlr
tokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/common_token_stream.go	/^	tokens []Token$/;"	m	struct:antlr.CommonTokenStream	typeref:typename:[]Token
tokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	tokens TokenStream$/;"	m	struct:antlr.BaseRewriteOperation	typeref:typename:TokenStream
tokens	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/tokenstream_rewriter.go	/^	tokens TokenStream$/;"	m	struct:antlr.TokenStreamRewriter	typeref:typename:TokenStream
tokens	vendor/github.com/klauspost/compress/flate/deflate.go	/^	tokens tokens$/;"	m	struct:flate.compressor	typeref:typename:tokens
tokens	vendor/github.com/klauspost/compress/flate/token.go	/^	tokens    [maxStoreBlockSize + 1]token$/;"	m	struct:flate.tokens	typeref:typename:[maxStoreBlockSize + 1]token
tokens	vendor/github.com/klauspost/compress/flate/token.go	/^type tokens struct {$/;"	s	package:flate
tracer	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/parser.go	/^	tracer         *TraceListener$/;"	m	struct:antlr.BaseParser	typeref:typename:*TraceListener
transitions	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_state.go	/^	transitions []Transition$/;"	m	struct:antlr.BaseATNState	typeref:typename:[]Transition
tree	vendor/github.com/go-chi/chi/mux.go	/^	tree *node$/;"	m	struct:chi.Mux	typeref:typename:*node
treesFindAllNodes	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/trees.go	/^func treesFindAllNodes(t ParseTree, index int, findTokens bool, nodes *[]ParseTree) {$/;"	f	package:antlr
trimLastFourBytesWriter	vendor/nhooyr.io/websocket/compress_notjs.go	/^type trimLastFourBytesWriter struct {$/;"	s	package:websocket
trimWriter	vendor/nhooyr.io/websocket/write.go	/^	trimWriter *trimLastFourBytesWriter$/;"	m	struct:websocket.msgWriterState	typeref:typename:*trimLastFourBytesWriter
tryWriteCopy	vendor/github.com/klauspost/compress/flate/dict_decoder.go	/^func (dd *dictDecoder) tryWriteCopy(dist, length int) int {$/;"	f	struct:flate.dictDecoder	typeref:typename:int
tx	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^type tx struct {$/;"	s	package:ws
typ	vendor/github.com/go-chi/chi/tree.go	/^	typ nodeTyp$/;"	m	struct:chi.node	typeref:typename:nodeTyp
typ	vendor/github.com/klauspost/compress/flate/token.go	/^func (t token) typ() uint32 { return uint32(t) & typeMask }$/;"	f	type:flate.token	typeref:typename:uint32
typ	vendor/nhooyr.io/websocket/ws_js.go	/^	typ MessageType$/;"	m	struct:websocket.writer	typeref:typename:MessageType
typeMask	vendor/github.com/klauspost/compress/flate/token.go	/^	typeMask            = 3 << 30$/;"	c	package:flate
uint8Array	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^func uint8Array(src []byte) js.Value {$/;"	f	package:wsjs	typeref:typename:js.Value
unescapeCharsRegex	vendor/github.com/joho/godotenv/parser.go	/^	unescapeCharsRegex = regexp.MustCompile(`\\\\([^$])`)$/;"	v	package:godotenv
uniqueAlt	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_config_set.go	/^	uniqueAlt int$/;"	m	struct:antlr.BaseATNConfigSet	typeref:typename:int
unix	vendor/github.com/google/uuid/time.go	/^	unix       = 2440587          \/\/ Julian day of 1 Jan 1970$/;"	c	package:uuid
unknownHint	vendor/golang.org/x/exp/slices/sort.go	/^	unknownHint sortedHint = iota$/;"	c	package:slices	typeref:type:sortedHint
unlock	vendor/nhooyr.io/websocket/conn_notjs.go	/^func (m *mu) unlock() {$/;"	f	struct:websocket.mu
updateRouteHandler	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) updateRouteHandler() {$/;"	f	struct:chi.Mux
updateSubRoutes	vendor/github.com/go-chi/chi/mux.go	/^func (mx *Mux) updateSubRoutes(fn func(subMux *Mux)) {$/;"	f	struct:chi.Mux
updated_at	sql/schema/001_users.sql	/^    updated_at TEXT NOT NULL,$/;"	E	table:users
updated_at	sql/schema/002_notes.sql	/^    updated_at TEXT NOT NULL,$/;"	E	table:notes
url	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/http/hranaV2/hranaV2.go	/^	url              string$/;"	m	struct:hranaV2.hranaV2Conn	typeref:typename:string
url	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^	url       string$/;"	m	struct:libsql.httpConnector	typeref:typename:string
url	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^	url       string$/;"	m	struct:libsql.wsConnector	typeref:typename:string
url	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^	url    string$/;"	m	struct:libsql.fileConnector	typeref:typename:string
used	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^	used map[uint32]bool$/;"	m	struct:ws.idPool	typeref:typename:map[uint32]bool
userCreationContainer	static/index.html	/^    <div id="userCreationContainer" class="section">$/;"	I
user_id	sql/schema/002_notes.sql	/^    user_id TEXT NOT NULL REFERENCES users(id) ON DELETE CASCADE$/;"	E	table:notes
users	sql/schema/001_users.sql	/^CREATE TABLE users ($/;"	t
uuid	vendor/github.com/google/uuid/dce.go	/^package uuid$/;"	p
uuid	vendor/github.com/google/uuid/doc.go	/^package uuid$/;"	p
uuid	vendor/github.com/google/uuid/hash.go	/^package uuid$/;"	p
uuid	vendor/github.com/google/uuid/marshal.go	/^package uuid$/;"	p
uuid	vendor/github.com/google/uuid/node.go	/^package uuid$/;"	p
uuid	vendor/github.com/google/uuid/node_js.go	/^package uuid$/;"	p
uuid	vendor/github.com/google/uuid/node_net.go	/^package uuid$/;"	p
uuid	vendor/github.com/google/uuid/null.go	/^package uuid$/;"	p
uuid	vendor/github.com/google/uuid/sql.go	/^package uuid$/;"	p
uuid	vendor/github.com/google/uuid/time.go	/^package uuid$/;"	p
uuid	vendor/github.com/google/uuid/util.go	/^package uuid$/;"	p
uuid	vendor/github.com/google/uuid/uuid.go	/^package uuid$/;"	p
uuid	vendor/github.com/google/uuid/version1.go	/^package uuid$/;"	p
uuid	vendor/github.com/google/uuid/version4.go	/^package uuid$/;"	p
uuid ![build status](https://travis-ci.org/google/uuid.svg?branch=master)	vendor/github.com/google/uuid/README.md	/^# uuid ![build status](https:\/\/travis-ci.org\/google\/uuid.svg?branch=master)$/;"	c
v	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^	v js.Value$/;"	m	struct:wsjs.WebSocket	typeref:typename:js.Value
v0.9.0 (2016-03-31)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v0.9.0 (2016-03-31)$/;"	s	chapter:Changelog
v1.0.0 (2016-07-01)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v1.0.0 (2016-07-01)$/;"	s	chapter:Changelog
v1.5.0 (2020-11-12) - now with go.mod support	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v1.5.0 (2020-11-12) - now with go.mod support$/;"	s	chapter:Changelog
v1.5.1 (2020-12-06)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v1.5.1 (2020-12-06)$/;"	s	chapter:Changelog
v1.5.2 (2021-02-10)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v1.5.2 (2021-02-10)$/;"	s	chapter:Changelog
v1.5.3 (2021-02-21)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v1.5.3 (2021-02-21)$/;"	s	chapter:Changelog
v1.5.4 (2021-02-27)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v1.5.4 (2021-02-27)$/;"	s	chapter:Changelog
v2.0.0 (2017-01-06)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v2.0.0 (2017-01-06)$/;"	s	chapter:Changelog
v2.0.0-rc1 (2016-07-26)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v2.0.0-rc1 (2016-07-26)$/;"	s	chapter:Changelog
v2.1.0 (2017-03-30)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v2.1.0 (2017-03-30)$/;"	s	chapter:Changelog
v3.0.0 (2017-06-21)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v3.0.0 (2017-06-21)$/;"	s	chapter:Changelog
v3.1.0 (2017-07-10)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v3.1.0 (2017-07-10)$/;"	s	chapter:Changelog
v3.1.5 (2017-08-02)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v3.1.5 (2017-08-02)$/;"	s	chapter:Changelog
v3.2.1 (2017-08-31)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v3.2.1 (2017-08-31)$/;"	s	chapter:Changelog
v3.3.0 (2017-10-10)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v3.3.0 (2017-10-10)$/;"	s	chapter:Changelog
v3.3.1 (2017-11-20)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v3.3.1 (2017-11-20)$/;"	s	chapter:Changelog
v3.3.2 (2017-12-22)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v3.3.2 (2017-12-22)$/;"	s	chapter:Changelog
v3.3.3 (2018-08-27)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v3.3.3 (2018-08-27)$/;"	s	chapter:Changelog
v3.3.4 (2019-01-07)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v3.3.4 (2019-01-07)$/;"	s	chapter:Changelog
v4.0.0 (2019-01-10)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v4.0.0 (2019-01-10)$/;"	s	chapter:Changelog
v4.0.1 (2019-01-21)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v4.0.1 (2019-01-21)$/;"	s	chapter:Changelog
v4.0.2 (2019-02-26)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v4.0.2 (2019-02-26)$/;"	s	chapter:Changelog
v4.0.3 (2020-01-09)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v4.0.3 (2020-01-09)$/;"	s	chapter:Changelog
v4.0.4 (2020-03-24)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v4.0.4 (2020-03-24)$/;"	s	chapter:Changelog
v4.1.0 (2020-04-1)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v4.1.0 (2020-04-1)$/;"	s	chapter:Changelog
v4.1.1 (2020-04-16)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v4.1.1 (2020-04-16)$/;"	s	chapter:Changelog
v4.1.2 (2020-06-02)	vendor/github.com/go-chi/chi/CHANGELOG.md	/^## v4.1.2 (2020-06-02)$/;"	s	chapter:Changelog
validWireCloseCode	vendor/nhooyr.io/websocket/close_notjs.go	/^func validWireCloseCode(code StatusCode) bool {$/;"	f	package:websocket	typeref:typename:bool
value	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^func (r *execResponse) value(rowIdx int, colIdx int) (any, error) {$/;"	f	struct:ws.execResponse	typeref:typename:(any, error)
values	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func (a *AltDict) values() []interface{} {$/;"	f	struct:antlr.AltDict	typeref:typename:[]interface{}
verifyATN	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserialization_options.go	/^	verifyATN                     bool$/;"	m	struct:antlr.ATNDeserializationOptions	typeref:typename:bool
verifyATN	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/atn_deserializer.go	/^func (a *ATNDeserializer) verifyATN(atn *ATN) {$/;"	f	struct:antlr.ATNDeserializer
verifyClientRequest	vendor/nhooyr.io/websocket/accept.go	/^func verifyClientRequest(w http.ResponseWriter, r *http.Request) (errCode int, _ error) {$/;"	f	package:websocket	typeref:typename:(errCode int, _ error)
verifyServerExtensions	vendor/nhooyr.io/websocket/dial.go	/^func verifyServerExtensions(copts *compressionOptions, h http.Header) (*compressionOptions, erro/;"	f	package:websocket	typeref:typename:(*compressionOptions, error)
verifyServerResponse	vendor/nhooyr.io/websocket/dial.go	/^func verifyServerResponse(opts *DialOptions, copts *compressionOptions, secWebSocketKey string, /;"	f	package:websocket	typeref:typename:(*compressionOptions, error)
verifySubprotocol	vendor/nhooyr.io/websocket/dial.go	/^func verifySubprotocol(subprotos []string, resp *http.Response) error {$/;"	f	package:websocket	typeref:typename:error
w	vendor/github.com/klauspost/compress/flate/deflate.go	/^	w *huffmanBitWriter$/;"	m	struct:flate.compressor	typeref:typename:*huffmanBitWriter
w	vendor/nhooyr.io/websocket/compress_notjs.go	/^	w    io.Writer$/;"	m	struct:websocket.trimLastFourBytesWriter	typeref:typename:io.Writer
waitCloseHandshake	vendor/nhooyr.io/websocket/close_notjs.go	/^func (c *Conn) waitCloseHandshake() error {$/;"	f	unknown:websocket.Conn	typeref:typename:error
walk	vendor/github.com/go-chi/chi/tree.go	/^func (n *node) walk(fn func(eps endpoints, subroutes Routes) bool) bool {$/;"	f	struct:chi.node	typeref:typename:bool
walk	vendor/github.com/go-chi/chi/tree.go	/^func walk(r Routes, walkFn WalkFunc, parentRoute string, parentMw ...func(http.Handler) http.Han/;"	f	package:chi	typeref:typename:error
websocket	vendor/nhooyr.io/websocket/README.md	/^# websocket$/;"	c
websocket	vendor/nhooyr.io/websocket/accept.go	/^package websocket$/;"	p
websocket	vendor/nhooyr.io/websocket/accept_js.go	/^package websocket$/;"	p
websocket	vendor/nhooyr.io/websocket/close.go	/^package websocket$/;"	p
websocket	vendor/nhooyr.io/websocket/close_notjs.go	/^package websocket$/;"	p
websocket	vendor/nhooyr.io/websocket/compress.go	/^package websocket$/;"	p
websocket	vendor/nhooyr.io/websocket/compress_notjs.go	/^package websocket$/;"	p
websocket	vendor/nhooyr.io/websocket/conn.go	/^package websocket$/;"	p
websocket	vendor/nhooyr.io/websocket/conn_notjs.go	/^package websocket$/;"	p
websocket	vendor/nhooyr.io/websocket/dial.go	/^package websocket$/;"	p
websocket	vendor/nhooyr.io/websocket/doc.go	/^package websocket \/\/ import "nhooyr.io\/websocket"$/;"	p
websocket	vendor/nhooyr.io/websocket/frame.go	/^package websocket$/;"	p
websocket	vendor/nhooyr.io/websocket/netconn.go	/^package websocket$/;"	p
websocket	vendor/nhooyr.io/websocket/read.go	/^package websocket$/;"	p
websocket	vendor/nhooyr.io/websocket/stringer.go	/^package websocket$/;"	p
websocket	vendor/nhooyr.io/websocket/write.go	/^package websocket$/;"	p
websocket	vendor/nhooyr.io/websocket/ws_js.go	/^package websocket \/\/ import "nhooyr.io\/websocket"$/;"	p
websocketAddr	vendor/nhooyr.io/websocket/netconn.go	/^type websocketAddr struct {$/;"	s	package:websocket
websocketConn	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^type websocketConn struct {$/;"	s	package:ws
websocketExtension	vendor/nhooyr.io/websocket/accept.go	/^type websocketExtension struct {$/;"	s	package:websocket
websocketExtensions	vendor/nhooyr.io/websocket/accept.go	/^func websocketExtensions(h http.Header) []websocketExtension {$/;"	f	package:websocket	typeref:typename:[]websocketExtension
whereExpr	vendor/github.com/libsql/sqlite-antlr4-parser/sqliteparser/sqlite_parser.go	/^	whereExpr   IExprContext$/;"	m	struct:sqliteparser.Select_coreContext	typeref:typename:IExprContext
wildcard	vendor/github.com/go-chi/cors/utils.go	/^type wildcard struct {$/;"	s	package:cors
window	vendor/github.com/klauspost/compress/flate/deflate.go	/^	window     []byte$/;"	m	struct:flate.compressor	typeref:typename:[]byte
windowEnd	vendor/github.com/klauspost/compress/flate/deflate.go	/^	windowEnd  int$/;"	m	struct:flate.compressor	typeref:typename:int
windowMask	vendor/github.com/klauspost/compress/flate/deflate.go	/^	windowMask       = windowSize - 1$/;"	c	package:flate
windowSize	vendor/github.com/klauspost/compress/flate/deflate.go	/^	windowSize       = 1 << logWindowSize$/;"	c	package:flate
wordForBit	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func wordForBit(data []uint64, bit int) uint64 {$/;"	f	package:antlr	typeref:typename:uint64
wordsNeeded	vendor/github.com/antlr/antlr4/runtime/Go/antlr/v4/utils.go	/^func wordsNeeded(bit int) int {$/;"	f	package:antlr	typeref:typename:int
wrPos	vendor/github.com/klauspost/compress/flate/dict_decoder.go	/^	wrPos int  \/\/ Current output position in buffer$/;"	m	struct:flate.dictDecoder	typeref:typename:int
write	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (d *compressor) write(b []byte) (n int, err error) {$/;"	f	struct:flate.compressor	typeref:typename:(n int, err error)
write	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) write(b []byte) {$/;"	f	struct:flate.huffmanBitWriter
write	vendor/nhooyr.io/websocket/compress_notjs.go	/^func (sw *slidingWindow) write(p []byte) {$/;"	f	struct:websocket.slidingWindow
write	vendor/nhooyr.io/websocket/write.go	/^func (c *Conn) write(ctx context.Context, typ MessageType, p []byte) (int, error) {$/;"	f	unknown:websocket.Conn	typeref:typename:(int, error)
write	vendor/nhooyr.io/websocket/write.go	/^func (mw *msgWriterState) write(p []byte) (int, error) {$/;"	f	struct:websocket.msgWriterState	typeref:typename:(int, error)
write	vendor/nhooyr.io/websocket/ws_js.go	/^func (c *Conn) write(ctx context.Context, typ MessageType, p []byte) error {$/;"	f	struct:websocket.Conn	typeref:typename:error
write	vendor/nhooyr.io/websocket/wsjson/wsjson.go	/^func write(ctx context.Context, c *websocket.Conn, v interface{}) (err error) {$/;"	f	package:wsjson	typeref:typename:(err error)
writeBits	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) writeBits(b int32, nb uint8) {$/;"	f	struct:flate.huffmanBitWriter
writeBlock	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (d *compressor) writeBlock(tok *tokens, index int, eof bool) error {$/;"	f	struct:flate.compressor	typeref:typename:error
writeBlock	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) writeBlock(tokens *tokens, eof bool, input []byte) {$/;"	f	struct:flate.huffmanBitWriter
writeBlockDynamic	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) writeBlockDynamic(tokens *tokens, eof bool, input []byte, sync bool) /;"	f	struct:flate.huffmanBitWriter
writeBlockHuff	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) writeBlockHuff(eof bool, input []byte, sync bool) {$/;"	f	struct:flate.huffmanBitWriter
writeBlockSkip	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (d *compressor) writeBlockSkip(tok *tokens, index int, eof bool) error {$/;"	f	struct:flate.compressor	typeref:typename:error
writeBuf	vendor/nhooyr.io/websocket/conn_notjs.go	/^	writeBuf       []byte$/;"	m	struct:websocket.Conn	typeref:typename:[]byte
writeByte	vendor/github.com/klauspost/compress/flate/dict_decoder.go	/^func (dd *dictDecoder) writeByte(c byte) {$/;"	f	struct:flate.dictDecoder
writeBytes	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) writeBytes(bytes []byte) {$/;"	f	struct:flate.huffmanBitWriter
writeClose	vendor/nhooyr.io/websocket/close_notjs.go	/^func (c *Conn) writeClose(code StatusCode, reason string) error {$/;"	f	unknown:websocket.Conn	typeref:typename:error
writeCode	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) writeCode(c hcode) {$/;"	f	struct:flate.huffmanBitWriter
writeContext	vendor/nhooyr.io/websocket/netconn.go	/^	writeContext context.Context$/;"	m	struct:websocket.netConn	typeref:typename:context.Context
writeControl	vendor/nhooyr.io/websocket/write.go	/^func (c *Conn) writeControl(ctx context.Context, opcode opcode, p []byte) error {$/;"	f	unknown:websocket.Conn	typeref:typename:error
writeCopy	vendor/github.com/klauspost/compress/flate/dict_decoder.go	/^func (dd *dictDecoder) writeCopy(dist, length int) int {$/;"	f	struct:flate.dictDecoder	typeref:typename:int
writeDynamicHeader	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) writeDynamicHeader(numLiterals int, numOffsets int, numCodegens int, /;"	f	struct:flate.huffmanBitWriter
writeError	vendor/nhooyr.io/websocket/write.go	/^func (c *Conn) writeError(code StatusCode, err error) {$/;"	f	unknown:websocket.Conn
writeFixedHeader	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) writeFixedHeader(isEof bool) {$/;"	f	struct:flate.huffmanBitWriter
writeFrame	vendor/nhooyr.io/websocket/write.go	/^func (c *Conn) writeFrame(ctx context.Context, fin bool, flate bool, opcode opcode, p []byte) (_/;"	f	unknown:websocket.Conn	typeref:typename:(_ int, err error)
writeFrameHeader	vendor/nhooyr.io/websocket/frame.go	/^func writeFrameHeader(h header, w *bufio.Writer, buf []byte) (err error) {$/;"	f	package:websocket	typeref:typename:(err error)
writeFrameMu	vendor/nhooyr.io/websocket/conn_notjs.go	/^	writeFrameMu   *mu$/;"	m	struct:websocket.Conn	typeref:typename:*mu
writeFramePayload	vendor/nhooyr.io/websocket/write.go	/^func (c *Conn) writeFramePayload(p []byte) (n int, err error) {$/;"	f	unknown:websocket.Conn	typeref:typename:(n int, err error)
writeHeader	vendor/nhooyr.io/websocket/conn_notjs.go	/^	writeHeader    header$/;"	m	struct:websocket.Conn	typeref:typename:header
writeHeaderBuf	vendor/nhooyr.io/websocket/conn_notjs.go	/^	writeHeaderBuf [8]byte$/;"	m	struct:websocket.Conn	typeref:typename:[8]byte
writeMark	vendor/github.com/klauspost/compress/flate/dict_decoder.go	/^func (dd *dictDecoder) writeMark(cnt int) {$/;"	f	struct:flate.dictDecoder
writeMu	vendor/nhooyr.io/websocket/write.go	/^	writeMu *mu$/;"	m	struct:websocket.msgWriterState	typeref:typename:*mu
writeOutBits	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) writeOutBits() {$/;"	f	struct:flate.huffmanBitWriter
writeSlice	vendor/github.com/klauspost/compress/flate/dict_decoder.go	/^func (dd *dictDecoder) writeSlice() []byte {$/;"	f	struct:flate.dictDecoder	typeref:typename:[]byte
writeStoredBlock	vendor/github.com/klauspost/compress/flate/deflate.go	/^func (d *compressor) writeStoredBlock(buf []byte) error {$/;"	f	struct:flate.compressor	typeref:typename:error
writeStoredHeader	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) writeStoredHeader(length int, isEof bool) {$/;"	f	struct:flate.huffmanBitWriter
writeTimeout	vendor/nhooyr.io/websocket/conn_notjs.go	/^	writeTimeout chan context.Context$/;"	m	struct:websocket.Conn	typeref:typename:chan context.Context
writeTimer	vendor/nhooyr.io/websocket/netconn.go	/^	writeTimer   *time.Timer$/;"	m	struct:websocket.netConn	typeref:typename:*time.Timer
writeTokens	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) writeTokens(tokens []token, leCodes, oeCodes []hcode) {$/;"	f	struct:flate.huffmanBitWriter
writer	vendor/github.com/klauspost/compress/flate/huffman_bit_writer.go	/^	writer io.Writer$/;"	m	struct:flate.huffmanBitWriter	typeref:typename:io.Writer
writer	vendor/nhooyr.io/websocket/write.go	/^func (c *Conn) writer(ctx context.Context, typ MessageType) (io.WriteCloser, error) {$/;"	f	unknown:websocket.Conn	typeref:typename:(io.WriteCloser, error)
writer	vendor/nhooyr.io/websocket/ws_js.go	/^type writer struct {$/;"	s	package:websocket
writerFunc	vendor/nhooyr.io/websocket/write.go	/^type writerFunc func(p []byte) (int, error)$/;"	t	package:websocket	typeref:typename:func(p []byte) (int, error)
wroteClose	vendor/nhooyr.io/websocket/conn_notjs.go	/^	wroteClose bool$/;"	m	struct:websocket.Conn	typeref:typename:bool
ws	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^	ws *websocketConn$/;"	m	struct:ws.conn	typeref:typename:*websocketConn
ws	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/driver.go	/^package ws$/;"	p
ws	vendor/github.com/tursodatabase/libsql-client-go/libsql/internal/ws/websockets.go	/^package ws$/;"	p
ws	vendor/nhooyr.io/websocket/ws_js.go	/^	ws wsjs.WebSocket$/;"	m	struct:websocket.Conn	typeref:typename:wsjs.WebSocket
wsConnector	vendor/github.com/tursodatabase/libsql-client-go/libsql/sql.go	/^type wsConnector struct {$/;"	s	package:libsql
wsjs	vendor/nhooyr.io/websocket/internal/wsjs/wsjs_js.go	/^package wsjs$/;"	p
wsjson	vendor/nhooyr.io/websocket/wsjson/wsjson.go	/^package wsjson \/\/ import "nhooyr.io\/websocket\/wsjson"$/;"	p
xorshift	vendor/golang.org/x/exp/slices/sort.go	/^type xorshift uint64$/;"	t	package:slices	typeref:typename:uint64
xsync	vendor/nhooyr.io/websocket/internal/xsync/go.go	/^package xsync$/;"	p
xsync	vendor/nhooyr.io/websocket/internal/xsync/int64.go	/^package xsync$/;"	p
xtob	vendor/github.com/google/uuid/util.go	/^func xtob(x1, x2 byte) (byte, bool) {$/;"	f	package:uuid	typeref:typename:(byte, bool)
xvalues	vendor/github.com/google/uuid/util.go	/^var xvalues = [256]byte{$/;"	v	package:uuid
zero	vendor/github.com/klauspost/compress/flate/huffman_code.go	/^func (h hcode) zero() bool {$/;"	f	type:flate.hcode	typeref:typename:bool
zeroID	vendor/github.com/google/uuid/node.go	/^	zeroID [6]byte \/\/ nodeID with only 0's$/;"	v	package:uuid	typeref:typename:[6]byte
| [WithValue]            | Short-hand middleware to set a key/value on the request context         |	vendor/github.com/go-chi/chi/README.md	/^| [WithValue]            | Short-hand middleware to set a key\/value on the request context     /;"	s	chapter:<img alt="chi" src="https://cdn.rawgit.com/go-chi/chi/master/_examples/chi.svg" width="220" />
| [stampede](https://github.com/go-chi/stampede)     | HTTP request coalescer                                      |	vendor/github.com/go-chi/chi/README.md	/^| [stampede](https:\/\/github.com\/go-chi\/stampede)     | HTTP request coalescer               /;"	s	chapter:<img alt="chi" src="https://cdn.rawgit.com/go-chi/chi/master/_examples/chi.svg" width="220" />
